[
  {
    "title": "404 Not Found",
    "url": "https://www.cloudpanel.io/docs/v2/python/frontend-area/vhost/",
    "html": "404 Not Found\nnginx"
  },
  {
    "title": "404 Not Found",
    "url": "https://www.cloudpanel.io/docs/v2/python/frontend-area/ssh-ftp/#ssh-login",
    "html": "404 Not Found\nnginx"
  },
  {
    "title": "404 Not Found",
    "url": "https://www.cloudpanel.io/docs/v2/nodejs/frontend-area/ssh-ftp/#ssh-login",
    "html": "404 Not Found\nnginx"
  },
  {
    "title": "CLP E-Mail Sender From | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/tools/wordpress/clp-email-sender-from/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nCLP E-Mail Sender From\n\nCLP E-Mail Sender From is a WordPress plugin to change the E-Mail from Name and Address.\n\nServices like Amazon SES require to send E-Mails from verified Domains.\n\nYou may be interested in: How to configure Amazon SES with Postfix\n\nInstallation\nClone the CLP E-Mail Sender From Git Repository:\ngit clone https://github.com/cloudpanel-io/clp-email-sender-from\n\n\nCopy the file clp-email-sender-from.php to the directory wp-content/plugins/.\n\nActive the plugin in your Wordpress Admin:\n\nGo to Settings -> General and set From Name and From E-Mail and click on the button Saves Changes.\nChangelog\n\nv1.0.0 - [2021-01-05]\n\nInitial Version\nEdit this page\nPrevious\n« Server Benchmarks\nInstallation\nChangelog\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "404 Not Found",
    "url": "https://www.cloudpanel.io/docs/v2/frontend-area/cron-jobs/ssh-ftp/#ssh-login",
    "html": "404 Not Found\nnginx"
  },
  {
    "title": "404 Not Found",
    "url": "https://www.cloudpanel.io/docs/v2/frontend-area/admin-area/security/#adding-a-rule",
    "html": "404 Not Found\nnginx"
  },
  {
    "title": "404 Not Found",
    "url": "https://www.cloudpanel.io/docs/v2/frontend-area/databases/ssh-ftp/#ssh-login",
    "html": "404 Not Found\nnginx"
  },
  {
    "title": "Best Practices - Security | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/guides/best-practices/security/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nBest Practices - Security\n\nYou will find best practices on this site to keep CloudPanel, the server, and your sites safe.\n\nCloudPanel Security\nPort Firewall\n\nCloudPanel is being shipped with an integrated Firewall based on UFW, also known as Uncomplicated Firewall.\n\nOpen port 22 (SSH) and 8443 (CloudPanel) only for your IPs. If you don't have a static IP, consider a VPN solution like OpenVPN.\n\nCLOUD PROVIDERS\n\nMost cloud providers offer firewall/security groups to manage the inbound and outbound traffic. The recommended way is to use them instead of the integrated Firewall. For performance and security reasons, it's recommended to block all traffic before reaching the server.\n\nBasic Auth\n\nA Basic Auth in front of CloudPanel adds an extra layer of security, especially if you can't close/whitelist port 8443 (CloudPanel).\n\nTwo-Factor Authentication\n\nEnable Two-Factor Authentication for your users, providing a second layer of security in case a user is using a weak password or the password is stolen.\n\nConstant Updates\n\nSoftware may have security vulnerabilities, therefore is important to Update CloudPanel constantly.\n\nBackups\n\nData security is very important. A good backup strategy is essential for every site. Hardware can break anytime, the file system can become corrupted, or someone deletes files accidentally. With a good backup strategy, we can limit the data loss to a minimum in case of an accident. The most critical part is the database which constantly gets updated.\n\nWith more than 11 years of Managed Magento Hosting experience, we found out that hourly Amazon Machine Images (AMI) are a great backup solution for our customers. AWS basically creates one full backup and performs incremental backups every hour.\n\nAutomated Backups\n\nWith CloudPanel, you can enable automatic backups; see the available Cloud Features.\n\nRemote Backups\n\nWith the integrated Remote Backups, you can store copies of your sites to services like Amazon S3, Wasabi, Digital Ocean Spaces, Dropbox, SFTP, and other storage providers.\n\nTest your Backups\n\nIf you need to restore some files or databases, you don't want to discover that your backups are not working. A good approach to test your backups and an up-to-date test/staging environment. To achieve that, you can develop a script that updates your environments, e.g., once daily via cron job.\n\nServer Security\nUpgrade Software and Operating System\n\nStaying up to date on all software and operating system-related security fixes is essential. Server systems and software technologies are so complicated that some of the security vulnerabilities they carry can easily go unnoticed.\n\nSecurity Hardening\n\nTo ensure maximum server protection, you should complete the process of server security hardening. Simply put, that means applying basic and advanced security measures to address vulnerabilities in your server software and operating system to boost overall server security.\n\nCommon ways to achieve server hardening include:\n\nUsing strong passwords\nCompleting regular system backups\nKeeping operating systems up to date and applying security patches as they are released\nInstalling firewalls and antivirus software\nRemoving unnecessary third-party software\nCommunication and data encryption\nSite Security\nWeb Application Firewall\n\nProtecting your site against common web attacks like DDoS Attacks, SQL Injections, or Cross-Site Scripting is crucial.\n\nWe can recommend the following services:\n\nCloudflare, see also the CloudPanel Cloudflare Integration\nSucuri\nAWS Web Application Firewall\nEdit this page\nPrevious\n« PHP Site\nNext\nServer Benchmarks »\nCloudPanel Security\nPort Firewall\nBasic Auth\nTwo-Factor Authentication\nConstant Updates\nBackups\nAutomated Backups\nRemote Backups\nTest your Backups\nServer Security\nUpgrade Software and Operating System\nSecurity Hardening\nSite Security\nWeb Application Firewall\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Performance - Server Benchmarks | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/guides/best-practices/performance/server-benchmarks/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nPerformance - Server Benchmarks\n\nServer Performance is the basis for achieving fast page loading times. We have tested the server with the most powerful processors on Amazon Web Server, Google Compute Engine, Hetzner Cloud, Digital Ocean and VULTR.\nTo get the best server performance for your money, run the benchmark script to check and compare the result.\n\nThe Benchmark Script\n\nWe are using the Yet-Another-Bench-Script to benchmark the server performance.\n\nBLANK SERVER\n\nTo benchmark the server performance, spin up a blank server with Ubuntu 22.04 or Debian 11 and execute the script below.\n\nHow to run\nLogin via SSH as root user or become root:\nssh root@instance-ip-address\n\nExecute the script with disabled network performance test:\ncurl -sL yabs.sh | bash -s -- -i\n\nCheck and compare the Geekbench 5 Benchmark Test Result:\nThe 10 Fastest Server Types\nSINGLE CORE PERFORMANCE\n\nThe Single-Core Performance is important for Node.js and PHP Applications that can't take advantage of multiple processor cores.\n\n\tInfrastructure Provider\tServer Type\tArchitecture\tSingle Core\tMonthly Price\n1.\tCloudnovi\tVPS2 (2 vCPU, 4 GB RAM),\nAMD Ryzen 5900x\tX86_64\t1316\t~ 14.99 €\n15% with Coupon Code \"CloudPanel\"\n2.\tAmazon Web Services\tc6i.large (2 vCPU, 4 GB RAM),\nIntel Xeon Platinum 8375C\tX86_64\t1174\t~ 42 € RI\n3.\tVULTR\tCPU Optimized (2 vCPU, 4 GB RAM),\nAMD EPYC-Rome\tX86_64\t1168\t~ 40 €\n4.\tVULTR\tCloud High Frequency (2 vCPU, 2 GB RAM), Intel Skylake Core\tX86_64\t1152\t~ 18 €\n5.\tAmazon Web Services\tc6a.large (2 vCPU, 4 GB RAM),\nAMD EPYC 7R13\tX86_64\t1134\t~ 37 € RI\n6.\tHetzner Cloud\tCCX12 (2 vCPU, 8 GB RAM),\nAMD EPYC 7003\tX86_64\t1128\t~ 24 €\n7.\tDigital Ocean\tCPU Optimized (2 vCPU, 4 GB RAM),\nIntel Xeon Platinum 8358\tX86_64\t1103\t~ 42 €\n8.\tAmazon Web Services\tc7g.large (2 vCPU, 4 GB RAM),\nAWS Graviton3\tARM64\t1082\t~ 35 € RI\n9.\tDigital Ocean\tBasic Premium Intel (2 vCPU, 2 GB RAM),\nDo-Premium-Intel\tX86_64\t1003\t~ 21 €\n10.\tHetzner Cloud\tCPX11 (2 vCPU, 2 GB RAM),\nAMD EPYC 2nd GEN\tX86_64\t931\t~ 5 €\nContribute\n\nDid you find a fast server that we should add to the list?\n\nRun the benchmark script above and make sure that the result is reproducible.\n\nJoin our Discord Server and let us know which cloud/provider and server type you tested.\n\nReal World Example\n\nIn the following Real World Example, you see how fast CloudPanel runs on a High-Performance Server.\nIf CloudPanel (Lightweight PHP Application) isn't running fast, then don't expect High-Performance for other applications.\n\nTo check the CloudPanel performance, use the Google Chrome Browser, log into CloudPanel and click on Sites.\n\nMake a right-click and click on Inspect to open the Chrome Developer Toolbar.\n\nGo to Network and click on Doc and reload 3-4 times to get the best result.\nIn our example below, you see 41ms rendering time, which is very fast. If you see a value >= 150ms, you may think about switching to a faster server.\nEdit this page\nPrevious\n« Security\nNext\nCLP E-Mail Sender From »\nThe Benchmark Script\nHow to run\nThe 10 Fastest Server Types\nContribute\nReal World Example\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Best Practices - PHP Site Migration | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/guides/best-practices/migration/php-site/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nBest Practices - PHP Site Migration\n\nYou will find best practices on this site on how to migrate a PHP Site to CloudPanel. In our example, we will migrate our site www.domain.com to CloudPanel. Before going live, we need to ensure that our site is running as well as expected before doing the live switch.\n\nCreate a PHP Site\nLIVE DOMAIN\n\nCreate your site with the live domain so that the redirection from non-www to www and vice versa is correctly generated.\n\nCreate a PHP Site via CloudPanel or via CLI with your domain www.domain.com.\n\nIn the Vhost of your site, you see that the subdomain www1.domain.com has been added by CloudPanel, which will be used as our pre-live domain for testing purposes.\n\nCreate a DNS Record (A) for the subdomain www1.domain.com.\n\nEnable Basic Authentication to prevent being indexed by search engines.\n\nSite Migration\n\nCopy your sites files from the old server to CloudPanel.\n\nExport the database by using mysqldump:\n\nmysqldump -h127.0.0.1 -u$userName -p --opt --single-transaction --quick $databaseName > dump.sql\n\n\nUpload the database dump dump.sql to CloudPanel.\n\nLogin via SSH with the site user and import it via CloudPanel Cli.\n\nclpctl db:import --databaseName=my-database --file=dump.sql\n\nConfigure your site to run under the subdomain https://www1.domain.com.\nTesting\n\nTake some time for testing to ensure that your site is running as expected on CloudPanel.\n\nLive Switch\n\nPut a maintenance site on the old server to prevent visitors from accessing the site.\n\nExport files like a media directory, which may have been changed in the meantime.\n\nExport the database by using mysqldump:\n\nmysqldump -h127.0.0.1 -u$userName -p --opt --single-transaction --quick $databaseName > dump.sql\n\n\nUpload the database dump dump.sql to CloudPanel.\n\nLogin via SSH with the site user and import it via CloudPanel Cli.\n\nAdd a host file entry for the final testing before switching the DNS Records.\n\nWindows\nLinux/Mac\nOpen your text editor in Administrator mode.\nIn the text editor, open C:\\Windows\\System32\\drivers\\etc\\hosts.\nAdd the IP Address and domains.\n8.8.8.8 www.domain.com domain.com\n\nSave the changes.\n\nOpen your browser and do a final testing of https://www.domain.com.\n\nChange the DNS records for domain.com and www.domain.com to the server ip.\n\nDisable Basic Authentication.\n\nRemove the host file entry from step 6.\n\nEdit this page\nPrevious\n« Mailcow\nNext\nSecurity »\nCreate a PHP Site\nSite Migration\nTesting\nLive Switch\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Mailcow | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/guides/applications/mailcow/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nMailcow\n\nOn this site, you will find a step-by-step guide on how to run the mail server Mailcow on CloudPanel.\nThe mail server Mailcow is a dockerized application that is addressed via Reverse Proxy.\n\nSYSTEM REQUIREMENTS\n>= 1 Core\n>= 6 GB of RAM\n>= 20 GB Disk\nDisable Postfix\n\nLogin via SSH as root and stop and disable the postfix service:\n\nsystemctl stop postfix && systemctl disable postfix\n\nDocker Installation\nLogin via SSH as root:\nssh root@instance-ip-address\n\nInstall Docker with Docker Compose with the following command:\nUbuntu 22.04 LTS\nDebian 11 LTS\n\nInstall docker and the docker compose plugin:\n\ncurl -sSL https://get.docker.com/ | CHANNEL=stable sh && apt install docker-compose-plugin\n\nMailcow Installation\nClone the Mailcow Git Repository to /opt/mailcow-dockerized:\ngit clone https://github.com/mailcow/mailcow-dockerized /opt/mailcow-dockerized\n\nInitialize Mailcow by executing the generate_config.sh script:\ncd /opt/mailcow-dockerized/ && ./generate_config.sh\n\nSet the Mail server hostname (FQDN), e.g., mail.domain.com.\nOpen the configuration file and change the values for HTTP_PORT, HTTP_BIND, HTTPS_PORT, HTTPS_BIND.\nnano /opt/mailcow-dockerized/mailcow.conf\n\nHTTP_PORT=7080\nHTTP_BIND=127.0.0.1\n\nHTTPS_PORT=7443\nHTTPS_BIND=127.0.0.1\n\nStarting Mailcow\n\nTo start Mailcow, we go to the directory /opt/mailcow-dockerized/ and launch the docker containers.\n\ncd /opt/mailcow-dockerized/ && docker compose pull && docker compose up -d\n\nReverse Proxy Configuration\n\nTo access Mailcow via our domain https://mail.domain.com, we create a Reverse Proxy and forward the traffic to port 7443.\n\nIn CloudPanel, create a Reverse Proxy with your Domain Name and https://127.0.0.1:7443 as Reverse Proxy Url.\n\nGo to your Reverse Proxy and issue an SSL/TLS Certificate.\n\nDone. You can now login https://mail.domain.com with the username admin and password moohoo.\n\nFor security reasons, we recommend putting a Basic Authentication in front of your Mailcow installation.\nEdit this page\nPrevious\n« Changelog\nNext\nPHP Site »\nDisable Postfix\nDocker Installation\nMailcow Installation\nStarting Mailcow\nReverse Proxy Configuration\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Installation | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/dploy/installation/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nInstallation\n\nOn this page, we explain step by step how to install and use dploy on CloudPanel.\n\nDownload\n\nLogin via SSH as root user.\n\nDownload dploy, save it to /usr/local/bin/dploy and make it executable.\n\ncurl -sS https://dploy.cloudpanel.io/dploy -o /usr/local/bin/dploy; \\\necho \"8809e9eb63483487f16b0a2e4075a8b18350a02470405e2f786bf82fd7e5fb53 /usr/local/bin/dploy\" | \\\nsha256sum -c && chmod +x /usr/local/bin/dploy\n\nEnter dploy to see the available commands.\nInitialize\n\nWith the dploy init command, the config file and the project directory structure gets created.\n\n~/.dploy           // dploy directory\n |- config.yml     // dploy config file\n |- overlays       // Overlay files that get copied into the release\n   |  - .env       // For example .env file which contains sensitive information\n\n~/htdocs/www.domain.com                    // The deploy_directory\n |- current -> releases/2023-05...-v1.0.1  // Symlink to the current release.\n |- releases                   \n   |- 2023-06-01-08-08-08-v1.0.1    \n     |- var/logs -> shared/var/logs        // Symlink to the shared directory shared/var/logs \n   |- 2023-06-01-08-08-08-v1.0.0    \n   ...\n |- shared                                 // Directory for shared files between releases\n   |- var/logs\n\n\nLogin via SSH as the site user.\n\nRun dploy init, to initialize the project. A pre-configured config file is downloaded from the templates repository, and the project directory structure is created.\n\nPHP Applications\nNode.js Applications\nStatic HTML Sites\nPython\nGeneric\nLaravel\nSymfony\nMagento 2\nWordPress\nWooCommerce\ndploy init\n\nEnter your Git Repository SSH URL and the Deploy Directory.\nConfiguration\n\nThe dploy init command creates the configuration file config.yml.\n\nOpen the config.yml and change the shared directories, before and after commands, if needed.\n\nPHP APPLICATIONS\n\nMake sure to reload the right php-fpm service in the after_commands.\n\nnano ~/.dploy/config.yml\n\nSudoers File\nPHP APPLICATIONS ONLY\n\nThis step is only needed for PHP Applications; skip it if you are deploying a Node.js or Static HTML site.\n\nFor security reasons, the site users cannot reload the PHP-FPM Service, which is needed to clear the realpath cache after switching the current symlink to the latest release.\n\nTo allow site users to reload only the PHP-FPM Service, we create a sudoers file.\n\nReplace john-doe with your site user and execute the following command as root:\n\necho 'john-doe ALL = NOPASSWD: /usr/bin/systemctl reload php*-fpm' >> /etc/sudoers.d/dploy\n\nSSH Config\n\nTo clone a private git repository, we need to create an ssh key pair and add the public key to the git repository.\n\nLogin via SSH as the site user.\n\nGo to the SSH directory of your site user:\n\ncd ~/.ssh/\n\nCreate an SSH Key Pair.\nNO PASSPHRASE\n\nCreate the private key without a passphrase.\n\nssh-keygen -f dploy-git\n\nCopy the public key and add it to your git hosting provider like github.com.\ncat ~/.ssh/dploy-git.pub\n\n\nOn github.com, go to Settings and then click on Deploy keys bottom left.\n\nCreate a SSH Config File to define the private key that is being used to clone the git repository:\nnano ~/.ssh/config\n\n\nOpen the config file, modify the Host and User and save it.\n\nHost github.com\nUser git\nIdentityFile ~/.ssh/dploy-git\n\nGo to the tmp directory of your site, and test if cloning the git repository works as expected.\ncd ~/tmp/\n\n\nClone git repository:\n\ngit clone git@github.com:cloudpanel-io/dploy-dploy-repo.git\n\nSite Root Directory\n\nGo to your site and change the Root Directory to current.\n\nOverlays\n\nOverlays are mostly environment-specific files copied into the release directory after cloning the repository.\n\nFor Laravel or Symfony applications, you would put the .env file in this directory.\n\nFor Magento 2, you would put the app/etc/env.php file in the same structure.\n\ncd ~/.dploy/overlays\n\nDeploy\n\nWith the command dploy deploy, you can deploy a branch or tag. For deploying to production, it's recommended to deploy tags to roll back to a previous version if needed.\n\nLogin via SSH as the site user.\n\nRun the dploy deploy command:\n\nDeploying a branch like main:\n\ndploy deploy main\n\n\nDeploying a tag:\n\ndploy deploy v1.0.0\n\nProcess Description\n\nWhen you execute the command dploy deploy, the following steps are being executed:\n\nCloning the git repository into a new release directory.\n\nCopying the overlay files from ~/.dploy/overlays into the release directory.\n\nSettings shared directories symlinks.\n\nExecuting the before_commands commands.\n\nSetting the current symlink to the newest release.\n\nExecuting the after_commands like reloading PHP-FPM to clear the realpath cache.\n\nCleaning old releases.\n\nUpdate\n\ndploy is shipped with a self-update command to make the update process easy.\n\nLogin via SSH as root user.\n\nRun dploy self-update to get the latest version.\n\ndploy self-update\n\nEdit this page\nPrevious\n« Introduction\nNext\nChangelog »\nDownload\nInitialize\nConfiguration\nSudoers File\nSSH Config\nSite Root Directory\nOverlays\nDeploy\nUpdate\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Python deployment with uwsgi | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/python/deployment/uwsgi/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nPython deployment with uwsgi\n\nOn this site, you will find a step-by-step guide on deploying a Python Application using uWSGI with NGINX.\n\nCreating a Python Site\n\nCreate a Python Site with the right Python Version and ensure the App Port is correct.\n\nCreating a uWSGI Config\n\nFor running a Python Application in production, we use The uWSGI Project, which ensures that our Application is available after a reboot.\n\nLog in via SSH with the Root User and go to the uwsgi apps directory:\ncd /etc/uwsgi/apps-enabled/\n\nCreate a configuration file like domain.uwsgi.ini and modify the example configuration below to your needs:\nUWSGI CONFIGURATION\n\nChange the values of socket, wsgi-file, uid, and gid.\nYou may want to look at the official uWSGI Documentation for further settings.\n\nOn the Django Documentation, you find helpful information about deploying Django Applications via uWSGI.\n\n[uwsgi]\nplugins       = python3\nmaster        = true\nprotocol      = uwsgi\nsocket        = 127.0.0.1:8090\nwsgi-file     = /home/site-user/htdocs/python-project/wsgi.py\n\n# In case you're using virtualenv uncomment this:\n#virtualenv = /home/site-user/htdocs/python-project\n\n# Needed for OAuth/OpenID\nbuffer-size   = 8192\n\n# Reload when consuming too much of memory\nreload-on-rss = 250\n\n# Increase number of workers for heavily loaded sites\nworkers       = 4\n\n# Enable threads for Sentry error submission\nenable-threads = true\n\n# Child processes do not need file descriptors\nclose-on-exec = true\n\n# Avoid default 0000 umask\numask = 0022\n\n# Run as weblate user\nuid = site-user\ngid = site-user\n\n# Enable harakiri mode (kill requests after some time)\n# harakiri = 3600\n# harakiri-verbose = true\n\n# Enable uWSGI stats server\n# stats = :1717\n# stats-http = true\n\n# Do not log some errors caused by client disconnects\nignore-sigpipe = true\nignore-write-errors = true\ndisable-write-exception = true\n\nVhost Change\nGo to the Vhost of your site.\n\nBelow you see the default vhost. It's forwarding all requests via reverse proxy to the App Port.\nIt's useful for development where you use the built-in server, provided by most the Python Applications.\n\nserver {\n  listen 80;\n  listen [::]:80;\n  listen 443 ssl http2;\n  listen [::]:443 ssl http2;\n  {{ssl_certificate_key}}\n  {{ssl_certificate}}\n  server_name www.domain.com;\n  {{root}}\n\n  {{nginx_access_log}}\n  {{nginx_error_log}}\n\n  if ($scheme != \"https\") {\n    rewrite ^ https://$host$uri permanent;\n  }\n\n  location ~ /.well-known {\n    auth_basic off;\n    allow all;\n  }\n\n  {{settings}}\n\n  index index.html;\n\n  location /uwsgi {\n    include uwsgi_params;\n    uwsgi_read_timeout 3600;\n    #uwsgi_pass unix:///run/uwsgi/app/weblate/socket;\n    uwsgi_pass 127.0.0.1:{{app_port}};\n  }\n\n  location / {\n    proxy_pass http://127.0.0.1:{{app_port}}/;\n    proxy_http_version 1.1;\n    proxy_set_header X-Forwarded-Host $host;\n    proxy_set_header X-Forwarded-Server $host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto $scheme;\n    proxy_set_header Host $http_host;\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection \"Upgrade\";\n    proxy_pass_request_headers on;\n    proxy_max_temp_file_size 0;\n    proxy_connect_timeout 900;\n    proxy_send_timeout 900;\n    proxy_read_timeout 900;\n    proxy_buffer_size 128k;\n    proxy_buffers 4 256k;\n    proxy_busy_buffers_size 256k;\n    proxy_temp_file_write_size 256k;\n  }\n\n  location ~* ^.+\\.(css|js|jpg|jpeg|gif|png|ico|gz|svg|svgz|ttf|otf|woff|woff2|eot|mp4|ogg|ogv|webm|webp|zip|swf)$ {\n    add_header Access-Control-Allow-Origin \"*\";\n    expires max;\n    access_log on;\n  }\n\n  if (-f $request_filename) {\n    break;\n  }\n}\n\nReplace the default vhost with the following one, replacing the location / to forward all requests to the uWSGI Service.\nSERVER_NAME\n\nReplace the value of server_name with your domain.\n\nserver {\n  listen 80;\n  listen [::]:80;\n  listen 443 ssl http2;\n  listen [::]:443 ssl http2;\n  {{ssl_certificate_key}}\n  {{ssl_certificate}}\n  server_name www.domain.com;\n  {{root}}\n\n  {{nginx_access_log}}\n  {{nginx_error_log}}\n\n  if ($scheme != \"https\") {\n    rewrite ^ https://$host$uri permanent;\n  }\n\n  location ~ /.well-known {\n    auth_basic off;\n    allow all;\n  }\n\n  {{settings}}\n\n  index index.html;\n\n  location / {\n    include uwsgi_params;\n    uwsgi_read_timeout 3600;\n    #uwsgi_pass unix:///run/uwsgi/app/weblate/socket;\n    uwsgi_pass 127.0.0.1:{{app_port}};\n  }\n\n  #location ~* ^.+\\.(css|js|jpg|jpeg|gif|png|ico|gz|svg|svgz|ttf|otf|woff|woff2|eot|mp4|ogg|ogv|webm|webp|zip|swf)$ {\n  #  add_header Access-Control-Allow-Origin \"*\";\n  #  expires max;\n  #  access_log on;\n  #}\n\n  if (-f $request_filename) {\n    break;\n  }\n}\n\nRestart uwsgi Service\n\nRestart the uwsgi service via systemctl to apply our configuration.\n\nsystemctl restart uwsgi\n\nService Check\n\nTo check if uwsgi is listening on our requested port e.g., 8090, we use netstat:\n\nnetstat -tulpn |grep uwsgi\n\n\nIf everything is correct, you should see an output like this:\n\ntcp 16 0 127.0.0.1:8090 0.0.0.0:* LISTEN 8872/uwsgi\n\n\nReboot your instance to confirm that your application is working as expected.\n\nLogs\n\nFor troubleshooting, you can check the uwsgi logs, located in /var/log/uwsgi/app/.\n\nEdit this page\nPrevious\n« Node.js\nNext\nAdding a Python Version »\nCreating a Python Site\nCreating a uWSGI Config\nVhost Change\nRestart uwsgi Service\nService Check\nLogs\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Changelog | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/dploy/changelog/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nChangelog\nv1.0.0 - [2023-06-01]\nInitial Release\nEdit this page\nPrevious\n« Installation\nNext\nMailcow »\nv1.0.0 - 2023-06-01\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Adding a Python Version | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/python/guides/adding-a-python-version/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nAdding a Python Version\n\nOn this site, you will find a step-by-step guide on adding a custom Python Version to the instance.\n\nWe will add an older version Python 3.8, to our instance as an example.\n\nUbuntu\nPPA Method\n\nThe first and easiest solution for Ubuntu users would be to import the deadsnakes team Launchpad PPA.\nThis will always contain the latest updates for Python and all extra packages that may be required.\n\nInstall the prerequisite for adding custom PPAs:\napt update && apt -y install software-properties-common\n\nAdd the deadsnakes/ppa to your APT package source list:\nadd-apt-repository ppa:deadsnakes/ppa -y\n\nInstall Python 3.8:\napt update && apt -y install python3.8\n\nDebian\nInstall Dependencies\n\nFirst, we need to install the required dependencies to be able to build Python 3.8 from the source.\n\napt update && apt -y install build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev libsqlite3-dev libbz2-dev\n\nCompiling from Source\nPYTHON RELEASES\n\nAll Python Releases can be found on the following site: https://www.python.org/downloads/\n\nDownload the source for Python 3.8.\nwget https://www.python.org/ftp/python/3.8.13/Python-3.8.13.tgz\n\nExtract the downloaded tarball:\ntar xf Python-3.8.13.tgz\n\nConfigure with the flag --enable-optimizations:\ncd Python-3.8.13\n./configure --prefix=/usr --enable-optimizations\n\nRun make to start the compile process:\nmake\n\nInstall Python 3.8 via altinstall, which maintains the default Python binary path in /usr/bin/python.\nmake altinstall\n\nRemove the source and the tgz:\nrm -rf Python-3.8.13 Python-3.8.13.tgz\n\nDone! Python 3.8 has been installed and is now available to select in CloudPanel.\nRemove Dependencies\napt --purge remove zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libreadline-dev libffi-dev libsqlite3-dev libbz2-dev\n\nEdit this page\nPrevious\n« With uwsgi\nNext\nIntroduction »\nUbuntu\nPPA Method\nDebian\nInstall Dependencies\nCompiling from Source\nRemove Dependencies\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Node.js for PHP Sites | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/php/guides/nodejs/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nNode.js for PHP Sites\n\nOn this site, you will find a guide on installing Node.js via the nvm (Node Version Manager) for your site.\n\nLog in via SSH with the Site User:\nssh john-doe@server-ip-address\n\nInstall nvm with the following command:\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash\n\nUpdate the current shell environment:\nsource ~/.bashrc\n\nInstall your required Node.js version e.g. 22:\nnvm install 22\n\nActivate the installed Node.js version:\nnvm use 22\n\nDone! Check the Node.js version:\nnode -v\n\nEdit this page\nPrevious\n« ionCube Loader\nNext\nWith uwsgi »\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "ionCube Loader | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/php/guides/ioncube-loader/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nionCube Loader\nATTENTION\n\nThere is currently no ionCube Loader for PHP 8.0 available.\n\nUsing ionCube encoded and secured PHP files requires a file called the ionCube Loader to be installed on the web server and made available to PHP.\n\nEnable Loader\n\nThe ionCube Loader extension is being shipped by default for all PHP Versions but disabled for performance reasons.\n\nTo enable ionCube Loader for a specific PHP Version, you need to enable it for CLI and FPM:\n\nOpen the php.ini for the CLI and FPM:\nnano /etc/php/8.2/cli/php.ini\nnano /etc/php/8.2/fpm/php.ini\n\nGo to the end of the file and remove the semicolon in the beginning.\n;zend_extension=ioncube_loader_lin_8.2.so\n\nRestart the PHP-FPM service:\nsystemctl restart php8.2-fpm\n\nEdit this page\nPrevious\n« Building a PHP Extension\nNext\nNode.js »\nEnable Loader\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Building a PHP Extension | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/php/guides/building-a-php-extension/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nBuilding a PHP Extension\n\nOn this site, you find a step-by-step guide on how to build a PHP Extension for a specific PHP Version.\n\nBuilding a PHP Extension\n\nMake a backup of your instance.\n\nInstall the dev package for the PHP Version.\n\napt update && apt -y install php8.3-dev\n\nGo to https://pecl.php.net/ and search for the extension like ssh2:\nDownload the tgz via cURL:\ncurl -O https://pecl.php.net/get/ssh2-1.4.1.tgz\n\nExtract the tgz:\ntar xf ssh2-1.4.1.tgz\n\nphpize the extension:\ncd ssh2-1.4.1\nphpize8.3\n\nCompile and build the extension:\n./configure --with-php-config=/usr/bin/php-config8.3\nmake\nmake install\n\nRegister the extension for CLI and FPM in the php.ini:\n\nCLI\n\nnano /etc/php/8.3/cli/php.ini\n\n\nAdd the following line at the end:\n\nextension=ssh2.so\n\n\nFPM\n\nnano /etc/php/8.3/fpm/php.ini\n\n\nAdd the following line at the end:\n\nextension=ssh2.so\n\nRestart the PHP-FPM service:\nsystemctl restart php8.3-fpm\n\nTesting\n\nAfter registering the PHP Extension, you can check if the extension is loaded for CLI and FPM correctly.\n\nCLI\n\nYou can use grep to check if the extension is loaded:\n\nphp8.3 -m |grep 'ssh2' \n\n\nIf you don't get an output, then the extension is NOT loaded.\n\nFPM\n\nTo check if the extension is loaded for FPM, you can check the phpinfo.\n\nCreate the file t.php in the root directory.\n\nPut the following content in the file:\n\n<?php\nphpinfo();\n\nOpen t.php in your browser and search for the extension.\n\nIf you don't find information about the extension, then it's NOT loaded.\n\nEdit this page\nPrevious\n« Other\nNext\nionCube Loader »\nBuilding a PHP Extension\nTesting\nCLI\nFPM\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Other | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/php/applications/other/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nOther\n\nOn this site, you find a guide on setting up other PHP Applications with CloudPanel.\n\nCreating a PHP Site\nVia CloudPanel\nClick on + Add Site and then click on Create a PHP Site.\nSelect the Application Generic, enter Domain Name, Site User, Site User Password, and click on Create.\nROOT DIRECTORY\n\nAfter creating the site, you may need to change the Root Directory, for example, if your PHP Application is using public as entry point.\n\nAdd /public if your PHP Application is using the public directory as an entry point.\n\nVia CloudPanel CLI\n\nIf you like the command line, you can create a PHP Site with the following command as root user.\n\nclpctl site:add:php --domainName=www.domain.com --phpVersion=8.3 --vhostTemplate='Generic' --siteUser='john-doe' --siteUserPassword='!secretPassword!'\n\nUploading Application Files\n\nLog in via SSH with the Site User or use SFTP to upload files.\n\nssh john-doe@server-ip-address\n\nVhost Changes\n\nUse the Vhost Editor to add some application-specific rules, if needed.\n\nEdit this page\nPrevious\n« Yii\nNext\nBuilding a PHP Extension »\nCreating a PHP Site\nVia CloudPanel\nVia CloudPanel CLI\nUploading Application Files\nVhost Changes\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Yii | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/php/applications/yii/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nYii\n\nOn this site, you find a guide to install Yii on CloudPanel.\n\nCreating a Yii Site\nVia CloudPanel\nClick on + Add Site and then click on Create a PHP Site.\nSelect the Application Yii 2, enter Domain Name, Site User, Site User Password, and click on Create.\nVia CloudPanel CLI\n\nIf you like the command line, you can create a Yii Site with the following command as root user.\n\nclpctl site:add:php --domainName=www.domain.com --phpVersion=8.3 --vhostTemplate='Yii 2' --siteUser='john-doe' --siteUserPassword='!secretPassword!'\n\nCreating a Yii Project\nLog in via SSH with the Site User:\nssh john-doe@server-ip-address\n\nGo to htdocs and delete the directory which CloudPanel has created:\ncd htdocs && rm -rf www.domain.com\n\nCreate a Yii Project via Composer:\nphp8.3 /usr/local/bin/composer create-project --prefer-dist yiisoft/yii2-app-basic www.domain.com\n\nDone! Yii has been installed.\nEdit this page\nPrevious\n« WordPress\nNext\nOther »\nCreating a Yii Site\nVia CloudPanel\nVia CloudPanel CLI\nCreating a Yii Project\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "WordPress | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/php/applications/wordpress/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nWordPress\n\nOn this site, you find a guide to install WordPress on CloudPanel. The installation takes less than one minute.\n\nCreating a WordPress Site\nClick on + Add Site and then click on Create a WordPress Site.\nEnter the Domain Name, Site Title, Admin User Name, Admin Password, and Admin E-Mail and click on Create.\nDone. The WordPress Site has been created.\nEdit this page\nPrevious\n« WooCommerce\nNext\nYii »\nCreating a WordPress Site\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "WooCommerce | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/php/applications/woocommerce/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nWooCommerce\n\nOn this site, you find a guide to install WooCommerce on CloudPanel.\n\nCreating a WordPress Site\nClick on + Add Site and then click on Create a WordPress Site.\nEnter the Domain Name, Site Title, Admin User Name, Admin Password, and Admin E-Mail and click on Create.\nLogin to the admin area of WordPress and click on Plugins --> Add New in the left menu and search for WooCommerce.\nClick on Install Now, Activate the Plugin, and go through the WooCommerce Installer.\nDone! WooCommerce has been installed.\nEdit this page\nPrevious\n« TYPO3\nNext\nWordPress »\nCreating a WordPress Site\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "TYPO3 | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/php/applications/typo3/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nTYPO3\n\nOn this site, you find a guide to install TYPO3 on CloudPanel.\n\nCreating a TYPO3 Site\nVia CloudPanel\nClick on + Add Site and then click on Create a PHP Site.\nSelect the Application TYPO3 v13, enter Domain Name, Site User, Site User Password, and click on Create.\nVia CloudPanel CLI\n\nIf you like the command line, you can create a TYPO3 Site with the following command as root user.\n\nclpctl site:add:php --domainName=www.domain.com --phpVersion=8.3 --vhostTemplate='TYPO3 13' --siteUser='john-doe' --siteUserPassword='!secretPassword!'\n\nCreating a TYPO3 Project\nLog in via SSH with the Site User:\nssh john-doe@server-ip-address\n\nGo to htdocs and delete the directory which CloudPanel has created:\ncd htdocs && rm -rf www.domain.com\n\nCreate a TYPO3 Project via Composer:\nphp8.3 /usr/local/bin/composer create-project typo3/cms-base-distribution:~13 www.domain.com\n\nOpen your site in your browser and go through the installation wizard:\nCreate the empty file FIRST_INSTALL and reload the browser:\ntouch ~/htdocs/www.domain.com/public/FIRST_INSTALL\n\nCreate a Database, open your site in the browser, and go through the TYPO3 Installer.\nDone! TYPO3 has been installed.\nEdit this page\nPrevious\n« Symfony\nNext\nWooCommerce »\nCreating a TYPO3 Site\nVia CloudPanel\nVia CloudPanel CLI\nCreating a TYPO3 Project\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Symfony | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/php/applications/symfony/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nSymfony\n\nOn this site, you find a guide to install Symfony on CloudPanel.\n\nCreating a Symfony Site\nVia CloudPanel\nClick on + Add Site and then click on Create a PHP Site.\nSelect the Application Symfony 7, enter Domain Name, Site User, Site User Password, and click on Create.\nVia CloudPanel CLI\n\nIf you like the command line, you can create a Symfony Site with the following command as root user.\n\nclpctl site:add:php --domainName=www.domain.com --phpVersion=8.3 --vhostTemplate='Symfony 7' --siteUser='john-doe' --siteUserPassword='!secretPassword!'\n\nCreating a Symfony Project\nLog in via SSH with the Site User:\nssh john-doe@server-ip-address\n\nGo to htdocs and delete the directory which CloudPanel has created:\ncd htdocs && rm -rf www.domain.com\n\nCreate a Symfony Project via Composer:\nphp8.3 /usr/local/bin/composer create-project symfony/skeleton:^7 www.domain.com\n\nDone! Symfony has been installed.\nEdit this page\nPrevious\n« Slim\nNext\nTYPO3 »\nCreating a Symfony Site\nVia CloudPanel\nVia CloudPanel CLI\nCreating a Symfony Project\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Slim | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/php/applications/slim/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nSlim\n\nOn this site, you find a guide to install Slim on CloudPanel.\n\nCreating a Slim Site\nVia CloudPanel\nClick on + Add Site and then click on Create a PHP Site.\nSelect the Application Slim 4, enter Domain Name, Site User, Site User Password, and click on Create.\nVia CloudPanel CLI\n\nIf you like the command line, you can create a Slim Site with the following command as root user.\n\nclpctl site:add:php --domainName=www.domain.com --phpVersion=7.4 --vhostTemplate='Slim 4' --siteUser='john-doe' --siteUserPassword='!secretPassword!'\n\nCreating a Slim Project\nLog in via SSH with the Site User:\nssh john-doe@server-ip-address\n\nGo to htdocs and delete the directory which CloudPanel has created:\ncd htdocs && rm -rf www.domain.com\n\nCreate a Slim Project via Composer:\nphp7.4 /usr/local/bin/composer create-project slim/slim-skeleton:~4 www.domain.com\n\nDone! Slim has been installed.\nEdit this page\nPrevious\n« Shopware\nNext\nSymfony »\nCreating a Slim Site\nVia CloudPanel\nVia CloudPanel CLI\nCreating a Slim Project\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Shopware | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/php/applications/shopware/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nShopware\n\nOn this site, you find a guide to install Shopware on CloudPanel.\n\nCreating a Shopware Site\nVia CloudPanel\nClick on + Add Site and then click on Create a PHP Site.\nSelect the Application Shopware 6, enter Domain Name, Site User, Site User Password, and click on Create.\nVia CloudPanel CLI\n\nIf you like the command line, you can create a Shopware Site with the following command as root user.\n\nclpctl site:add:php --domainName=www.domain.com --phpVersion=8.3 --vhostTemplate='Shopware 6' --siteUser='john-doe' --siteUserPassword='!secretPassword!'\n\nCreating a Shopware Project\nLog in via SSH with the Site User:\nssh john-doe@server-ip-address\n\nGo to htdocs and delete the directory which CloudPanel has created:\ncd htdocs && rm -rf www.domain.com\n\nCreate a Symfony Project via Composer:\nphp8.3 /usr/local/bin/composer create-project shopware/production www.domain.com\n\nEnsure to have a valid TLS Certificate installed for your domain.\nCreate a Database, open your site in the browser, and go through the Shopware Installer.\nDone! Shopware is now installed.\nEdit this page\nPrevious\n« PrestaShop\nNext\nSlim »\nCreating a Shopware Site\nVia CloudPanel\nVia CloudPanel CLI\nCreating a Shopware Project\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "PrestaShop | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/php/applications/prestashop/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nPrestaShop\n\nOn this site, you find a guide to install PrestaShop on CloudPanel.\n\nCreating a PrestaShop Site\nVia CloudPanel\nClick on + Add Site and then click on Create a PHP Site.\nSelect the Application PrestaShop 1.7, enter Domain Name, Site User, Site User Password, and click on Create.\nVia CloudPanel CLI\n\nIf you like the command line, you can create a PrestaShop Site with the following command as root user.\n\nclpctl site:add:php --domainName=www.domain.com --phpVersion=7.3 --vhostTemplate='PrestaShop 1.7' --siteUser='john-doe' --siteUserPassword='!secretPassword!'\n\nCreating a PrestaShop Project\nLog in via SSH with the Site User:\nssh john-doe@server-ip-address\n\nGo to the tmp directory:\ncd ~/tmp\n\nDownload and extract the latest PrestaShop 1.7 version.\ncurl -sL https://github.com/PrestaShop/PrestaShop/archive/1.7.8.7.tar.gz | tar xfz -\n\nLATEST VERSION\n\nYou find the latest version on github: https://github.com/PrestaShop/PrestaShop/releases\n\nCopy files to the root directory of your site:\ncp -R PrestaShop-1.7.8.7/*  ~/htdocs/www.domain.com/\n\nInstall the project via composer:\ncd ~/htdocs/www.domain.com/\nphp7.3 /usr/local/bin/composer install\n\nClean up the tmp directory.\nrm -rf ~/tmp/*\n\nCreate a Database, open your site in the browser, and go through the PrestaShop Installer.\nDone! PrestaShop is now installed.\nEdit this page\nPrevious\n« ownCloud\nNext\nShopware »\nCreating a PrestaShop Site\nVia CloudPanel\nVia CloudPanel CLI\nCreating a PrestaShop Project\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "OwnCloud | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/php/applications/owncloud/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nOwnCloud\n\nOn this site, you find a guide to install ownCloud on CloudPanel.\n\nCreating a OwnCloud Site\nVia CloudPanel\nClick on + Add Site and then click on Create a PHP Site.\nSelect the Application OwnCloud 10, enter Domain Name, Site User, Site User Password, and click on Create.\nVia CloudPanel CLI\n\nIf you like the command line, you can create a OwnCloud Site with the following command as root user.\n\nclpctl site:add:php --domainName=www.domain.com --phpVersion=7.4 --vhostTemplate='OwnCloud 10' --siteUser='john-doe' --siteUserPassword='!secretPassword!'\n\nCreating a OwnCloud Project\nLog in via SSH with the Site User:\nssh john-doe@server-ip-address\n\nGo to the tmp directory:\ncd ~/tmp\n\nDownload and extract the latest OwnCloud version.\ncurl -sL https://download.owncloud.com/server/stable/owncloud-complete-latest.tar.bz2 | tar xfj -\n\nCopy files to the root directory of your site:\ncp -R owncloud/* ~/htdocs/www.domain.com/\n\nClean up the tmp directory.\nrm -rf ~/tmp/*\n\nCreate a Database, open your site in the browser, and go through the Owncloud Installer.\nDone. OwnCloud has been installed.\nEdit this page\nPrevious\n« Nextcloud\nNext\nPrestaShop »\nCreating a OwnCloud Site\nVia CloudPanel\nVia CloudPanel CLI\nCreating a OwnCloud Project\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Nextcloud | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/php/applications/nextcloud/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nNextcloud\n\nOn this site, you find a guide to install Nextcloud on CloudPanel.\n\nCreating a Nextcloud Site\nVia CloudPanel\nClick on + Add Site and then click on Create a PHP Site.\nSelect the Application Nextcloud 29, enter Domain Name, Site User, Site User Password, and click on Create.\nVia CloudPanel CLI\n\nIf you like the command line, you can create a Nextcloud Site with the following command as root user.\n\nclpctl site:add:php --domainName=www.domain.com --phpVersion=8.2 --vhostTemplate='Nextcloud 29' --siteUser='john-doe' --siteUserPassword='!secretPassword!'\n\nCreating a Nextcloud Project\nLog in via SSH with the Site User:\nssh john-doe@server-ip-address\n\nGo to the tmp directory:\ncd ~/tmp\n\nDownload and extract the latest Nextcloud version.\ncurl -sLo nextcloud.zip https://download.nextcloud.com/server/releases/latest.zip && unzip nextcloud.zip -d nextcloud\n\nCopy files to the root directory of your site:\ncp -R nextcloud/nextcloud/* ~/htdocs/www.domain.com/\n\nClean up the tmp directory.\nrm -rf ~/tmp/*\n\nCreate a Database, open your site in the browser, and go through the Nextcloud Installer.\nDone. Nextcloud has been installed.\nEdit this page\nPrevious\n« Neos\nNext\nownCloud »\nCreating a Nextcloud Site\nVia CloudPanel\nVia CloudPanel CLI\nCreating a Nextcloud Project\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Neos | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/php/applications/neos/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nNeos\n\nOn this site, you find a guide to install Neos on CloudPanel.\n\nCreating a Neos Site\nVia CloudPanel\nClick on + Add Site and then click on Create a PHP Site.\nSelect the Application Neos 8, enter Domain Name, Site User, Site User Password, and click on Create.\nVia CloudPanel CLI\n\nIf you like the command line, you can create a Neos Site with the following command as root user.\n\nclpctl site:add:php --domainName=www.domain.com --phpVersion=8.3 --vhostTemplate='Neos 8' --siteUser='john-doe' --siteUserPassword='!secretPassword!'\n\nCreating a Neos Project\nLog in via SSH with the Site User:\nssh john-doe@server-ip-address\n\nGo to htdocs and delete the directory which CloudPanel has created:\ncd htdocs && rm -rf www.domain.com\n\nCreate a Neos Project via Composer:\nphp8.3 /usr/local/bin/composer create-project neos/neos-base-distribution:~8 www.domain.com\n\nCreate a Database, open your site in the browser, and go through the Neos Installer.\nEdit this page\nPrevious\n« Moodle\nNext\nNextcloud »\nCreating a Neos Site\nVia CloudPanel\nVia CloudPanel CLI\nCreating a Neos Project\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Moodle | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/php/applications/moodle/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nMoodle\n\nOn this site, you find a guide to install Moodle on CloudPanel.\n\nCreating a Moodle Site\nVia CloudPanel\nClick on + Add Site and then click on Create a PHP Site.\nSelect the Application Moodle 4, enter Domain Name, Site User, Site User Password, and click on Create.\nVia CloudPanel CLI\n\nIf you like the command line, you can create a Moodle Site with the following command as root user.\n\nclpctl site:add:php --domainName=www.domain.com --phpVersion=8.0 --vhostTemplate='Moodle 4' --siteUser='john-doe' --siteUserPassword='!secretPassword!'\n\nCreating a Moodle Project\nLog in via SSH with the Site User:\nssh john-doe@server-ip-address\n\nGo to the tmp directory:\ncd ~/tmp\n\nDownload and extract the latest Moodle 4 version.\ncurl -sL https://download.moodle.org/download.php/direct/stable403/moodle-latest-403.tgz | tar xfz -\n\nCopy files to the root directory of your site:\ncp -R ~/tmp/moodle/* ~/htdocs/www.domain.com/\n\nClean up the tmp directory.\nrm -rf ~/tmp/*\n\nCreate a Database, open your site in the browser, and go through the Moodle Installer.\nEdit this page\nPrevious\n« Mautic\nNext\nNeos »\nCreating a Moodle Site\nVia CloudPanel\nVia CloudPanel CLI\nCreating a Moodle Project\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Mautic | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/php/applications/mautic/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nMautic\n\nOn this site, you find a guide to install Mautic on CloudPanel.\n\nCreating a Mautic Site\nVia CloudPanel\nClick on + Add Site and then click on Create a PHP Site.\nSelect the Application Mautic 5, enter Domain Name, Site User, Site User Password, and click on Create.\nVia CloudPanel CLI\n\nIf you like the command line, you can create a Mautic Site with the following command as root user.\n\nclpctl site:add:php --domainName=www.domain.com --phpVersion=8.0 --vhostTemplate='Mautic 5' --siteUser='john-doe' --siteUserPassword='!secretPassword!'\n\nCreating a Mautic Project\nLog in via SSH with the Site User:\nssh john-doe@server-ip-address\n\n\nInstall Node.js via nvm.\n\nGo to htdocs and delete the directory which CloudPanel has created:\n\ncd htdocs && rm -rf www.domain.com\n\nClone the latest version from the Mautic Git Repository:\ngit clone -b 5.0.2 https://github.com/mautic/mautic.git ~/htdocs/www.domain.com/\n\nLATEST VERSION\n\nYou find the latest version on github: https://github.com/mautic/mautic/releases\n\nInstall the project via Composer:\ncd ~/htdocs/www.domain.com/\nphp8.0 /usr/local/bin/composer install\n\nCreate a Database, open your site in the browser, and go through the Mautic Installer.\nDone. Mautic has been installed.\nEdit this page\nPrevious\n« Matomo\nNext\nMoodle »\nCreating a Mautic Site\nVia CloudPanel\nVia CloudPanel CLI\nCreating a Mautic Project\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Matomo | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/php/applications/matomo/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nMatomo\n\nOn this site, you find a guide to install Matomo on CloudPanel.\n\nCreating a Matomo Site\nVia CloudPanel\nClick on + Add Site and then click on Create a PHP Site.\nSelect the Application Matomo 5, enter Domain Name, Site User, Site User Password, and click on Create.\nVia CloudPanel CLI\n\nIf you like the command line, you can create a Matomo Site with the following command as root user.\n\nclpctl site:add:php --domainName=www.domain.com --phpVersion=8.0 --vhostTemplate='Matomo 5' --siteUser='john-doe' --siteUserPassword='!secretPassword!'\n\nCreating a Matomo Project\nLog in via SSH with the Site User:\nssh john-doe@server-ip-address\n\nGo to the tmp directory:\ncd ~/tmp\n\nDownload and extract the latest Matomo 5 version.\ncurl -sL https://builds.matomo.org/matomo-latest.tar.gz | tar xfz -\n\nCopy files to the root directory of your site:\ncp -R ~/tmp/matomo/* ~/htdocs/www.domain.com/\n\nClean up the tmp directory.\nrm -rf ~/tmp/*\n\nCreate a Database, open your site in the browser, and go through the Matomo Installer.\nDone! Matomo has been installed.\nEdit this page\nPrevious\n« Magento\nNext\nMautic »\nCreating a Matomo Site\nVia CloudPanel\nVia CloudPanel CLI\nCreating a Matomo Project\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Magento | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/php/applications/magento/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nMagento\n\nOn this site, you find a guide to install Magento 2 on CloudPanel.\n\nPrerequirements\n\nMagento 2 requires to have Elasticsearch 7.9 installed.\n\nFollow the guide https://www.elastic.co/guide/en/elasticsearch/reference/7.9/deb.html to learn how to install Elasticsearch 7.9.\n\nCreating a Magento Site\nVia CloudPanel\nClick on + Add Site and then click on Create a PHP Site.\nSelect the Application Magento 2, enter Domain Name, Site User, Site User Password, and click on Create.\nVia CloudPanel CLI\n\nIf you like the command line, you can create a Magento Site with the following command as root user.\n\nclpctl site:add:php --domainName=www.domain.com --phpVersion=8.2 --vhostTemplate='Magento 2' --siteUser='john-doe' --siteUserPassword='!secretPassword!'\n\nCreating a Magento 2 Project\nLog in via SSH with the Site User:\nssh john-doe@server-ip-address\n\nGo to htdocs and delete the directory which CloudPanel has created:\ncd htdocs && rm -rf www.domain.com\n\nCreate a Magento Project via Composer.\nMAGENTO AUTHENTICATION KEYS REQUIRED\n\nGet Magento Authentication Keys before you create the project via composer.\n\nphp8.2 /usr/local/bin/composer create-project --repository-url=https://repo.magento.com/ magento/project-community-edition www.domain.com\n\n\nCreate a Database and copy the Database Name, Database User Name, and Database User Password.\n\nGo to the installation directory and execute the setup::install script from Magento:\n\ncd ~/htdocs/www.domain.com/\n\nEDIT PARAMETERS\n\nEdit the parameters like key, db-host, db-name to your needs.\n\nphp8.2 bin/magento setup:install --backend-frontname='admin' --key='18Av6ITivOZG3gwY1DhMDWtlLfx1spLP' --session-save='files' --db-host='127.0.0.1' --db-name='magento2' --db-user='magento2' --db-password='magento2' --base-url='https://www.domain.com/' --base-url-secure='https://www.domain.com/' --admin-user='admin' --admin-password='!admin123!' --admin-email='john@doe.com' --admin-firstname='John' --admin-lastname='Doe'\n\nDone. Magento 2 has been installed.\nEdit this page\nPrevious\n« Laravel\nNext\nMatomo »\nPrerequirements\nCreating a Magento Site\nVia CloudPanel\nVia CloudPanel CLI\nCreating a Magento 2 Project\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Laravel | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/php/applications/laravel/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nLaravel\n\nOn this site, you find a guide to install Laravel on CloudPanel.\n\nCreating a Laravel Site\nVia CloudPanel\nClick on + Add Site and then click on Create a PHP Site.\nSelect the Application Laravel 11, enter Domain Name, Site User, Site User Password, and click on Create.\nVia CloudPanel CLI\n\nIf you like the command line, you can create a Laravel Site with the following command as root user.\n\nclpctl site:add:php --domainName=www.domain.com --phpVersion=8.3 --vhostTemplate='Laravel 11' --siteUser='john-doe' --siteUserPassword='!secretPassword!'\n\nCreating a Laravel Project\nLog in via SSH with the Site User:\nssh john-doe@server-ip-address\n\nGo to htdocs and delete the directory which CloudPanel has created:\ncd htdocs && rm -rf www.domain.com\n\nCreate a Laravel Project via Composer:\nphp8.3 /usr/local/bin/composer create-project --prefer-dist laravel/laravel:^11 -n www.domain.com\n\nDone! You can now open your site in your browser to see the welcome page.\nEdit this page\nPrevious\n« Laminas\nNext\nMagento »\nCreating a Laravel Site\nVia CloudPanel\nVia CloudPanel CLI\nCreating a Laravel Project\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Laminas | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/php/applications/laminas/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nLaminas\n\nOn this site, you find a guide to install Laminas on CloudPanel.\n\nCreating a Laminas Site\nVia CloudPanel\nClick on + Add Site and then click on Create a PHP Site.\nSelect the Application Laminas, enter Domain Name, Site User, Site User Password, and click on Create.\nVia CloudPanel CLI\n\nIf you like the command line, you can create a Laminas Site with the following command as root user.\n\nclpctl site:add:php --domainName=www.domain.com --phpVersion=8.3 --vhostTemplate='Laminas' --siteUser='john-doe' --siteUserPassword='!secretPassword!'\n\nCreating a Laminas Project\nLog in via SSH with the Site User:\nssh john-doe@server-ip-address\n\nGo to htdocs and delete the directory which CloudPanel has created:\ncd htdocs && rm -rf www.domain.com\n\nCreate a Laminas Project via Composer:\nphp8.3 /usr/local/bin/composer create-project -s dev laminas/laminas-mvc-skeleton www.domain.com\n\nDone! You can now open your site in your browser to see the welcome page.\nEdit this page\nPrevious\n« Joomla\nNext\nLaravel »\nCreating a Laminas Site\nVia CloudPanel\nVia CloudPanel CLI\nCreating a Laminas Project\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Joomla | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/php/applications/joomla/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nJoomla\n\nOn this site, you find a guide to install Joomla on CloudPanel.\n\nCreating a Joomla Site\nVia CloudPanel\nClick on + Add Site and then click on Create a PHP Site.\nSelect the Application Joomla 4, enter Domain Name, Site User, Site User Password, and click on Create.\nVia CloudPanel CLI\n\nIf you like the command line, you can create a Joomla Site with the following command as root user.\n\nclpctl site:add:php --domainName=www.domain.com --phpVersion=8.3 --vhostTemplate='Joomla 5' --siteUser='john-doe' --siteUserPassword='!secretPassword!'\n\nCreating a Joomla Project\nLog in via SSH with the Site User:\nssh john-doe@server-ip-address\n\nGo to the tmp directory:\ncd ~/tmp\n\nDownload and extract the latest Joomla 5 version.\nmkdir ~/tmp/joomla && curl -Lso joomla.tar.gz https://downloads.joomla.org/cms/joomla5/5-1-0/Joomla_5-1-0-Stable-Full_Package.tar.gz?format=gz && gunzip joomla.tar.gz && tar xfz joomla.tar -C ~/tmp/joomla/\n\nCopy files to the root directory of your site:\ncp -R ~/tmp/joomla/* ~/htdocs/www.domain.com/\n\nClean up the tmp directory.\nrm -rf ~/tmp/*\n\n\nCreate a Database, open your site in the browser, and go through the Joomla Installer.\n\nDone! Joomla is now installed.\n\nEdit this page\nPrevious\n« FuelPHP\nNext\nLaminas »\nCreating a Joomla Site\nVia CloudPanel\nVia CloudPanel CLI\nCreating a Joomla Project\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "FuelPhp | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/php/applications/fuelphp/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nFuelPhp\n\nOn this site, you find a guide to install FuelPHP on CloudPanel.\n\nCreating a FuelPHP Site\nVia CloudPanel\nClick on + Add Site and then click on Create a PHP Site.\nSelect the Application FuelPHP 1.8, enter Domain Name, Site User, Site User Password, and click on Create.\nVia CloudPanel CLI\n\nIf you like the command line, you can create a FuelPHP Site with the following command as root user.\n\nclpctl site:add:php --domainName=www.domain.com --phpVersion=7.2 --vhostTemplate='FuelPHP 1.8' --siteUser='john-doe' --siteUserPassword='!secretPassword!'\n\nCreating a FuelPHP Project\nLog in via SSH with the Site User:\nssh john-doe@server-ip-address\n\nGo to the tmp directory:\ncd ~/tmp\n\nDownload and extract the latest FuelPHP 1.8 version:\ncurl -sL https://github.com/fuel/fuel/archive/1.8.2.tar.gz | tar xfz -\n\nLATEST VERSION\n\nYou find the latest version on github: https://github.com/fuel/fuel/releases\n\nCopy files to the root directory of your site:\ncp -R fuel-1.8.2/* ~/htdocs/www.domain.com/\n\nInstall via composer:\ncd ~/htdocs/www.domain.com/\nphp7.2 /usr/local/bin/composer install -n\n\nClean up the tmp directory:\nrm -rf ~/tmp/*\n\nDone! FuelPHP is now installed.\nEdit this page\nPrevious\n« Drupal\nNext\nJoomla »\nCreating a FuelPHP Site\nVia CloudPanel\nVia CloudPanel CLI\nCreating a FuelPHP Project\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Drupal | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/php/applications/drupal/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nDrupal\n\nOn this site, you find a guide to install Drupal on CloudPanel.\n\nCreating a Drupal Site\nVia CloudPanel\nClick on + Add Site and then click on Create a PHP Site.\nSelect the Application Drupal 10, enter Domain Name, Site User, Site User Password, and click on Create.\nVia CloudPanel CLI\n\nIf you like the command line, you can create a Drupal Site with the following command as root user.\n\nclpctl site:add:php --domainName=www.domain.com --phpVersion=8.2 --vhostTemplate='Drupal 10' --siteUser='john-doe' --siteUserPassword='!secretPassword!'\n\nCreating a Drupal Project\nLog in via SSH with the Site User:\nssh john-doe@server-ip-address\n\nGo to htdocs and delete the directory which CloudPanel has created:\ncd htdocs && rm -rf www.domain.com\n\nCreate a Drupal Project via Composer:\nphp8.2 /usr/local/bin/composer create-project drupal/recommended-project:^10 -n www.domain.com\n\nCreate a Database, open your site in the browser, and go through the Drupal Installer.\nDone! Drupal has been installed.\nEdit this page\nPrevious\n« CodeIgniter\nNext\nFuelPHP »\nCreating a Drupal Site\nVia CloudPanel\nVia CloudPanel CLI\nCreating a Drupal Project\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "CodeIgniter | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/php/applications/codeigniter/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nCodeIgniter\n\nOn this site, you find a guide to install CodeIgniter on CloudPanel.\n\nCreating a CodeIgniter Site\nVia CloudPanel\nClick on + Add Site and then click on Create a PHP Site.\nSelect the Application CodeIgniter 4, enter Domain Name, Site User, Site User Password, and click on Create.\nVia CloudPanel CLI\n\nIf you like the command line, you can create a CodeIgniter Site with the following command as root user.\n\nclpctl site:add:php --domainName=www.domain.com --phpVersion=8.2 --vhostTemplate='CodeIgniter 4' --siteUser='john-doe' --siteUserPassword='!secretPassword!'\n\nCreating a CodeIgniter Project\nLog in via SSH with the Site User:\nssh john-doe@server-ip-address\n\nGo to htdocs and delete the directory which CloudPanel has created:\ncd htdocs && rm -rf www.domain.com\n\nCreate a CodeIgniter Project via Composer:\nphp8.1 /usr/local/bin/composer create-project codeigniter4/appstarter www.domain.com\n\nDone! You can now open your site in your browser to see the Welcome to CodeIgniter page.\nEdit this page\nPrevious\n« CakePHP\nNext\nDrupal »\nCreating a CodeIgniter Site\nVia CloudPanel\nVia CloudPanel CLI\nCreating a CodeIgniter Project\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "CakePHP | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/php/applications/cakephp/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nCakePHP\n\nOn this site, you find a guide to install CakePHP on CloudPanel.\n\nCreating a CakePHP Site\nVia CloudPanel\nClick on + Add Site and then click on Create a PHP Site.\nSelect the Application CakePHP, enter Domain Name, Site User, Site User Password, and click on Create.\nVia CloudPanel CLI\n\nIf you like the command line, you can create a CakePHP Site with the following command as root user.\n\nclpctl site:add:php --domainName=www.domain.com --phpVersion=8.2 --vhostTemplate='CakePHP 5' --siteUser='john-doe' --siteUserPassword='!secretPassword!'\n\nCreating a CakePHP Project\nLog in via SSH with the Site User:\nssh john-doe@server-ip-address\n\nGo to htdocs and delete the directory which CloudPanel has created:\ncd htdocs && rm -rf www.domain.com\n\nCreate a CakePHP Project via Composer:\nphp8.2 /usr/local/bin/composer create-project --prefer-dist cakephp/app:~5.0 www.domain.com\n\nDone! You can now open your site in your browser to see the Welcome to CakePHP 5 page.\nEdit this page\nPrevious\n« Strapi 4\nNext\nCodeIgniter »\nCreating a CakePHP Site\nVia CloudPanel\nVia CloudPanel CLI\nCreating a CakePHP Project\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Ghost | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/nodejs/applications/ghost/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nGhost\n\nOn this site, you find a guide to install and configure Ghost on CloudPanel.\n\nCreating a Node.js Site\nVia CloudPanel\nClick on + Add Site and then click on Create a Node.js Site.\nEnter the Domain Name, Node.js Version, and the App Port, and click on Create.\nVia CloudPanel CLI\n\nYou can create a Node.js Site with the following command as root user if you like the command line.\n\nclpctl site:add:nodejs --domainName=www.domain.com --nodejsVersion=18 --appPort=2368 --siteUser='john-doe' --siteUserPassword='!secretPassword!'\n\nCreating a Ghost project\n\nCreate a Database and copy the Database Name, Database User Name, Database User Password.\n\nLog in via SSH with the Site User:\n\nssh john-doe@server-ip-address\n\nInstall the Ghost CLI:\nnpm install ghost-cli@latest -g\n\nReplace DATABASE_USERNAME, DATABASE_USER_PASSWORD, DATABASE_NAME, SITE_USER, and DOMAIN and install Ghost.\nghost install --db mysql --port 2368 \\\n--dbhost 127.0.0.1 \\\n--dbuser $DATABASE_USER_NAME \\\n--dbpass $DATABASE_USER_PASSWORD \\\n--dbname $DATABASE_NAME \\\n--process local \\\n--no-setup-linux-user \\\n--no-setup-ssl \\\n--no-setup-nginx \\\n--dir /home/$SITE_USER/htdocs/$DOMAIN/\n\nEnter your Blog Url like https://www.domain.com/\nStart Ghost by confirming with Y:\nThe installation is done. Open your site in the browser and create an admin user.\nDeployment\n\nGhost needs to be started after an instance reboot. We will create a script that gets executed after the reboot.\n\nLog in via SSH with the Site User:\nssh john-doe@server-ip-address\n\nCreate scripts directory:\nmkdir ~/scripts/ \n\nCreate a start script:\nnano ~/scripts/ghost-start.sh\n\n\nModify the --dir value and save the start script:\n\n#!/bin/bash\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm\nghost start --dir $HOME/htdocs/ghost.moby.io/ --no-setup-linux-user > $HOME/logs/ghost.log &\n\nSet execution permissions:\nchmod 700 ~/scripts/ghost-start.sh\n\nEdit the crontab for the site user.\ncrontab -e\n\nReplace SITE_USER with your site user and add the following line:\n@reboot /home/$SITE_USER/scripts/ghost-start.sh &> /dev/null\n\nReboot and test if Ghost is running as expected.\nEdit this page\nPrevious\n« With pm2\nNext\nStrapi 4 »\nCreating a Node.js Site\nVia CloudPanel\nVia CloudPanel CLI\nCreating a Ghost project\nDeployment\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Strapi 4 | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/nodejs/applications/strapi/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nStrapi 4\n\nOn this site, you find a guide to install and configure Strapi 4 on CloudPanel.\n\nCreating a Node.js Site\nVia CloudPanel\nClick on + Add Site and then click on Create a Node.js Site.\nEnter the Domain Name, Node.js Version, and the App Port, and click on Create.\nVia CloudPanel CLI\n\nYou can create a Node.js Site with the following command as root user if you like the command line.\n\nclpctl site:add:nodejs --domainName=www.domain.com --nodejsVersion=18 --appPort=1337 --siteUser='john-doe' --siteUserPassword='!secretPassword!'\n\nCreating a Strapi project\nLog in via SSH with the Site User:\nssh john-doe@server-ip-address\n\nGo to htdocs and delete the directory which CloudPanel has created:\ncd htdocs && rm -rf www.domain.com\n\nCreate a Strapi Project:\nnpx create-strapi-app@latest www.domain.com\n\nBuilding the Admin Panel\n\nTo build the Admin Panel, go to the root directory of your strapi installation\n\ncd htdocs/www.domain.com/\n\n\nand execute npm run build with NODE_ENV=production:\n\nNODE_ENV=production npm run build\n\nRunning Strapi\n\nTo run Strapi, go to the root directory of your strapi installation\n\ncd htdocs/www.domain.com/\n\n\nand execute npm start with NODE_ENV=production:\n\nNODE_ENV=production npm start\n\n\nThe output will look like this:\n\nTo create a user, you can now open your Strapi Installation in the browser https://www.domain.com/admin.\n\nProduction Deployment\n\nFor running Strapi in production, it's essential to have an process manager like pm2 who takes care of the node processes.\n\nFollow the Node.js Deployment for a step-by-step guide.\n\nEdit this page\nPrevious\n« Ghost\nNext\nCakePHP »\nCreating a Node.js Site\nVia CloudPanel\nVia CloudPanel CLI\nCreating a Strapi project\nBuilding the Admin Panel\nRunning Strapi\nProduction Deployment\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Introduction | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/dploy/introduction/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nIntroduction\n\ndploy is a powerful code deployment solution that simplifies releasing new application versions.\ndploy allows developers to automate the deployment process and ensure their applications are always up-to-date and running smoothly. Whether deploying a small website or a complex web application, dploy makes it easy.\n\nFeatures\nOpen Source (MIT License)\nSetup done in less than 60 seconds\nSolution for PHP, Node.js, Static HTML Sites and Python\nZero Downtime Deployment\nContinuous Deployment\nEdit this page\nPrevious\n« Adding a Python Version\nNext\nInstallation »\nFeatures\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Node.js deployment with pm2 | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/nodejs/deployment/pm2/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nNode.js deployment with pm2\n\nFor running Node.js applications in production, you need process manager who takes care of the node processes.\n\nWe explain how to use the PM2 for setting up a Node.js Application for production on this site.\n\nPM2\n\nPM2 is a daemon process manager that will help you manage and keep your application online.\n\nInstallation\nLog in via SSH with your Site User:\nssh john-doe@instance-ip-address\n\nGo to the root directory of your project:\ncd htdocs/www.domain.com/\n\nInstall the latest pm2 via npm.\nnpm install pm2@latest -g\n\nStart the Application\n\nUse the following command to start your application via pm2:\n\nAPP NAME\n\nReplace the app-name variable with the name of your application.\n\npm2 start npm --name $app-name -- start\n\n\nYour application is now running via pm2.\n\nSave Configuration\n\nTo save the pm2 configuration, execute the save command:\n\npm2 save\n\nAdding a Cron Job\n\nTo ensure, that your application is running after a reboot of your instance, you need to configure a cron job.\n\nFirst copy the output of the PATH variable:\necho $PATH\n\n\nThe output will look similar to this:\n\n/home/john-doe/.nvm/versions/node/v14.19.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n\nEdit the crontab for the site user.\ncrontab -e\n\nAdd the following lines to it:\nPATH=$PASTE_THE_OUTPUT_OF_$PATH\n@reboot pm2 resurrect &> /dev/null\n\n\nExample configuration\n\nReboot your instance and check if the application is running:\npm2 status\n\n\nThe status should be online to confirm that your Application is running after reboot.\n\nTroubleshooting\n\nPM2 provides a logs command to see the application's output, which helps troubleshoot.\n\npm2 logs\n\nEdit this page\nPrevious\n« Site User Commands\nNext\nGhost »\nPM2\nInstallation\nStart the Application\nSave Configuration\nAdding a Cron Job\nTroubleshooting\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Site User Commands | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/cloudpanel-cli/site-user-commands/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nSite User Commands\nSystem\nPermissions Reset\n\nTo reset the permissions of a file or directories, log in via SSH and modify the command below to your needs:\n\nclpctl system:permissions:reset --directories=770 --files=660 --path=.\n\nDatabase\nDatabase Export\n\nWith the command db:export, you can export a database as dump.\n\nCOMPRESSION\n\nThe database dump will be gzipped if you add .sql.gz at the end of the file name. If you want to export the database uncompressed, use .sql.\n\nclpctl db:export --databaseName=my-database --file=dump.sql.gz\n\nDatabase Import\n\nTo import a database, go to the database dump's directory and use the following command to import.\n\nclpctl db:import --databaseName=my-database --file=dump.sql.gz\n\nVarnish Cache\nPurge\n\nWith the command varnish-cache:purge, you can purge everything, specific cache tags or a single url.\n\nTo purge the entire cache, use the following command:\n\nclpctl varnish-cache:purge --purge=all\n\n\nSpecific cache tags, separated by a comma, can be purged with the following command:\n\nclpctl varnish-cache:purge --purge='tag1,tag2'\n\n\nIn case you want to purge a single url only:\n\nclpctl varnish-cache:purge --purge='https://www.domain.com/site.html'\n\nEdit this page\nPrevious\n« Root User Commands\nNext\nWith pm2 »\nSystem\nPermissions Reset\nDatabase\nDatabase Export\nDatabase Import\nVarnish Cache\nPurge\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Root User Commands | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/cloudpanel-cli/root-user-commands/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nRoot User Commands\nCloudflare\nUpdate IPs\n\nIn your site's security settings, you can enable Allow traffic from Cloudflare only.\n\nThe command clpctl cloudflare:update:ips is being executed every morning at 6 AM via cron job and updates the following file:\n\n/etc/nginx/cloudflare/ips\n\n\nIf you enable Allow traffic from Cloudflare only, the file is included in the vhost of your site.\n\nCloudPanel\n\nIn the Admin Area, you can enable Basic Auth as additional layer of security in front of CloudPanel if you don't have a static IP to close port 8443.\n\nEnable Basic Auth\nclpctl cloudpanel:enable:basic-auth --userName=john.doe --password='password123'\n\nDisable Basic Auth\nclpctl cloudpanel:disable:basic-auth\n\nDatabase\nMaster Credentials\n\nThe Database Show Master Credentials command shows Host, User Name, Password, and the Port.\n\nclpctl db:show:master-credentials\n\n\nThe output will look like:\n\nTo connect to the database server, copy the Connect Command and enter the command in the command line.\n\nAdding a Database\n\nWith the command db:add, you can add a database to your site.\n\nclpctl db:add --domainName=www.domain.com --databaseName=my-database --databaseUserName=john --databaseUserPassword='!secretPassword!'\n\nDatabase Export\n\nWith the command db:export, you can export a database as dump.\n\nCOMPRESSION\n\nThe database dump will be gzipped if you add .sql.gz at the end of the file name. If you want to export the database uncompressed, use .sql.\n\nclpctl db:export --databaseName=my-database --file=dump.sql.gz\n\nDatabase Import\n\nTo import a database, go to the database dump's directory and use the following command to import.\n\nclpctl db:import --databaseName=my-database --file=dump.sql.gz\n\nLet's Encrypt\n\nWith the lets-encrypt:install:certificate command, you can issue and install a Let's Encrypt Certificate for a site.\n\nLET'S ENCRYPT\n\nIf you enter the domain name www.domain.com, a certificate for the domains domain.com and www.domain.com will be issued and vice versa.\n\nMake sure to have valid DNS records for the domains you want to create a certificate for.\n\nclpctl lets-encrypt:install:certificate --domainName=www.domain.com\n\n\nThe parameter subjectAlternativeName is optional and is needed if you want to issue a certificate for multiple domains.\n\nclpctl lets-encrypt:install:certificate --domainName=www.domain.com --subjectAlternativeName=domain1.com,www.domain1.com\n\nSite\nAdding a Node.js site\n\nNode 20 LTS, Node 18 LTS, Node 16 LTS, Node 14 LTS, Node 12 LTS are available. The Node.js Versions are managed via Node Version Manager.\n\nIf you need another version, you can change the version afterward.\n\nTo add a Node.js Site, use the following command.\n\nclpctl site:add:nodejs --domainName=www.domain.com --nodejsVersion=18 --appPort=3000 --siteUser=john --siteUserPassword='!secretPassword!'\n\nAdding a Static HTML Site\n\nTo add a Static HTML Site, use the following command.\n\nclpctl site:add:static --domainName=www.domain.com --siteUser=john --siteUserPassword='!secretPassword!'\n\nAdding a PHP Site\n\nFor Adding a PHP Site, it's important to use the right Vhost Template.\n\nWith the command vhost-templates:list, you can display all available vhost templates:\n\nclpctl vhost-templates:list\n\n\nThe vhost templates can be found on Github. They will be updated every night.\n\nCopy the name of the template and use the following command to create a PHP Site:\n\nclpctl site:add:php --domainName=www.domain.com --phpVersion=8.2 --vhostTemplate='Generic' --siteUser=john --siteUserPassword='!secretPassword!'\n\nAdding a Python Site\n\nTo add a Python Site, use the following command:\n\nPYTHON VERSION\n\nIf you are using Ubuntu 22.04, you need to use the version 3.10 as it's the standard version.\n\nclpctl site:add:python --domainName=www.domain.com --pythonVersion=3.9 --appPort=8080 --siteUser=john --siteUserPassword='!secretPassword!'\n\nAdding a Reverse Proxy\n\nTo add a Reverse Proxy, use the following command:\n\nclpctl site:add:reverse-proxy --domainName=www.domain.com --reverseProxyUrl='http://127.0.0.1:8000' --siteUser=john --siteUserPassword='!secretPassword!'\n\nInstalling a Certificate\n\nTo install a certificate for a site, use the following command below. The certificateChain argument is optional.\n\nclpctl site:install:certificate --domainName=www.domain.com --privateKey=/path/to/private.key --certificate=/path/to/certificate.crt --certificateChain=/path/to/chain.crt\n\nDeleting a Site\n\nTo delete a Site, use the following command:\n\nclpctl site:delete --domainName=www.domain.com \n\n\nConfirm your action by entering yes. It's also possible to force the deletion by adding the \"--force\" parameter as seen below:\n\nclpctl site:delete --domainName=www.domain.com --force\n\nUser\nAdding a User\n\nTo add a User, see the following commands as example.\n\nTo add an admin user, use the following command:\n\nclpctl user:add --userName='john.doe' --email='john.doe@domain.com' --firstName='John' --lastName='Doe' --password='!password!' --role='admin' --timezone='UTC' --status='1'\n\n\nTo add a site manager, use the following command:\n\nclpctl user:add --userName='john.doe' --email='john.doe@domain.com' --firstName='John' --lastName='Doe' --password='!password!' --role='site-manager' --timezone='UTC' --status='1'\n\n\nTo add a user who is restricted to specific sites, use the following command:\n\nclpctl user:add --userName='john.doe' --email='john.doe@domain.com' --firstName='John' --lastName='Doe' --password='!password!' --role='user' --sites='domain.com,domain.io' --timezone='UTC' --status='1'\n\nDeleting a user\nclpctl user:delete --userName='john.doe'\n\nList Users\n\nTo list all users, use the following command:\n\nclpctl user:list\n\nPassword Reset\n\nTo reset the password for a CloudPanel user, you can use the user:reset:password command:\n\nclpctl user:reset:password --userName=john.doe --password='!newPassword!'\n\nDisable 2-FA\n\nTo disable Two-Factor Authentication for a user, run the following command:\n\nclpctl user:disable:mfa --userName=john.doe\n\nVhost Templates\nImport Templates\n\nThe command vhost-templates:import is being executed every night. It updates the Vhost Templates from our Github Repository.\n\nclpctl vhost-templates:import\n\nList Templates\n\nThe command vhost-templates:list lists all Vhost Templates that can be used for adding a PHP Site.\n\nclpctl vhost-templates:list\n\nAdding a Template\n\nIf you need a custom Vhost Template for your PHP Application, you can do the following:\n\nCopy a vhost template from our Github Repository, e.g., the Generic one:\n#{\"rootDirectory\":\"public\",\"phpVersion\":\"8.1\"}\nserver {\n  listen 80;\n  listen [::]:80;\n  listen 443 ssl http2;\n  listen [::]:443 ssl http2;\n  {{ssl_certificate_key}}\n  {{ssl_certificate}}\n  {{server_name}}\n  {{root}}\n\n  {{nginx_access_log}}\n  {{nginx_error_log}}\n\n  if ($scheme != \"https\") {\n    rewrite ^ https://$host$uri permanent;\n  }\n\n  location ~ /.well-known {\n    auth_basic off;\n    allow all;\n  }\n\n  {{settings}}\n\n  try_files $uri $uri/ /index.php?$args;\n  index index.php index.html;\n\n  location ~ \\.php$ {\n    include fastcgi_params;\n    fastcgi_intercept_errors on;\n    fastcgi_index index.php;\n    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n    try_files $uri =404;\n    fastcgi_read_timeout 3600;\n    fastcgi_send_timeout 3600;\n    fastcgi_param HTTPS $fastcgi_https;\n    fastcgi_pass 127.0.0.1:{{php_fpm_port}};\n    fastcgi_param PHP_VALUE \"{{php_settings}}\";\n  }\n\n  location ~* ^.+\\.(css|js|jpg|jpeg|gif|png|ico|gz|svg|svgz|ttf|otf|woff|eot|mp4|ogg|ogv|webm|webp|zip|swf)$ {\n    add_header Access-Control-Allow-Origin \"*\";\n    expires max;\n    access_log off;\n  }\n\n  if (-f $request_filename) {\n    break;\n  }\n}\n\nIn the first line, you see the following command:\n#{\"rootDirectory\":\"public\",\"phpVersion\":\"8.1\"}\n\n\nSetting the rootDirectory and phpVersion is very important to prefill the site wizard form.\nMost PHP Applications use public nowadays as an entry point.\n\nPut the template in a file or via gist.\n\nTo import your template from a file, use the following command:\n\nclpctl vhost-template:add --name='My Application' --file=/tmp/template.tpl\n\n\nTo import your template from remote e.g, from a gist, use the following command:\n\nclpctl vhost-template:add --name='My Application' --file=https://gist.githubusercontent.com/swieczorek/1c344ca356118c45b7c1b7393cc00abc/raw/007ff01dff96978be65dca212990ac20f6fd16be/gistfile1.txt\n\n\nWhen you select My Application, it will prefill the PHP Version, which has been defined in the Vhost Template.\n\nWhen you click on Create, the root directory for the NGINX VHost will be generated with the following pattern:\n\n/home/$siteUser/htdocs/$domainName/$rootDirectory\n\n\nIn our example, the root directory would be:\n\n/home/custom-app/htdocs/www.domain.com/public\n\nDeleting a Template\n\nWith the command vhost-template:delete, you can delete a Vhost Template:\n\nclpctl vhost-template:delete --name='My Application'\n\nViewing a Template\n\nWith the command vhost-template:view, you can view a Vhost Template:\n\nclpctl vhost-template:view --name='My Application'\n\nEdit this page\nPrevious\n« Vultr\nNext\nSite User Commands »\nCloudflare\nUpdate IPs\nCloudPanel\nEnable Basic Auth\nDisable Basic Auth\nDatabase\nMaster Credentials\nAdding a Database\nDatabase Export\nDatabase Import\nLet's Encrypt\nSite\nAdding a Node.js site\nAdding a Static HTML Site\nAdding a PHP Site\nAdding a Python Site\nAdding a Reverse Proxy\nInstalling a Certificate\nDeleting a Site\nUser\nAdding a User\nDeleting a user\nList Users\nPassword Reset\nDisable 2-FA\nVhost Templates\nImport Templates\nList Templates\nAdding a Template\nDeleting a Template\nViewing a Template\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Vultr | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/admin-area/cloud-features/vultr/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nVultr\nSettings\nAPI Key\nCreate API Key\n\nFor the communication with the Vultr interface, you need to enter an API Key.\n\nTo create an API Key do the following steps:\n\nLogin into your VULTR account.\n\nClick on Account and then on API to copy your Personal Access Token.\n\nSnapshot Settings\nTo enable Automatic Snapshots, click in the left menu on Vultr and then on the tab Settings.\nSelect the Frequency and Retention Period and click on the button Save.\n\nFour Snapshots will be created per day and deleted after seven days with the following configuration.\n\nSnapshots\n\nSnapshots are a point-in-time image of the entire instance SSD for data disaster recovery. The instance will not be stopped when taking a snapshot; modern file systems and databases handle this scenario well.\n\nCreate Snapshot\n\nTo create a Snapshot, click in the left menu on Vultr and then on the tab Snapshots.\n\nClick on the button Create Snapshot top right.\n\nEnter the Snapshot Name and click on Create.\nThe Snapshot is now being created by Vultr.\nEdit this page\nPrevious\n« Google Compute Engine\nNext\nRoot User Commands »\nSettings\nAPI Key\nSnapshot Settings\nSnapshots\nCreate Snapshot\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Google Compute Engine | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/admin-area/cloud-features/google-compute-engine/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nGoogle Compute Engine\nSettings\nService Account Keys\nCreate Service Account Keys\n\nFor the communication with the Google Compute Engine interface, you need to enter Service Account Keys.\n\nTo create the Service Account Keys do the following steps:\n\nLogin into the Google Cloud Console.\n\nClick in the left navigation on IAM & Admin and click on Service Accounts.\n\nOn the Service Accounts overview, go to Actions and click on Manage Keys.\n\nClick on Create new Key.\nSelect Key type JSON and click on Create to download the Service Account Keys file.\nOpen the downloaded file and paste the content into the Service Account Keys field.\nSnapshot Settings\nTo enable Automatic Snapshots, click in the left menu on Google Compute Engine and then on the tab Settings.\nSelect the Frequency and Retention Period and click on the button Save.\n\nFour Snapshots will be created per day and deleted after seven days with the following configuration.\n\nSnapshots\n\nSnapshots are a central part of the Google Cloud Backup architecture—they allow you to create a point-in-time backup of a persistent disk attached to a virtual machine instance and save it to Google Cloud Storage. You can also rapidly restore a snapshot to a persistent disk.\n\nCreate Snapshot\n\nTo create a Snapshot, click in the left menu on Google Compute Engine and then on the tab Snapshots.\n\nClick on the button Create Snapshot top right.\n\nEnter the Snapshot Name and click on Create.\nThe Snapshot is now being created by the Google Compute Engine.\nEdit this page\nPrevious\n« Hetzner Cloud\nNext\nVultr »\nSettings\nService Account Keys\nSnapshot Settings\nSnapshots\nCreate Snapshot\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Hetzner Cloud | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/admin-area/cloud-features/hetzner-cloud/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nHetzner Cloud\nSettings\nAPI Token\nCreate API Token\n\nFor the communication with the Hetzner Cloud interface, you need to enter an API Token.\n\nTo create an API Token, do the following steps:\n\nLogin into your Hetzner Cloud Console account.\n\n\nIn the left menu, click on Security and then Generate API Token.\n\nEnter a description e.g., CloudPanel and give Read & Write permissions.\n\nSnapshot Settings\nTo enable Automatic Snapshots, click in the left menu on Hetzner and then on the tab Settings.\nSelect the Frequency and Retention Period and click on the button Save.\n\nFour Snapshots will be created per day and deleted after seven days with the following configuration.\n\nSnapshots\n\nSnapshots are a point-in-time image of the entire server SSD for data disaster recovery. The server will not be stopped when taking a snapshot; modern file systems and databases handle this scenario well.\n\nCreate Snapshot\n\nTo create a Snapshot, click in the left menu on Hetzner and then on the tab Snapshots.\n\nClick on the button Create Snapshot top right.\n\nEnter the Snapshot Name and click on Create.\nThe Snapshot is now being created by the Hetzner Cloud.\nEdit this page\nPrevious\n« Digital Ocean\nNext\nGoogle Compute Engine »\nSettings\nAPI Token\nSnapshot Settings\nSnapshots\nCreate Snapshot\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Digital Ocean | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/admin-area/cloud-features/digital-ocean/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nDigital Ocean\nSettings\nAccess Token\nCreate Access Token\n\nFor the communication with Digital Ocean, you need to enter an Access Token.\n\nTo create an Access Token, do the following steps:\n\nLogin into your Digital Ocean account.\n\nClick in the left navigation on API and click on button Generate New Token.\n\nSnapshot Settings\nTo enable Automatic Snapshots, click in the left menu on Digital Ocean and then on the tab Settings.\nSelect the Frequency and Retention Period and click on the button Save.\n\nFour Snapshots will be created per day and deleted after seven days with the following configuration.\n\nSnapshots\n\nSnapshots are on-demand disk images of DigitalOcean Droplets and volumes saved to your Digital Ocean account.\n\nCreate Snapshot\n\nTo create a Snapshot, click in the left menu on Digital Ocean and then on the tab Snapshots.\n\nClick on the button Create Snapshot top right.\n\nEnter the Snapshot Name and click on Create.\nThe Snapshot is now being created by Digital Ocean and will appear when it's created, taking several minutes.\nEdit this page\nPrevious\n« Amazon Web Services\nNext\nHetzner Cloud »\nSettings\nAccess Token\nSnapshot Settings\nSnapshots\nCreate Snapshot\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Amazon Web Services | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/admin-area/cloud-features/amazon-web-services/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nAmazon Web Services\nSettings\nAWS Credentials\nCreate AWS Credentials\n\nFor the communication with Amazon Web Services, you need to enter AWS Credentials like AWS Access Key and AWS Secret Access Key.\n\nTo create AWS Access Keys do the following steps:\n\nLogin into the AWS Management Console.\n\nGo to the IAM Service.\n\nIn the left menu, click on Users and click on the button Add users top right.\n\nEnter a User name and click on the button Next.\n\nClick on Attach policies directly and select the AdministratorAccess policy and click on the button Next.\nPERMISSIONS\n\nExperienced AWS users should create AWS Access Keys with more fine granulated permissions.\n\nClick on the button Create user to create the AWS Access Keys.\nGo to the user details page and click on the tab Security credentials and then on the button Create access key.\nAs Use Case, select Command Line Interface (CLI) and click on Next.\nEnter a Description tag value (optional) and click on Create access key.\nImages Settings\nTo enable Automatic Images, click in the left menu on Amazon Web Services and then on the tab Settings.\nSelect the Frequency and Retention Period and click on the button Save.\n\nWith the following configuration, two Images will be created per day and held for 14 AMIs for seven days.\n\nImages\n\nAn Amazon Machine Image (AMI) is a special type of virtual appliance used to create a virtual machine within the Amazon Elastic Compute Cloud (EC2).\n\nCloudPanel can create an Image of your instance on a defined frequency, e.g., Hourly, Every Three Hours, Every Six Hours, Every Twelve Hours, or Once per Day.\n\nCreate Image\n\nTo create an Image, click in the left menu on Amazon Web Services and then on the tab Images.\n\nClick on the button Create Image top right.\n\nEnter an Image Name and click on Create.\nThe Image is now being created by Amazon Web Services. The Image status changes from Pending to Available when it's done.\nEdit this page\nPrevious\n« Settings\nNext\nDigital Ocean »\nSettings\nAWS Credentials\nImages Settings\nImages\nCreate Image\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Settings | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/admin-area/settings/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nSettings\nGeneral\nCloudPanel Custom Domain\n\nTo run CloudPanel under your Custom Domain with a Let's Encrypt Certificate, do the following.\n\nClick on Settings and then on General and enter the Domain Name.\nDNS RECORD\n\nA DNS Record pointing to this server is required to issue a Let's Encrypt Certificate.\n\nClick on Save and wait seconds before the Let's Encrypt Certificate can be issued.\nCloudPanel Custom Domain via Reverse Proxy\n\nAn alternative way to run CloudPanel under your Custom Domain is to use a Reverse Proxy, e.g., if you want to use your own SSL/TLS Certificate, which is useful where Let's Encrypt can't be used.\n\nGo to Sites and create a Reverse Proxy.\n\nEnter the Domain Name, enter https://127.0.0.1:8443 as Reverse Proxy Url.\n\nGo to the SSL/TLS Settings and import your Certificate.\nDatabase Servers\n\nUsing a separate Database Server to handle database queries has advantages like better performance and the possibility to restore to a specific time.\n\nAll major cloud providers offer MySQL Database Services like Amazon RDS, Digital Ocean Managed MySQL.\n\nSupported Database Versions are: MySQL 5.7, MySQL 8.0, >= MariaDB 10.6\n\nAdd Database Server\n\nTo add a Database Server, click in the left menu on Settings and then on the tab Database Servers.\n\nEnter the Host, User Name, Password and Port and click on Add Database Server.\n\nClick on Set Active to use the Database Server.\nThe local MySQL Service is no longer needed and can be stopped and disabled to free up memory.\nLogin via SSH as root and disable the service with the following command:\nsystemctl stop mysql && systemctl disable mysql\n\nDelete Database Server\n\nTo add a Database Server, click in the left menu on Settings and then on the tab Database Servers.\n\nClick on the Database Server you want to delete.\n\nClick on Delete to remove the Database Server.\nEdit this page\nPrevious\n« Security\nNext\nAmazon Web Services »\nGeneral\nCloudPanel Custom Domain\nCloudPanel Custom Domain via Reverse Proxy\nDatabase Servers\nAdd Database Server\nDelete Database Server\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Remote Backups | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/admin-area/backups/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nRemote Backups\n\nWith Remote Backups, also known as off-site backup, you can store copies of your sites to services like Amazon S3, Wasabi, Digital Ocean Spaces, Dropbox, Google Drive, SFTP, or any other storage provider supported by Rclone.\n\nINSTANCE TIMEZONE\n\nEnsure that the Timezone of your instance is correct to execute the backup job at the right time.\n\nSetup\nStorage Provider\n\nSelect the Storage Provider of your choice and click on Continue.\n\nConfiguration\nAmazon S3\nWasabi\nDigital Ocean Spaces\nDropbox\nGoogle Drive\nHetzner Storage Box\nSFTP\nCustom Rclone Config\n\nLog in to the AWS Management Console.\n\nCreate an S3 Bucket and create an AWS Access Key and Secret Access Key with restricted permissions to S3.\n\nFill out the form and click on the button Save.\n\nClick on the button Create Button top right to create the first backup, and go to S3 to check if it's working as expected.\nExcludes\n\nBy default, all sites are backed up. The vhost and the entire home directory of each site, excluding the .ssh, logs, and tmp directory, are included in the backup. In the Excludes field, you can exclude directories and files.\nIf you want to exclude a site from the backup, put /home/$site-user/ in the excludes.\n\nRestoring Files\n\nTo restore files or directories, go to your storage provider and download the backup file backup.tar of your site.\n\nVia File Manager\n\nRestoring files via File Manager is recommended for backup files smaller than 2 GB.\n\nGo to the File Manager of your site and upload the backup file backup.tar to the tmp directory.\n\nMake right-click on the file backup.tar and extract the file.\n\nCopy and replace the files you need.\nVia SFTP/SSH\n\nThis method is recommended for backup files bigger than 2 GB which cannot be uploaded via File Manager.\n\nUpload the backup.tar file via SFTP into your tmp directory or your site.\n\nLogin via SSH to the instance with your site user and extract the backup file.\n\ntar xf ~/tmp/backup.tar\n\nCopy and replace the files you need.\nEdit this page\nPrevious\n« Instance\nNext\nSecurity »\nSetup\nStorage Provider\nConfiguration\nExcludes\nRestoring Files\nVia File Manager\nVia SFTP/SSH\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Security | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/admin-area/security/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nSecurity\nFirewall\n\nThe integrated Firewall in CloudPanel is based on UFW, also known as Uncomplicated Firewall.\nDeveloped to ease iptables firewall configuration, ufw provides a user-friendly way to create an IPv4 or IPv6 host-based firewall.\n\nCloudPanel is being shipped with pre-configured rules to achieve higher security.\n\nRECOMMENDATION\n\nFor higher security, whitelist the SSH Port (22) for your IPs only. The CloudPanel Port (8443) should only be whitelisted if you have a static ip.\n\nAdding a Rule\n\nTo add a new Rule, click on the button Add Rule.\n\nSelect the Type, enter the Port Range, Source, and Description (optional) and click on Add Rule to apply the firewall rule.\n\nEditing a Rule\nClick on the Rule you want to edit.\nEdit the Firewall Rule and click on the button Save.\nDeleting a Rule\nSelect the Rule you want to remove and click on Delete.\nBasic Auth\n\nIf you don't have a static ip to close port 8443, a Basic Auth in front of CloudPanel is recommended to restrict the access.\n\nEnable Basic Auth\nVia Web Interface\n\nTo enable Basic Auth, click in the left menu on Security and then on the tab Basic Auth.\n\nEnter a User Name and Password and click on Save to enable basic auth.\n\nVia Command Line (CLI)\n\nTo enable Basic Auth via the command line, log in via SSH and execute the following command as the root user.\n\nclpctl cloudpanel:enable:basic-auth --userName='john.doe' --password='password123'\n\nDisable Basic Auth\nVia Web Interface\n\nTo disable Basic Auth, click in the left menu on Security and then on the tab Basic Auth.\n\nVia Command Line (CLI)\n\nTo disable Basic Auth via the command line, log in via SSH and execute the following command as the root user.\n\nclpctl cloudpanel:disable:basic-auth\n\nEdit this page\nPrevious\n« Backups\nNext\nSettings »\nFirewall\nAdding a Rule\nEditing a Rule\nDeleting a Rule\nBasic Auth\nEnable Basic Auth\nDisable Basic Auth\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Instance | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/admin-area/instance/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nInstance\nReboot\n\nTo reboot your instance, click in the left menu on Instance and then on the button Reboot top right.\n\nServices\n\nTo restart a service like NGINX, MySQL, or PHP-FPM, click in the left menu on Instance and select the Service to restart.\n\nSettings\nProftpd Settings\n\nFor connecting via FTP you need to enter the Instance IP in the field MasqueradeAddress.\n\nThe MasqueradeAddress causes the instance to display the network information for the specified IP address or DNS hostname to the client, on the assumption that the IP address or DNS host is acting as a NAT gateway or port forwarder for the instance.\n\nInstance Settings\nTimezone Change\n\nThe timezone of your instance is essential for executing cron jobs and other scheduled tasks at the right time in your region.\n\nATTENTION\n\nReboot the instance after changing the instance that all services are aware of the timezone change.\n\nEdit this page\nPrevious\n« Events\nNext\nBackups »\nReboot\nServices\nSettings\nProftpd Settings\nInstance Settings\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Events | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/admin-area/events/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nEvents\n\nIn the Events overview, you see which user has made changes in CloudPanel.\n\nEdit this page\nPrevious\n« Users\nNext\nInstance »\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Users | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/admin-area/users/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nUsers\nRoles\n\nYou can create additional users with restricted access. Each role has specific permissions, explained in the following section.\n\nAdmin\n\nUsers with the Admin role have full permissions and are not restricted to the frontend, admin area, or a specific site.\n\nSite Manager\n\nUsers with the Site Manager role have full access to manage all sites but no access to the admin area.\n\nUser\n\nUsers with the User role are restricted to specific sites. They only see the assigned sites and cannot see and manage other sites.\n\nUser\nAdding a User\n\nTo add a new User do the following steps:\n\nIn the left menu, click on Users and click on the button Add User.\nFill the form and click on the button Add User.\nTIMEZONE\n\nThe Timezone is essential for showing the right time in the monitoring graphs on the dashboard in the frontend area.\n\nDeleting a User\nIn the left menu, click on Users and click on the User Name you want to delete.\nTo delete the user, click on the button Delete bottom left.\nEdit this page\nPrevious\n« Logs\nNext\nEvents »\nRoles\nAdmin\nSite Manager\nUser\nUser\nAdding a User\nDeleting a User\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Logs | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/frontend-area/logs/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nLogs\n\nThe Log Viewer provides fast access to the NGINX and PHP-FPM log files.\n\nAll log files can be found on the instance as well, in the following directory: /home/$siteUser/logs/\n\nEdit this page\nPrevious\n« Cron Jobs\nNext\nUsers »\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Cron Jobs | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/frontend-area/cron-jobs/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nCron Jobs\n\nCron is one of the most valuable utilities that you can find in any Unix-like operating system.\nIt is used to schedule commands at a specific time. These scheduled commands or tasks are known as Cron Jobs.\n\nAdding a Cron Job\nVia CloudPanel\n\nTo add a Cron Job, click on the Cron Jobs tab, select a Template and enter the Command you want to execute.\n\nVia Command Line\n\nThe standard linux way to configure Cron Jobs on the command line can be used as well.\n\nLogin via SSH with the Site User.\nssh site-user@instance-ip-address\n\nEnter the following command to edit Cron Jobs:\ncrontab -e\n\nConfigure your Cron Job.\n\nOn the following site, you find some useful examples of how to configure them.\n\nDeleting a Cron Job\n\nTo delete a Cron Job, click on the Cron Jobs tab and click on Delete and confirm your action.\n\nEdit this page\nPrevious\n« File Manager\nNext\nLogs »\nAdding a Cron Job\nVia CloudPanel\nVia Command Line\nDeleting a Cron Job\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "File Manager | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/frontend-area/file-manager/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nFile Manager\n\nWith the File Manager, you can organize your site files with an easy-to-use graphical interface.\n\nManaging your site files is a pleasure with the File Manager. Creating new files and folders and editing files with an editor with syntax highlighting makes your work easier and faster.\n\nFeatures\nAdding files and folders\nDrag & drop file uploading\nEditing files in an editor with syntax highlighting\nExtracting Files (.zip, .tar, .gz)\nCompressing Files\nCopy & Paste\nChanging Permissions\nFile Downloading\nEdit this page\nPrevious\n« SSH/FTP\nNext\nCron Jobs »\nFeatures\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "SSH/FTP | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/frontend-area/ssh-ftp/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nSSH/FTP\nSSH/FTP\n\nThe SSH protocol (also referred to as Secure Shell) is a method for securing remote login from one computer to another.\nIt provides several alternative options for strong authentication, and it protects the communication's security and integrity with strong encryption.\n\nAdding a User\n\nTo add a new SSH User, click on the tab SSH/FTP and enter a User Name and Password and click on Add User.\n\nAdd your Public SSH Key(s) if you want to log in via Public Key authentication.\n\nDeleting a User\n\nTo delete an SSH User, click on the tab SSH/FTP and then on Delete and confirm your action.\n\nPassword Change\n\nTo change the password for an SSH User, click on the tab SSH/FTP and then on the User Name.\n\nEnter a new strong Password or click on Generate new password and click on Save.\n\nSSH Login\n\nTo login via SSH to the instance, you need a terminal like iterm2 for macOS or putty for Windows.\n\nThe SSH port is 22 (default port). Before you try to connect with SSH, make sure that port 22 is open for your ip address.\n\nLinux and MacOS:\n\nSSH login via password\n\nssh john-doe@instance-ip-address\n\n\nSSH login via private key\n\nssh -i path_to_your_private_key.pem john-doe@instance-ip-address\n\n\nWindows:\n\nIn the Host Name field, enter the instance ip address and click on the button Open.\n\nPutty will ask you to enter the User Name and Password in the next step.\n\nSFTP Login\n\nTo login via SFTP to the instance, you need a client like FileZilla.\n\nMake sure that the SSH port 22 is open for your ip address.\n\nEnter the Host, Username, Password and Port fields and click on the button Quickconnect.\n\nPORT\n\nMake sure to use port 22 for an SFTP connection.\n\nFTP\n\nThe File Transfer Protocol (FTP) is a standard network protocol used to transfer computer files between a client and server on a computer network.\n\nAdding a User\n\nTo add a new FTP User, click on the tab SSH/FTP and enter a User Name, Password, and Home Directory and click on Add User.\n\nDeleting a User\n\nTo delete an FTP User, click on the tab SSH/FTP and then on Delete and confirm your action.\n\nPassword Change\n\nTo change the password for an FTP User, click on the tab SSH/FTP and then on the User Name.\n\nEnter a new strong Password or click on Generate new password and click on Save.\n\nFTP Login\n\nTo login via FTP to the server, you need a client like FileZilla.\n\nEnsure the Proftpd MasqueradeAddress is correctly set.\n\nGo to the Firewall in the Admin Area and add the following rule.\n\nClick on Add Rule to open the ports 20-21 for your IP.\n\nCloudPanel will also create the rule ProFTPD Passive Ports which opens the port range 49152-65534 for your IP.\n\nOpen Filezilla and enter Host, Username, Password and Port fields and click on the button Quickconnect.\nPORT\n\nMake sure to use port 21 for an FTP connection.\n\nEdit this page\nPrevious\n« Security\nNext\nFile Manager »\nSSH/FTP\nAdding a User\nDeleting a User\nPassword Change\nSSH Login\nSFTP Login\nFTP\nAdding a User\nDeleting a User\nPassword Change\nFTP Login\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Security | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/frontend-area/security/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nSecurity\nIP Blocking\n\nTo block an IP, click on the tab Security and on the button Add IP top right.\n\nThe IP to block can be entered as ipv4 or ipv6 format. Click on the button Add IP to save.\n\nExamples:\n\n8.8.8.8 (ipv4)\n192.168.0.1/32 (ipv4 CIDR Format)\n2400:6180:100:d0::99b:5001 (ipv6)\nBots Blocking\n\nTo block a Bot, click on the tab Security and on the button Add Bot top right.\n\nEnter the Bot Name and click on the button Add Bot to save.\n\nBOT NAME\n\nThe Bot Name is case insensitive. As example: fatbot would be the same as FatBot.\n\nBasic Authentication\n\nA Basic Authentication is useful to prevent traffic to your site when you don't want to have it public, e.g., during the development of a project or for test/staging environments.\n\nTo enable the Basic Authentication, use the switch, enter a User Name and Password, and click on Save.\n\nCloudflare\n\nIf you use Cloudflare, you should Allow traffic from Cloudflare only that attackers cannot bypass the domain.\n\nEnsure that your DNS Records are Proxied (orange cloud) through the Cloudflare network.\n\nEdit this page\nPrevious\n« SSL/TLS\nNext\nSSH/FTP »\nIP Blocking\nBots Blocking\nBasic Authentication\nCloudflare\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "SSL/TLS Certificates | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/frontend-area/tls/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nSSL/TLS Certificates\n\nBy default, a self-signed certificate is generated.\n\nLet's Encrypt Certificate\n\nTo issue a free Let's Encrypt certificate, click on the button Actions and select New Let's Encrypt Certificate.\n\nAdd the Domain Names and click on Create and Install to issue a Let's Encrypt Certificate.\n\nDNS RECORDS\n\nMake sure to have a valid DNS record for the domains you want to create a certificate for.\n\nCloudflare Certificate\n\nYou don't need to issue a Let's Encrypt Certificate if you use Cloudflare.\n\nRECOMMENDATION\n\nFor higher security, it's recommended to enable Allow traffic from Cloudflare only for your site so that attackers cannot bypass the traffic.\n\nTo use the free certificates from Cloudflare, do the following:\n\nEnable the Proxy for your DNS Records.\nClick on SSL/TLS in the left menu and choose the Full mode.\nImport Certificate\n\nThe majority of the websites are OK with the free Let's Encrypt Certificates, but in some cases e.g.\nfor an Extended Validation Certificate, you need to buy and import the certificate.\n\nTo import a certificate, click on the button Actions and select Import Certificate.\nEnter the Private Key, Certificate, and Certificate Chain and click on Import and Install.\nEdit this page\nPrevious\n« E-Mail\nNext\nSecurity »\nLet's Encrypt Certificate\nCloudflare Certificate\nImport Certificate\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "E-Mail | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/frontend-area/e-mail/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nE-Mail\n\nCloudPanel doesn't provide E-Mail because of performance. We want to keep it clean and lightweight.\n\nE-Mail is very complex and shouldn't be handled by the server that runs your Applications.\n\nThere are many companies that offer professional E-Mail services for less than $ 1 / per user per month.\n\nE-Mail Service Providers\nZoho Mail (FREE but limited, POP3 and IMAP only in paid version)\nGoogle Workspace (Our recommendation)\nAmazon WorkMail\nMicrosoft 365\nGoDaddy\nSelf Hosted Solutions\nMailcow\n\nMailcow is a free dockerized email solution. Follow the Guide to learn how to set up Mailcow on CloudPanel.\n\nEdit this page\nPrevious\n« Plugin\nNext\nSSL/TLS »\nE-Mail Service Providers\nSelf Hosted Solutions\nMailcow\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "WordPress - Plugin | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/frontend-area/varnish-cache/wordpress/plugin/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nWordPress - Plugin\n\nWith the plugin CLP Varnish Cache Plugin for WordPress, you can manage the cache settings and perform purge operations.\n\nInstallation\nLogin into WordPress and click in the admin area in the left menu on Plugins --> Add New and search for CLP Varnish Cache.\nClick on the button Install Now and then on Activate to finish the installation.\nBug Reporting\n\nIf you find a bug, please create a New issue on github.\n\nEdit this page\nPrevious\n« Service\nNext\nE-Mail »\nInstallation\nBug Reporting\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Developer Guide - PHP Controller | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/frontend-area/varnish-cache/developer-guide/php-controller/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nDeveloper Guide - PHP Controller\n\nCaching a dynamic site like WordPress, WooCommerce, or other PHP Applications isn't easy.\nMost pages can be cached, but some may not be cached as they are individual to each user, such as carts, checkouts, or customer areas.\n\nThe caching behavior, like the maximum caching lifetime or if a site path should be excluded from caching, is being controlled via a PHP Controller, which gets added when you enable Varnish Cache in the settings.\n\nThe Controller File\n\nThe PHP Controller for Varnish Cache is a PHP File that get prepended to the application via auto_prepend_file.\n\nWhen you enable Varnish Cache, the PHP Controller gets added like other PHP Settings via NGINX VHOST.\n\nauto_prepend_file=/home/siteUser/.varnish-cache/controller.php;\n\n\nFor WordPress/WooCommerce, Laravel, Symfony, and other PHP Applications, we have a controller that can be found in the following git repository https://github.com/cloudpanel-io/varnish-controllers/.\n\nWhen you create a site for an application that supports Varnish Cache, the right controller file gets automatically added to /home/$siteUser/.varnish-cache/.\n\nThe example below shows the PHP Controller File used for WordPress/WooCommerce.\n\nYou will find the varnish controller file in the site's home directory.\n\n/home/$siteUser/.varnish-cache/controller.php\n\n\nAs mentioned earlier, the file gets added via auto_prepend_file, which means it's the first code that gets executed.\n\nVarnish Cache is being controlled via the Cache-Control header.\n\nBy sending the following Cache-Control header, we say Varnish Cache to store a copy of the page for 604800 seconds before it gets expired.\n\nCache-Control: public, max-age=604800, s-maxage=604800\n\n\nThe controller decides if a page can be cached and is sending headers to Varnish Cache:\n\nX-Cache-Lifetime\nX-Cache-Tags\nCache-Control\n\nBy checking the response headers of a page, you will find x-cache-age, x-cache-lifetime, and x-cache-tags.\n\nThe value of x-cache-age returns the age of the page in seconds stored in Varnish Cache and remains until x-cache-lifetime before expiring.\n\nThe controller's main function is to check if a page can be cached and to enrich the X-Cache-Tags before sending the headers.\n\nheader_register_callback\n\nAt line 321, you see the callback $headerRegisterCallback registered.\n\nThe header_register_callback will be called when PHP starts sending output.\n\nheader_register_callback($headerRegisterCallback);\n\n\nIn this callback, additional tags are added and required for specific purge operations.\n\nregister_shutdown_function\n\nThe register_shutdown_function callback $registerShutdownCallback is responsible for purge operations.\nIf a specific action is happening, e.g., someone is editing a post in the admin area, all pages for a specific cache tag get purged.\n\nCustom Applications\n\nYou can set the caching lifetime to your needs for custom PHP Applications based on Laravel, Symfony, or other PHP frameworks.\n\nFor example, if you have a page that should only be cached for 10 minutes, you can call the static method setCacheLifetime.\n\nClpVarnish::setCacheLifetime(600);\n\n\nFor enriching cache tags, e.g., a list of product ids, you can call the static method addCacheTag.\nMake sure that you use the cache-tag prefix in front.\n\n<?php\n$cacheTagPrefix = ClpVarnish::getCacheTagPrefix();\n$cacheTag = sprintf('%s-%s', $cacheTagPrefix, 'my-cache-tag');\nClpVarnish::addCacheTag($cacheTag);\n\nDeveloper Mode\n\nWhen the developer mode is enabled, all purge requests are logged into the following log file:\n\n/home/$siteUser/logs/varnish-cache/purge.log\n\n\nTo enable the developer mode, do the following:\n\nLogin via SSH with the site user.\n\nOpen the controller.php file:\n\nnano ~/.varnish-cache/controller.php\n\nSet VARNISH_DEVELOPER_MODE to true:\ndefine('VARNISH_DEVELOPER_MODE', true);\n\nTail the purge.log to see the purges:\ntail -f ~/logs/varnish-cache/purge.log -n1000\n\nEdit this page\nPrevious\n« Vhost\nNext\nService »\nThe Controller File\nheader_register_callback\nregister_shutdown_function\nCustom Applications\nDeveloper Mode\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Service | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/frontend-area/varnish-cache/service/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nService\nService Settings\n\nBy default, 512MB of data can be stored in the memory. You should consider increasing the value if you have many sites on the server or sites with many pages.\n\nTo give Varnish Cache more memory, do the following:\n\nLogin via SSH as root user.\n\nOpen the systemd service file:\n\nnano /lib/systemd/system/varnish.service\n\nIncrease the malloc value from 512m e.g. to 2048m:\nExecStart=/usr/sbin/varnishd \\\n          -a :6081 \\\n          -f /etc/varnish/default.vcl \\\n          -P %t/%N/varnishd.pid \\\n          -p feature=+http2 \\\n          -p http_resp_hdr_len=40000 \\\n          -s malloc,512m\n\nReload systemd manager configuration:\nsystemctl daemon-reload\n\nRestart the Varnish Cache Service:\nsystemctl restart varnish\n\nConfiguration File\n\nThe Varnish Cache Configuration File can be found at:\n\n/etc/varnish/default.vcl\n\n\nAfter making changes, you need to reload the configuration.\n\nLogin via SSH as root user.\n\nRun varnishreload to use the new compiled vlc configuration:\n\nvarnishreload\n\nEdit this page\nPrevious\n« PHP Controller\nNext\nPlugin »\nService Settings\nConfiguration File\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Developer Guide - Vhost | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/frontend-area/varnish-cache/developer-guide/vhost/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nDeveloper Guide - Vhost\nBasics\n\nVarnish Cache is a caching HTTP reverse proxy that speeds up your sites by storing the compressed Page Source in memory.\nStatic files like CSS, JS, and Images are NOT being stored in Varnish Cache because NGINX delivers them faster.\n\nWhen you open your site, e.g., https://www.domain.com, the request goes to NGINX, where SSL/TLS gets terminated.\nIf the request is a static file like a Stylesheet, Javascript, or an Image, it gets delivered immediately by NGINX.\nAll other requests are forwarded to Varnish Cache (Port 6081).\n\nIf Varnish Cache has a cache entry for a request, the page source gets immediately returned from memory without being processed by PHP-FPM.\n\nIf no cache entry exists, the request gets forwarded by Varnish Cache to NGINX port 8080, where it gets processed by the PHP Application via PHP-FPM.\n\nVhost Explanation\n\nThe Vhost below is being used for WordPress/WooCommerce.\n\nIn line 1-14 a redirect for domain.com takes place. All requests from http and https are redirected via 301 to https://www.domain.com.\n\nThe static files like CSS, JS, and Images are delivered at line 84-92.\nAll other requests are going through the location /, line 66-82.\n\nAt line 67, you see the placeholder {{varnish_proxy_pass}}.\n\nWhen Varnish Cache is disabled, the rendered value for this placeholder is:\n\nproxy_pass http://127.0.0.1:8080;\n\n\nWhen Varnish Cache is enabled, it uses the value of Varnish Server from the Varnish Cache Settings, e.g.,\n\nproxy_pass http://127.0.0.1:6081;\n\n\nLines 48-64 are special for WordPress/WooCommerce.\n\nAll requests to /wp-admin/ and wp-login.php are bypassed, meaning they are NOT going through Varnish Cache; they are forwarded to port 8080 (see lines 99-134), where they get processed by the PHP Application via PHP-FPM.\n\nEdit this page\nPrevious\n« Settings\nNext\nPHP Controller »\nBasics\nVhost Explanation\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Settings | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/frontend-area/varnish-cache/settings/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nSettings\n\nVarnish Cache is integrated into CloudPanel as a turn-key solution. Enable Varnish Cache to get blazing fast page loads, up to 250 times faster. Change the Cache Lifetime, Excluded Params, and Excludes to your needs.\n\nCache Tag Prefix\n\nThe Cache Tag Prefix is the main cache tag used on every page. Other cache tags use this prefix in front.\n\nExcluded Params\n\nThe Excluded Params is a list of GET Parameters to disable caching.\n\nAs example, the following Urls are not being cached.\n\nhttps://www.domain.com/?noCache=1\nhttps://www.domain.com/?page=1&__SID=e71d59d553fc2d8faa774627c48a02ba\nExcludes\nATTENTION\n\nPurge the url/file from the cache after adding it to the Excludes.\n\nIn the Excludes, you can configure files or paths that shouldn't be cached.\n\nExample Excludes:\n\n^/my-account/ --> Urls starting with /my-account/ are not being cached\n/cart/ --> Urls containing /cart/ are not being cached\nwp-login.php --> File will not be cached\nPurge Cache\n\nPurge Entire Cache removes the entire cache for a site from Varnish Cache.\n\nUnder the hood, a PURGE request with the header X-Cache-Tags is being sent to port 6081 (Varnish Cache):\n\ncurl -v -X PURGE -H 'X-Cache-Tags: aac6' 127.0.0.1:6081\n\n\nYou can purge more specifically by entering a single url or tags separated by a comma.\n\nDeveloper Guide\n\nCheck out the Developer Guide for a detailed guide on how Varnish Cache works and how it's integrated into CloudPanel.\n\nEdit this page\nPrevious\n« Introduction\nNext\nVhost »\nCache Tag Prefix\nExcluded Params\nExcludes\nPurge Cache\nDeveloper Guide\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Introduction | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/frontend-area/varnish-cache/introduction/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nIntroduction\n\nVarnish Cache is a caching HTTP reverse proxy that speeds up your sites with a factor of 100 - 250x.\nA copy of your page is stored in memory after the first time a user visits the page.\n\nVarnish Cache is integrated into CloudPanel as a turn-key solution. Enable Varnish Cache, and your sites will fly.\n\nWhat is Varnish Cache?\nBenefits\nBlazing Fast Page Loads - Up to 250x faster\nUp to 80% savings in Infrastructure\nImproved User Experience\nBetter Search Ranking\nSupported Applications\n\nWe constantly work to support more Applications, join us in Discord and help us support more Applications.\n\nRight now, the following PHP Applications have support for Varnish Cache:\n\nWordPress\nWooCommerce\nCodeigniter\nLaravel\nSymfony\nGeneric\nSlim\nEdit this page\nPrevious\n« Databases\nNext\nSettings »\nWhat is Varnish Cache?\nBenefits\nSupported Applications\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Databases | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/frontend-area/databases/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nDatabases\nAdding a Database\nClick on Add Database to create a new database.\nEnter the Database Name, Database User Name, and Database User Password and click on the button Add Database.\nDeleting a Database\n\nTo delete a database, click on Delete and confirm your action.\n\nAdding a Database User\nClick on Add Database User to add a new user to your database.\nEnter the Database User Name, Database User Password, and select the Database and the Permissions.\nDeleting a Database User\n\nTo delete a database user, click on Delete and confirm your action.\n\nphpMyAdmin\n\nTo manage a database via phpMyAdmin, click on Manage, and you will be forwarded to phpMyAdmin.\n\nATTENTION\n\nDo not use phpMyAdmin to export and import databases; it can destroy your database.\nUse export and import guide from below.\n\nExporting a Database\n\nFor exporting a database, CloudPanel uses mysqldump client utility.\n\nTo export a database, do the following.\n\nLogin via SSH with the Site User.\nssh site-user@instance-ip-address\n\nGo to the directory where the database dump should be saved e.g., the tmp directory of the user.\ncd ~/tmp/\n\nRun clpctl to see all available commands.\nclpctl\n\nUse the following command to export a database.\nCOMPRESSION\n\nThe database dump will be gzipped if you add .sql.gz at the end of the file name. If you want to export the database uncompressed, use .sql.\n\nclpctl db:export --databaseName=my-database --file=dump.sql.gz\n\nImporting a Database\n\nFor importing a database, CloudPanel uses mysql command-line client.\n\nTo import a database, do the following.\n\nLogin via SSH with the Site User.\nssh site-user@instance-ip-address\n\nRun clpctl to see all available commands.\nclpctl\n\nGo to the database dump's directory and use the following command to import a database.\nclpctl db:import --databaseName=my-database --file=dump.sql.gz\n\nDatabase Backups\n\nCloudPanel creates a dump of each database every night at 3:15 AM with a retention period of 7 days.\n\nAll database backups can be found in the backups directory of the site user.\n\n/home/$site-user/backups/\n\n\nIf you have smaller databases, you can change the cron job to run more frequently, like twice a day.\n\nTo change the schedule of the database backup task, do the following:\n\nLogin via SSH to your instance and become root.\nsudo su root\n\nOpen the crontab:\nnano /etc/cron.d/clp\n\nChange the backup task schedule to your needs.\n15 3 * * * clp /usr/bin/bash -c \"/usr/bin/clpctl db:backup --ignoreDatabases='db1,db2' --retentionPeriod=7\" &> /dev/null\n\nRETENTION PERIOD\n\nIf you want to save the database backups for more than seven days, change the retentionPeriod value.\n\nDatabase Master Credentials\n\nTo see the Master Database Credentials, do the following.\n\nLogin via SSH to your instance and become root.\nsudo su root\n\nRun the following command:\nclpctl db:show:master-credentials\n\n\nThe output will look like this:\n\nCopy the Connect Command to get connected to your database server.\n\nRemote Database Access\n\nFor a remote connection to your database, go to Firewall in the Admin Area and whitelist your IP for the MySQL port 3306 in the Firewall.\n\nEdit this page\nPrevious\n« Vhost\nNext\nIntroduction »\nAdding a Database\nDeleting a Database\nAdding a Database User\nDeleting a Database User\nphpMyAdmin\nExporting a Database\nImporting a Database\nDatabase Backups\nDatabase Master Credentials\nRemote Database Access\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Vhost | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/frontend-area/vhost/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nVhost\nVhost Editor\n\nIn the Vhost Editor, you can make changes on the NGINX VHost, which allows you to apply rewrites, redirects, reverse proxies, and other settings.\n\nUnder the hood, CloudPanel checks the syntax and reverts the changes to prevent downtime, and throws an error message.\n\nOn Github, you find all vhost templates automatically updated every night.\n\nHTTP/3\nHTTP/3 SUPPORT\n\nUbuntu 24.04 and Debian 12 are being shipped with nginx 1.26.0, which has experimental support for HTTP/3.\nIf you are using a custom firewall, make sure to have UDP Port 443 open, as it's required for HTTP/3.\nHTTP/3 requires a valid SSL/TLS Certificate and does not work with a self-signed certificate.\n\nHTTP/3 can be enabled in the vhost for each site. By default, http3 is set to off.\n\nTo enable HTTP/3, set http3 to on and click on the button Save.\n\nTo check if HTTP/3 is working for your site, you can use the HTTP/3 Check.\n\nEdit this page\nPrevious\n« Settings\nNext\nDatabases »\nVhost Editor\nHTTP/3\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Settings | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/frontend-area/settings/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nSettings\nDomain Settings\n\nIn the Domain Settings, you can change your site's Root Directory. By default, the Domain Name will be used but can be changed to your needs.\n\nSite User Settings\n\nIn the Site User Settings, you can reset the password for the primary SSH User or add SSH Keys if you want to use SSH Public Key Authentication.\n\nPHP/Node.js/Python/Reverse Proxy Settings\nPHP Settings\nNode.js Settings\nPython Settings\nReverse Proxy Settings\n\nIn the PHP Settings, you can change the PHP Version and change other settings like:\n\nmemory_limit\nmax_execution_time\nmax_input_time\nmax_input_vars\npost_max_size\nupload_max_filesize\n\nThe most common settings can be modified to your needs, but you can overwrite them in the\nAdditional Configuration Directives if you need to change other parameter values.\n\nPageSpeed\n\nCloudPanel is shipped with the Google PageSpeed Module for NGINX, automatically optimizing your site for better performance.\n\nEnable the PageSpeed module for NGINX by using the switch and clicking on the button Save.\n\nYou can modify the rules; see the PageSpeed Documentation for detailed information.\n\nDelete Site\n\nTo delete a site, click on the button Delete Site and confirm the action by entering the Domain Name.\n\nATTENTION\n\nDeleting a site will permanently remove all site files, databases, users, and configs, and they will be non-recoverable.\n\nEdit this page\nPrevious\n« Account\nNext\nVhost »\nDomain Settings\nSite User Settings\nPHP/Node.js/Python/Reverse Proxy Settings\nPageSpeed\nDelete Site\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Account | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/frontend-area/account/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nAccount\n\nTo edit your account information, click on the account icon top right and settings.\n\nSettings\n\nYou can change your E-Mail, First Name, Last Name, or change your Password.\n\nTwo-Factor Authentication\nEnable 2-FA\n\nTo enable Two-Factor Authentication, click in your account on the Security tab and click on the Enable Two-Factor Authentication.\n\nOpen an app like Google Authenticator or Duo, scan the QR code, and enter one authentication code to confirm.\n\nDisable 2-FA\n\nTo disable Two-Factor Authentication, click in your account on the tab Security and click on the button\nDisable Two-Factor Authentication.\n\nIf you can't log in into CloudPanel, you can disable Two-Factor Authentication also from the command line,\nsee Root User Commands.\n\nEdit this page\nPrevious\n« Add Site\nNext\nSettings »\nSettings\nTwo-Factor Authentication\nEnable 2-FA\nDisable 2-FA\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Add Site | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/frontend-area/add-site/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nAdd Site\n\nWith CloudPanel, you can Create a WordPress Site, Create a PHP Site, Create a Node.js Site, Create a Static HTML Site, Create a Python Site or Create a Reverse Proxy.\n\nCreate a WordPress Site\nFill out all fields and click on Create to Create a WordPress Site.\nCopy the credentials for your created WordPress site in a secure place.\nSITE USER\n\nThe Site User is an SSH User. All files will be stored in his home directory: /home/$siteUser\n\nCreate a PHP Site\nBEST PRACTICES - PHP SITE MIGRATION\n\nBefore you start, please read the best practices for migrating PHP Sites.\n\nSelect the Application, the Domain Name, and the PHP Version. The PHP Version can be changed later if needed.\nREDIRECTION\n\nWhen you enter the Domain Name with www, a redirection from non-www to www will be created automatically and vice versa. All HTTP requests are redirected to HTTPS by default.\n\nClick on Create to create the PHP Site.\n\nYou can now use the Site User to log in via SSH to upload the application files.\n\nCreate a Node.js Site\nEnter the Domain Name, select the Node.js Version, and the App Port.\n\nThe Node.js Versions are managed via Node Version Manager.\n\nREDIRECTION\n\nWhen you enter the Domain Name with www, a redirection from non-www to www will be created automatically and vice versa. All HTTP requests are redirected to HTTPS by default.\n\nYou can now use the Site User to log in via SSH to upload the application files.\nCreate a Static HTML Site\nEnter the Domain Name you want to use for your site.\nREDIRECTION\n\nWhen you enter the Domain Name with www, a redirection from non-www to www will be created automatically and vice versa. All HTTP requests are redirected to HTTPS by default.\n\nYou can now use the Site User to log in via SSH to upload the HTML files.\nCreate a Python Site\nEnter the Domain Name, select the Python Version and enter the App Port.\nREDIRECTION\n\nWhen you enter the Domain Name with www, a redirection from non-www to www will be created automatically and vice versa. All HTTP requests are redirected to HTTPS by default.\n\nYou can now use the Site User to log in via SSH to upload the application files.\nCreate a Reverse Proxy\nEnter the Domain Name, Reverse Proxy Url, Site User, and Site User Password.\nREDIRECTION\n\nWhen you enter the Domain Name with www, a redirection from non-www to www will be created automatically and vice versa. All HTTP requests are redirected to HTTPS by default.\n\nEdit this page\nPrevious\n« Other\nNext\nAccount »\nCreate a WordPress Site\nCreate a PHP Site\nCreate a Node.js Site\nCreate a Static HTML Site\nCreate a Python Site\nCreate a Reverse Proxy\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Other | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/getting-started/other/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nOther\n\nOn this page, we explain step by step how to install CloudPanel on a dedicated server or any other cloud.\n\n\nFor the installation, you need an empty server with Ubuntu 24.04 or 22.04 or Debian 12 or 11 with root access.\n\nInstall CloudPanel\n\nLogin via SSH to the Server.\n\nIf you are using a private key to login, the SSH command would be:\n\nssh -i path_to_your_private_key root@yourIpAddress\n\n\nIf you are using a password to login, the SSH command would be:\n\nssh root@yourIpAddress\n\n\nBefore running the installer, we need to update the system and install the required packages.\n\napt update && apt -y upgrade && apt -y install curl wget sudo\n\nUbuntu 24.04 LTS\nUbuntu 22.04 LTS\nDebian 12 LTS\nDebian 11 LTS\n\nRun the installer with your preferred Database Engine.\n\nMySQL 8.0\nMariaDB 10.11\ncurl -sS https://installer.cloudpanel.io/ce/v2/install.sh -o install.sh; \\\necho \"2aefee646f988877a31198e0d84ed30e2ef7a454857b606608a1f0b8eb6ec6b6 install.sh\" | \\\nsha256sum -c && sudo bash install.sh\n\nAccess CloudPanel\nSECURITY\n\nFor security reasons, access CloudPanel as fast as possible to create the admin user. There is a small time window where bots can create the user. If possible, open port 8443 only for your IP via firewall.\n\nYou can now access CloudPanel via Browser: https://yourIpAddress:8443\n\nIgnore the self-signed certificate warning and click on Advanced and Proceed to continue to CloudPanel.\n\nEdit this page\nPrevious\n« Installer\nNext\nAdd Site »\nInstall CloudPanel\nAccess CloudPanel\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Vultr Installer | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/getting-started/vultr/installation/installer/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nVultr Installer\n\nOn this page, we explain step by step how to install CloudPanel on VULTR.\n\nLaunch an Instance\n\nLogin nto your VULTR account.\n\nIn the left navigation, click on Products and then on Deploy Server.\n\nChoose Type\n\nChoose the Type like Optimized Cloud Compute - Dedicated CPU or Cloud Compute - Shared CPU.\n\nChoose Location\n\nChoose the Instance Location closest to your visitors.\n\nChoose Image\n\nSelect Ubuntu 24.04 or 22.04 or Debian 12 or 11 as OS Image.\n\nChoose Plan\n\nSelect the Instance Size you want to deploy. We recommend the AMD High Performance with at least 1 vCPU with 2 GB of Memory.\n\nServer Settings\n\nChoose an SSH Key to connect via SSH after deploying the instance.\n\nServer Hostname & Deploy Now\n\nEnter a server hostname and click on the button Deploy Now.\n\nInstall CloudPanel\n\nAfter launching the Instance, log in with SSH and run the installer script.\n\nUbuntu 24.04 LTS\nUbuntu 22.04 LTS\nDebian 12 LTS\nDebian 11 LTS\nLogin via SSH to the Instance.\nssh -i path_to_your_private_key root@serverIpAddress\n\nUpdate the system and install the required packages.\napt update && apt -y upgrade && apt -y install curl wget sudo\n\nRun the installer with your preferred Database Engine.\nMySQL 8.0\nMariaDB 10.11\ncurl -sS https://installer.cloudpanel.io/ce/v2/install.sh -o install.sh; \\\necho \"2aefee646f988877a31198e0d84ed30e2ef7a454857b606608a1f0b8eb6ec6b6 install.sh\" | \\\nsha256sum -c && sudo CLOUD=vultr bash install.sh\n\nAccess CloudPanel\nSECURITY\n\nFor security reasons, access CloudPanel as fast as possible to create the admin user. There is a small time window where bots can create the user. It's highly recommended to open port 8443 only for your IP via firewall.\n\nYou can now access CloudPanel via Browser: https://serverIpAddress:8443\n\nIgnore the self-signed certificate warning and click on Advanced and Proceed to continue to CloudPanel.\n\nEdit this page\nPrevious\n« Marketplace\nNext\nOther »\nLaunch an Instance\nChoose Type\nChoose Location\nChoose Image\nChoose Plan\nServer Settings\nServer Hostname & Deploy Now\nInstall CloudPanel\nAccess CloudPanel\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Vultr Marketplace | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/getting-started/vultr/installation/marketplace/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nVultr Marketplace\n\nOn this page, we explain step by step how to run CloudPanel on VULTR.\n\nLaunch an Instance\n\nLogin nto your VULTR account.\n\nClick on the button Deploy CloudPanel Instance.\n\nUbuntu 24.04 LTS\nDebian 12 LTS\n\nChoose Type\n\nChoose the Type like Optimized Cloud Compute - Dedicated CPU or Cloud Compute - Shared CPU.\n\nChoose Location\n\nChoose the Instance Location closest to your visitors.\n\nChoose Plan\n\nSelect the Instance Size you want to deploy. We recommend the AMD High Performance with at least 1 vCPU with 2 GB of Memory.\n\nServer Settings\n\nChoose an SSH Key to connect via SSH after deploying the instance.\n\nServer Hostname & Deploy Now\n\nEnter a server hostname and click on the button Deploy Now.\n\nAccess CloudPanel\nSECURITY\n\nFor security reasons, access CloudPanel as fast as possible to create the admin user. There is a small time window where bots can create the user. It's highly recommended to open port 8443 only for your IP via firewall.\n\nYou can now access CloudPanel via Browser: https://serverIpAddress:8443\n\nIgnore the self-signed certificate warning and click on Advanced and Proceed to continue to CloudPanel.\n\nEdit this page\nPrevious\n« Installer\nNext\nInstaller »\nLaunch an Instance\nChoose Type\nChoose Location\nChoose Plan\nServer Settings\nServer Hostname & Deploy Now\nAccess CloudPanel\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Oracle Cloud Installer | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/getting-started/oracle-cloud/installation/installer/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nOracle Cloud Installer\n\nOn this page, we explain step by step how to install CloudPanel on Oracle Cloud.\n\nCreate a Virtual Cloud Network\nGo to Virtual Cloud Networks and click on Start VNC Wizard.\nEnter a VCN Name and click on the button Next bottom left.\nReview and click on Create.\nFirewall Configuration\nClick on your created VCN, and then click on the public subnet.\nClick on Default Security List for cloudpanel for whitelisting ports.\nClick on Add Ingress Rules and create a rule for 80, 443, and 8443.\nCreate Instance\n\nGo to Instances and click on the button Create Instance.\n\nEnter the Name of the Instance and select the compartment.\n\nPlacement\nImage and Shape\n\nChange the image to Ubuntu 22.04 or Debian 11 and select your Shape.\n\nNetworking\n\nSelect your created Virtual Cloud Network and select the public subnet.\n\nSSH Keys\n\nUpload your SSH Keys or generate a new key pair.\n\nProvision Instance\n\nClick on Create to provision the instance, it may take some minutes.\n\nInstall CloudPanel\n\nAfter launching the Instance, log in with SSH and run the installer script.\n\nUbuntu 24.04 LTS\nUbuntu 22.04 LTS\nDebian 12 LTS\nDebian 11 LTS\nLogin via SSH to the Instance.\nssh -i path_to_your_private_key ubuntu@serverIpAddress\n\nSwitch from the user ubuntu to root:\nsudo su root\n\nUpdate the system and install the required packages.\napt update && apt -y upgrade && apt -y install curl wget sudo cron\n\nRun the installer with your preferred Database Engine.\nMySQL 8.0\nMariaDB 10.11\nMariaDB 10.6\ncurl -sS https://installer.cloudpanel.io/ce/v2/install.sh -o install.sh; \\\necho \"2aefee646f988877a31198e0d84ed30e2ef7a454857b606608a1f0b8eb6ec6b6 install.sh\" | \\\nsha256sum -c && sudo CLOUD=oci bash install.sh\n\nAccess CloudPanel\nSECURITY\n\nFor security reasons, access CloudPanel as fast as possible to create the admin user. There is a small time window where bots can create the user. It's highly recommended to open port 8443 only for your IP.\n\nReboot the Instance, and after booting, you can now access CloudPanel via Browser: https://publicIpAddress:8443\n\nIgnore the self-signed certificate warning and click on Advanced and Proceed to continue to CloudPanel.\n\nEdit this page\nPrevious\n« Installer\nNext\nMarketplace »\nCreate a Virtual Cloud Network\nFirewall Configuration\nCreate Instance\nPlacement\nImage and Shape\nNetworking\nSSH Keys\nProvision Instance\nInstall CloudPanel\nAccess CloudPanel\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Google Compute Engine Installer | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/getting-started/google-compute-engine/installation/installer/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nGoogle Compute Engine Installer\n\nOn this page, we explain step by step how to install CloudPanel on Google Compute Engine.\n\nLaunching an Instance\n\nLog in to the Google Cloud Console.\n\nIn the left navigation, click on Compute Engine --> VM instances and click on the button Create Instance.\n\nName and Region\n\nEnter the Name of the instance and select a Region to deploy.\n\nMachine Configuration\n\nSelect the Machine Family, Series and Machine Type.\n\nBoot Disk\n\nSelect Ubuntu 24.04 or 22.04 or Debian 12 or 11 as Boot Disk Image.\n\nMINIMUM SIZE\n\nConfigure as minimum 10 GB Boot Disk Image and select SSD persistent disk as Boot Disk Type.\n\nFirewall\n\nAllow HTTP and HTTPS Traffic.\n\nNetworking\nAdd cloudpanel in Network tags.\nClick on External IPv4 address and then on RESERVE STATIC EXTERNAL IP ADDRESS.\n\nEnter a Name for the Static IP Address and click on Reserve.\n\nSecurity\n\nClick on the button Add Item and enter your Public SSH Key.\n\nCreate\n\nClick on the button Create to launch the VM Instance.\n\nFirewall Rules\n\nTo access CloudPanel later, we need to create a Firewall Rule.\n\nClick on CREATE FIREWALL RULE and create the following rule:\n\nName: allow-cloudpanel-all\nTargets: Specified target tags\nTarget tags: cloudpanel\nSource filter: IP ranges\nSource IP ranges: 0.0.0.0/0\nProtocols and ports: Allow all\n\n\nSECURITY\n\nThis firewall rule opens ALL ports. CloudPanel has an integrated Firewall which takes care of the ports.\n\nIf you want to use the Firewall Rules from Google, you need to open the TCP ports: 22, 80, 443, and 8443 (CloudPanel).\nAlso, open port 443 for UDP to allow HTTP3 connections.\nDon't forget to remove all rules in the admin area of CloudPanel to disable the UFW Firewall.\n\nInstall CloudPanel\n\nAfter launching the Instance, log in with SSH and run the installer script.\n\nUbuntu 24.04 LTS\nUbuntu 22.04 LTS\nDebian 12 LTS\nDebian 11 LTS\nLogin via SSH to the Instance.\n\n\nThe UserName is either the UserName you specified when you created the SSH key or the one defined in your Google Profile.\n\nCheck the following site https://cloud.google.com/compute/docs/connect/ssh-using-third-party-tools for a step-by-step guide.\n\nssh -i path_to_your_private_key username@yourIpAddress\n\nSwitch to the root user:\nsudo su root\n\nUpdate the system and install the required packages.\napt update && apt -y upgrade && apt -y install curl wget sudo\n\nRun the installer with your preferred Database Engine.\nMySQL 8.0\nMariaDB 10.11\ncurl -sS https://installer.cloudpanel.io/ce/v2/install.sh -o install.sh; \\\necho \"2aefee646f988877a31198e0d84ed30e2ef7a454857b606608a1f0b8eb6ec6b6 install.sh\" | \\\nsha256sum -c && sudo CLOUD=gce bash install.sh\n\nAccess CloudPanel\nSECURITY\n\nFor security reasons, access CloudPanel as fast as possible to create the admin user. There is a small time window where bots can create the user. If possible, open port 8443 only for your IP via firewall.\n\nYou can now access CloudPanel via Browser: https://yourIpAddress:8443\n\nIgnore the self-signed certificate warning and click on Advanced and Proceed to continue to CloudPanel.\n\nEdit this page\nPrevious\n« Wizard\nNext\nInstaller »\nLaunching an Instance\nName and Region\nMachine Configuration\nBoot Disk\nFirewall\nNetworking\nSecurity\nCreate\nFirewall Rules\nInstall CloudPanel\nAccess CloudPanel\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Microsoft Azure Installer | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/getting-started/microsoft-azure/installation/installer/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nMicrosoft Azure Installer\n\nOn this page, we explain step by step how to install CloudPanel on Microsoft Azure.\n\nLaunching a Virtual Machine\n\nLog in to the Microsoft Azure Portal.\n\nGo to Virtual Machines and click on Azure virtual machine.\n\nInstance details\n\nEnter the name of your Virtual Machine, select a Region, select Ubuntu 24.04 or 22.04 or the Debian 12 or 11 image\nand choose the size of your instance.\n\nAdministrator account\n\nAs Authentication type select SSH Public Key (recommended) or Password.\n\n\nOn the following site, you can learn how to create an SSH Public Key:\nhttps://docs.microsoft.com/en-us/azure/virtual-machines/linux/mac-create-ssh-keys\n\nEnter the Username and your SSH Public Key.\n\nInbound port rules\n\nSelect which virtual machine network ports are accessible from the public internet.\nYou can specify more limited or granular network access on the Networking tab.\n\nSelect the inbound ports: HTTP, HTTPS and SSH and click on the button Next: Disks >\n\nDisks\n\nSelect Premium SSD as OS disk type and continue to Review + create.\n\nReview + create\n\nClick on the button Create to launch your virtual machine.\n\nFirewall\n\nTo access the CloudPanel after the installation, we need to create a firewall rule.\n\nClick in the left navigation on Networking --> Network settings and click on the button Create port rule.\nCreate a firewall rule to allow all TCP traffic.\nSECURITY\n\nThis firewall rule opens ALL ports. CloudPanel has an integrated Firewall which takes care of the ports.\n\nIf you want to use the Firewall Rules from Azure, you need to open the TCP ports: 22, 80, 443, and 8443 (CloudPanel).\nAlso, open port 443 for UDP to allow HTTP3 connections.\nDon't forget to remove all rules in the admin area of CloudPanel to disable the UFW Firewall.\n\nSource: Any\nSource port ranges: *\nDestination: Any\nService: Custom\nDestination port ranges: 0-65535\nProtocol: Any\nActon: Allow\nPriority: 100\nName: Allow_All\n\n\nInstall CloudPanel\n\nAfter launching the Instance, log in with SSH and run the installer script.\n\nUbuntu 24.04 LTS\nUbuntu 22.04 LTS\nDebian 12 LTS\nDebian 11 LTS\nLogin via SSH to the Instance.\n\nssh -i path_to_your_private_key azure@yourIpAddress\n\nSwitch to the root user:\nsudo su root\n\nUpdate the system and install the required packages.\napt update && apt -y upgrade && apt -y install curl wget sudo\n\nRun the installer with your preferred Database Engine.\nMySQL 8.0\nMariaDB 10.11\ncurl -sS https://installer.cloudpanel.io/ce/v2/install.sh -o install.sh; \\\necho \"2aefee646f988877a31198e0d84ed30e2ef7a454857b606608a1f0b8eb6ec6b6 install.sh\" | \\\nsha256sum -c && sudo CLOUD=msa bash install.sh\n\nAccess CloudPanel\nSECURITY\n\nFor security reasons, access CloudPanel as fast as possible to create the admin user. There is a small time window where bots can create the user. If possible, open port 8443 only for your IP via firewall.\n\nYou can now access CloudPanel via Browser: https://yourIpAddress:8443\n\nIgnore the self-signed certificate warning and click on Advanced and Proceed to continue to CloudPanel.\n\nEdit this page\nPrevious\n« Installer\nNext\nInstaller »\nLaunching a Virtual Machine\nInstance details\nAdministrator account\nInbound port rules\nDisks\nReview + create\nFirewall\nInstall CloudPanel\nAccess CloudPanel\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Hostinger Wizard | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/getting-started/hostinger/installation/wizard/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nHostinger Wizard\n\nOn this page, we explain step by step how to run CloudPanel on Hostinger.\n\nChoose a VPS Hosting Plan\n\nLog in to the Hostinger Control Panel.\n\nGo to VPS in the top menu and choose a plan.\n\nSelect VPS Location\n\nSelect the location for your new VPS from the dropdown list.\n\nChoose Operating System\n\nClick on OS with Control Panel and select CloudPanel from the list.\n\nSetup Admin User Password\n\nEnter a strong password for the admin user to login later into CloudPanel and click on Continue.\n\nSSH Access Method\n\nFor accessing the VPS via SSH wit the root user, enter a password or add an SSH Key and click on Save & Continue.\n\nReview VPS Information\n\nReview the VPS information once again and click on Finish Setup. The VPS will be launched and is ready within 3-5 minutes.\n\nAccess CloudPanel\n\nGo to the VPS Dashboard and click on Panel access to get the Login Url.\n\nEdit this page\nPrevious\n« Installer\nNext\nInstaller »\nChoose a VPS Hosting Plan\nSelect VPS Location\nChoose Operating System\nSetup Admin User Password\nSSH Access Method\nReview VPS Information\nAccess CloudPanel\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Hetzner Installer | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/getting-started/hetzner-cloud/installation/installer/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nHetzner Installer\n\nOn this page, we explain step by step how to install CloudPanel on Hetzner Cloud.\n\nCreate a Server\n\nLogin to your Hetzner Cloud Console account.\n\n\nGo to a project and click on the button ADD SERVER.\n\nServer Location\n\nChoose the Server Location where you want to run your Server.\n\nOS Image\n\nSelect Ubuntu 24.04 or 22.04 or Debian 12 or 11 as OS Image.\n\nServer Type\nHIGH PERFORMANCE\n\nIn our benchmarks, the CPX (AMD EPYC 2nd Gen processors) servers were the fastest for web applications.\n\nSelect the Server Type you want to deploy. We recommend at least 1 vCPU with 2 GB of Memory.\n\nLaunch Server\n\nSelect an SSH Key, which will be used for SSH authentication.\n\nEnter the Server Name and click on the button CREATE & BUY NOW to launch the server.\n\nInstall CloudPanel\n\nAfter launching the Server, log in with SSH and run the installer script.\n\nUbuntu 24.04 LTS\nUbuntu 22.04 LTS\nDebian 12 LTS\nDebian 11 LTS\nLogin via SSH to the Server.\nssh -i path_to_your_private_key root@serverIpAddress\n\nUpdate the system and install the required packages.\napt update && apt -y upgrade && apt -y install curl wget sudo\n\nRun the installer with your preferred Database Engine.\nMySQL 8.0\nMariaDB 10.11\ncurl -sS https://installer.cloudpanel.io/ce/v2/install.sh -o install.sh; \\\necho \"2aefee646f988877a31198e0d84ed30e2ef7a454857b606608a1f0b8eb6ec6b6 install.sh\" | \\\nsha256sum -c && sudo CLOUD=hetzner bash install.sh\n\nAccess CloudPanel\nSECURITY\n\nFor security reasons, access CloudPanel as fast as possible to create the admin user. There is a small time window where bots can create the user. It's highly recommended to open port 8443 only for your IP via firewall.\n\nYou can now access CloudPanel via Browser: https://serverIpAddress:8443\n\nIgnore the self-signed certificate warning and click on Advanced and Proceed to continue to CloudPanel.\n\nEdit this page\nPrevious\n« Installer\nNext\nWizard »\nCreate a Server\nServer Location\nOS Image\nServer Type\nLaunch Server\nInstall CloudPanel\nAccess CloudPanel\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Digital Ocean Installer | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/getting-started/digital-ocean/installation/installer/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nDigital Ocean Installer\n\nOn this page, we explain step by step how to install CloudPanel on Digital Ocean.\n\nLaunching a Droplet\n\nLogin to your Digital Ocean account.\n\nIn the left navigation, click on Droplets and then on Create Droplet.\n\nChoose Region\n\nChoose the Region where you want to run your Droplet.\n\nChoose an image\n\nSelect Ubuntu 24.04 or 22.04 or Debian 12 or 11 as OS Image.\n\nDroplet Size\n\nChoose the size of your Droplet, e.g., Premium AMD with NVMe SSD.\n\nAuthentication Method\n\nSelect your Authentication Method, SSH keys or Password.\nHow to create an SSH Key, is explained on the site: How-to Add SSH Keys to New or Existing Droplets\n\nFinalize and Create\n\nEnter a Hostname, and click on the button Create Droplet to launch your Droplet.\n\nAssigning a Reserved IP\n\nA Reserved IP (static ip) is highly recommended to have the same IP after changing the size of your Droplet.\n\nTo create a Reserved IP, do the following steps:\n\nIn the left navigation, click on Networking.\n\nSelect your Droplet and click on the button Assign Reserved IP.\n\nInstall CloudPanel\n\nAfter launching the Droplet, log in with SSH and run the installer script.\n\nUbuntu 24.04 LTS\nUbuntu 22.04 LTS\nDebian 12 LTS\nDebian 11 LTS\nLogin via SSH to the Droplet.\nssh -i path_to_your_private_key root@yourIpAddress\n\nUpdate the system and install the required packages.\napt update && apt -y upgrade && apt -y install curl wget sudo\n\nRun the installer with your preferred Database Engine.\nMySQL 8.0\nMariaDB 10.11\ncurl -sS https://installer.cloudpanel.io/ce/v2/install.sh -o install.sh; \\\necho \"2aefee646f988877a31198e0d84ed30e2ef7a454857b606608a1f0b8eb6ec6b6 install.sh\" | \\\nsha256sum -c && sudo CLOUD=do bash install.sh\n\nAccess CloudPanel\nSECURITY\n\nFor security reasons, access CloudPanel as fast as possible to create the admin user. There is a small time window where bots can create the user. It's highly recommended to open port 8443 only for your IP via firewall.\n\nYou can now access CloudPanel via Browser: https://yourIpAddress:8443\n\nIgnore the self-signed certificate warning and click on Advanced and Proceed to continue to CloudPanel.\n\nEdit this page\nPrevious\n« Marketplace\nNext\nInstaller »\nLaunching a Droplet\nChoose Region\nChoose an image\nDroplet Size\nAuthentication Method\nFinalize and Create\nAssigning a Reserved IP\nInstall CloudPanel\nAccess CloudPanel\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Digital Ocean Marketplace | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/getting-started/digital-ocean/installation/marketplace/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nDigital Ocean Marketplace\n\nOn this page, we explain step by step how to run CloudPanel on Digital Ocean.\n\nLaunching a Droplet\n\nLogin to your Digital Ocean account.\n\nClick on the button Create CloudPanel Droplet.\n\nUbuntu 24.04 LTS\nUbuntu 22.04 LTS\n\nDroplet Size\n\nChoose the size of your Droplet, e.g., Premium AMD with NVMe SSD.\n\nDatacenter Region\n\nChoose the Datacenter Region where you want to run your Droplet.\n\nAuthentication Method\n\nSelect your Authentication Method, SSH keys or Password.\nHow to create an SSH Key, is explained on the site: How-to Add SSH Keys to New or Existing Droplets\n\nFinalize and Create\n\nEnter a hostname, and click on the button Create Droplet to launch your Droplet.\n\nAssigning a Reserved IP\n\nA Reserved IP (static ip) is highly recommended to have the same IP after changing the size of your Droplet.\n\nTo create a Reserved IP, do the following steps:\n\nIn the left navigation, click on Networking.\n\nSelect your Droplet and click on the button Assign Reserved IP.\n\nAccess CloudPanel\nSECURITY\n\nFor security reasons, access CloudPanel as fast as possible to create the admin user. There is a small time window where bots can create the user. It's highly recommended to open port 8443 only for your IP via firewall.\n\nYou can now access CloudPanel via Browser: https://yourIpAddress:8443\n\nIgnore the self-signed certificate warning and click on Advanced and Proceed to continue to CloudPanel.\n\nEdit this page\nPrevious\n« Installer\nNext\nInstaller »\nLaunching a Droplet\nDroplet Size\nDatacenter Region\nAuthentication Method\nFinalize and Create\nAssigning a Reserved IP\nAccess CloudPanel\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Amazon Web Services Installer | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/getting-started/amazon-web-services/installation/installer/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nAmazon Web Services Installer\n\nOn this page, we explain step by step how to install CloudPanel on an EC2 instance on Amazon Web Services.\n\nLaunching an EC2 Instance\n\nLog in to the AWS Management Console.\n\nGo to the EC2 Service, and click on Launch Instances.\n\nName and tags\n\nEnter the name of your EC2 Instance, e.g., my-cloudpanel-instance.\n\nChoose Operating System\nSelect Ubuntu 24.04 or 22.04 or Debian 12 or 11 as OS Image.\nBoth Architectures x86 and ARM are supported by CloudPanel.\nInstance Type\n\nChoose an instance type and ensure that it fits the minimum requirements.\n\nKey pair (login)\n\nSelect a Key pair or Create a new key pair to log in via SSH after launching the instance.\n\nNetwork settings\nClick on Edit to make changes on the Network Settings.\nSelect the VPC, Subnet, and enter a Security Group Name and Description.\nInbound security groups rules\nCLOUDPANEL FIREWALL\n\nAll pre-configured CloudPanel Firewall Rules are not needed and should be removed.\nIf you want to use the CloudPanel integrated firewall for whitelisting ports, create a security group with one rule which allows All TCP. In that case, all traffic is filtered by the CloudPanel Firewall and not by AWS.\n\nCreate a Security Group with the following rules:\n\nSSH (22) - For your IP only\nHTTP (80) - For everyone\nHTTPS (443) - For everyone\nUDP (443) - For everyone (Required for HTTP3)\nCloudPanel (8443) - For your IP only\nConfigure Storage\n\nConfigure as minimum 10 GB disk size and select gp3 (Latest SSD generation).\n\nLaunch Instance\n\nClick on the button Launch Instance to launch the instance.\n\nCreate Elastic IP Address\n\nA static IP (Elastic IP Address) is needed for running web applications.\n\n\nTo create an Elastic IP Address click in the left navigation on Network & Security --> Elastic IPs.\n\nClick on button Allocate Elastic IP address to create an Elastic IP Address.\n\nSelect the Allocated IP Address and Associate it to your launched instance.\n\nInstall CloudPanel\n\nAfter launching the EC2 Instance, log in with SSH and run the installer script.\n\nUbuntu 24.04 LTS\nUbuntu 22.04 LTS\nDebian 12 LTS\nDebian 11 LTS\nLogin via SSH to the EC2 Instance.\nssh -i path_to_your_private_key.pem ubuntu@yourElasticIpAddress\n\nSwitch to the root user:\nsudo su root\n\nUpdate the system and install the required packages.\napt update && apt -y upgrade && apt -y install curl wget sudo\n\nRun the installer with your preferred Database Engine.\nMySQL 8.0\nMariaDB 10.11\ncurl -sS https://installer.cloudpanel.io/ce/v2/install.sh -o install.sh; \\\necho \"2aefee646f988877a31198e0d84ed30e2ef7a454857b606608a1f0b8eb6ec6b6 install.sh\" | \\\nsha256sum -c && sudo CLOUD=aws bash install.sh\n\nAccess CloudPanel\nSECURITY\n\nFor security reasons, access CloudPanel as fast as possible to create the admin user. There is a small time window where bots can create the user. It's highly recommended to open port 8443 only for your IP via security group.\n\nYou can now access CloudPanel via Browser: https://yourElasticIpAddress:8443\n\nIgnore the self-signed certificate warning and click on Advanced and Proceed to continue to CloudPanel.\n\nEdit this page\nPrevious\n« AMI\nNext\nMarketplace »\nLaunching an EC2 Instance\nName and tags\nChoose Operating System\nInstance Type\nKey pair (login)\nNetwork settings\nConfigure Storage\nLaunch Instance\nCreate Elastic IP Address\nInstall CloudPanel\nAccess CloudPanel\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Amazon Web Services AMI | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/getting-started/amazon-web-services/installation/ami/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nAmazon Web Services AMI\n\nOn this page, we explain step by step how to run CloudPanel on an EC2 instance on Amazon Web Services.\n\nMYSQL 8.0\n\nThe provided AMIS have MySQL 8.0 installed. If you need MariaDB, you need to use the Installer.\n\nLaunching an EC2 Instance\nChoose AMI\n\nLog in to the AWS Management Console.\n\nSelect an Operating System and click on Launch to start a CloudPanel instance.\n\nUbuntu 24.04 LTS\nDebian 12 LTS\nAWS Region\tX86_64\tARM64 (Graviton)\nUS East (N.Virginia)\tLaunch\tLaunch\nUS East (Ohio)\tLaunch\tLaunch\nUS West (N. California)\tLaunch\tLaunch\nUS West (Oregon)\tLaunch\tLaunch\nAfrica (Cape Town)\tLaunch\tLaunch\nAsia Pacific (Hong Kong)\tLaunch\tLaunch\nAsia Pacific (Mumbai)\tLaunch\tLaunch\nAsia Pacific (Seoul)\tLaunch\tLaunch\nAsia Pacific (Singapore)\tLaunch\tLaunch\nAsia Pacific (Sydney)\tLaunch\tLaunch\nAsia Pacific (Tokyo)\tLaunch\tLaunch\nCanada (Central)\tLaunch\tLaunch\nEurope (Frankfurt)\tLaunch\tLaunch\nEurope (Ireland)\tLaunch\tLaunch\nEurope (London)\tLaunch\tLaunch\nEurope (Milan)\tLaunch\tLaunch\nEurope (Paris)\tLaunch\tLaunch\nEurope (Spain)\tLaunch\tLaunch\nEurope (Stockholm)\tLaunch\tLaunch\nEurope (Zurich)\tLaunch\tLaunch\nMiddle East (Bahrain)\tLaunch\tLaunch\nMiddle East (UAE)\tLaunch\tLaunch\nSouth America (Sáo Paulo)\tLaunch\tLaunch\nName and tags\n\nEnter the name of your EC2 Instance, e.g., my-cloudpanel-instance.\n\nInstance Type\n\nChoose an instance type and ensure that it fits the minimum requirements.\n\nKey pair (login)\n\nSelect a Key pair or Create a new key pair to log in via SSH after launching the instance.\n\nNetwork settings\nClick on Edit to make changes on the Network Settings.\nSelect the VPC, Subnet, and enter a Security Group Name and Description.\nInbound security groups rules\nCLOUDPANEL FIREWALL\n\nAll pre-configured CloudPanel Firewall Rules are not needed and should be removed.\nIf you want to use the CloudPanel integrated firewall for whitelisting ports, create a security group with one rule which allows All TCP. In that case, all traffic is filtered by the CloudPanel Firewall and not by AWS.\n\nCreate a Security Group with the following rules:\n\nSSH (22) - For your IP only\nHTTP (80) - For everyone\nHTTPS (443) - For everyone\nUDP (443) - For everyone (Required for HTTP3)\nCloudPanel (8443) - For your IP only\nConfigure Storage\n\nBy default, the root partition has 10 GB and the home partition 25 GB.\nIf you need more disk space, increase the home partition, e.g. to 50 GB.\n\nLaunch Instance\n\nClick on the button Launch Instance to launch the instance.\n\nCreate Elastic IP Address\n\nA static IP (Elastic IP Address) is needed for running web applications.\n\n\nTo create an Elastic IP Address click in the left navigation on Network & Security --> Elastic IPs.\n\nClick on button Allocate Elastic IP address to create an Elastic IP Address.\n\nSelect the Allocated IP Address and Associate it to your launched instance.\n\nAccess CloudPanel\n\nYou can now access CloudPanel via Browser: https://yourElasticIpAddress:8443\n\nIgnore the self-signed certificate warning and click on Advanced and Proceed to continue to CloudPanel.\n\nSSH Access\n\nWith your previously created private key, you can connect to the instance via SSH.\n\n\nMake sure that the private key has read-only (chmod 400) permissions.\n\nUbuntu\nDebian\nssh -i path_to_your_private_key.pem ubuntu@yourElasticIpAddress\n\n\nWith the following command, you can become root.\n\nsudo su root\n\nEdit this page\nPrevious\n« Getting Started\nNext\nInstaller »\nLaunching an EC2 Instance\nChoose AMI\nName and tags\nInstance Type\nKey pair (login)\nNetwork settings\nConfigure Storage\nLaunch Instance\nCreate Elastic IP Address\nAccess CloudPanel\nSSH Access\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Getting Started | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/getting-started/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nGetting Started\n\nChoose a favorite cloud platform or dedicated server and run CloudPanel in a few clicks.\n\nInstallation on Amazon Web Services\nInstallation on Digital Ocean\nInstallation on Hetzner Cloud\nInstallation on Hostinger\nInstallation on Google Compute Engine\nInstallation on Microsoft Azure\nInstallation on Oracle Cloud\nInstallation on Vultr\nInstallation on Other\nEdit this page\nPrevious\n« Support\nNext\nAMI »\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Support | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/support/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nSupport\nJoin us on Discord\n\nOur Discord Server serves as our virtual Headquater, where the community helps each other.\n\nLearn, share and discuss with other community members your questions.\n\n\n\nSupport CloudPanel\nWrite a Google Review\nStar the project on github\nWrite about CloudPanel on platforms like Twitter, Facebook or LinkedIn\nFollow us on Twitter and retweet our tweets\nWrite a Blog post about CloudPanel\nMake a Youtube Video\nReport Bugs on Github\nHelp us with the translation\nEdit this page\nPrevious\n« Update\nNext\nGetting Started »\nJoin us on Discord\nSupport CloudPanel\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Update | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/update/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nUpdate\n\nCloudPanel is being shipped as Debian Paket (deb), which allows us to update CloudPanel and all dependencies conveniently.\n\nBACKUP YOUR INSTANCE\n\nMake sure to create an image/snapshot of your instance before you update, just in case something isn't working as expected.\n\nTo update CloudPanel to the latest version, do the following:\n\nLogin via SSH as root user.\n\nRun the update script:\n\nclp-update\n\nTest Releases\n\nTest releases give you early access to newest features.\nNote that some of the features may be experimental, and some may not ever reach the stable release.\n\nTo switch to the test release channel, do the following:\n\nLogin via SSH as root user.\n\nSet the release channel to test:\n\nclpctl cloudpanel:set:release-channel --channel='test'\n\nRun the update script:\nclp-update\n\nEdit this page\nPrevious\n« Changelog\nNext\nSupport »\nTest Releases\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Changelog | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/changelog/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nChangelog\nv2.4.2 - [2024-05-21]\n\nNew\n\nDebian 12 and Ubuntu 24.04 with HTTP/3 Support\nNode.js 22 LTS Support\nTranslations: Serbian, Georgian\n\nBug Fixes\n\n#427 Cannot rename files in file manager\n#430 Comma in cron jobs minute\n#434 I think this should be a bug.\nTranslation Fixes\nv2.4.1 - [2024-01-22]\n\nNew\n\nTranslations: Bosnian\n\nEnhancements:\n\nThe issuance of Let's Encrypt certificates is being tested against the staging environment first to avoid rate limit errors\nThe performance of creating sites, especially Node.js sites, has been enhanced\n\nBug Fixes\n\n#382 phpMyAdmin sorting not working\n#383 Instance Reboot at Admin/Instance/Setting doesn't reboot and block auto login from login pages\n#406 CloudPanel Dashboard doesn't when using the AWS EC2 installer.\nTranslation Fixes\n\nSecurity\n\nVulnerability that allows a user with the lowest privilege to conduct a session hijacking, subsequently gaining unauthorized access to the admin and other user accounts. (Muhammad Aizat, datack.my)\nv2.4.0 - [2023-11-27]\n\nNew\n\nPHP 8.3 Support\nNode.js 20 LTS Support\nTranslations: Danish, Czech\n\nEnhancements:\n\nThe databases are backed up prior to executing remote backup\nThe site settings and vhost are being included in the remote backup file\nUpdated phpMyAdmin to 5.2.1\n\nBug Fixes\n\n#329 duplicate settings key in file-manager.conf\n#338 The original certificate is not removed when you delete a web application\n#355 Login Page Autocomplete/Password Manager Issue\n#359 When you delete a website the nodejs app started with PM2 is not deleted\n#363 Custom v2-varnish vhost templates cause a 403 page and missing Varnish settings\n#367 phpMyAdmin basic auth doesn't work when CloudPanel basic auth is enabled\n\nSecurity\n\nFile Manager: New file chown issue (CVE-2023-43880)\nFile Manager: Zip symlink (BSDTAR) (CVE-2023-43881)\nOS Command Injection from chmod file (CVE-2023-46157, Muhammad Aizat, datack.my)\nCommand Injection (Yell Phone Naing)\nv2.3.1 - [2023-06-20]\n\nBug Fixes\n\n#287 Colon in remote cloud backup breaks most filesystems\n#290 File Manager Extract not working since v2.3.0\n#293 Strange \\n\\n inside the certificate file used for custom domain.\nTranslation Fixes\n\nSecurity\n\nCritical (CVE-2023-35885): Insecure file manager cookie authentication (Muhammad Aizat, datack.my)\nCritical (CVE-2023-36630): Insecure File Upload leads to Privilege Escalation and Authentication Bypass (Mohammad Zulfiqar)\nv2.3.2 - [2023-08-21]\n\nNew\n\nTranslation: Koran, Persian\n\nBug Fixes\n\nTranslation Fixes\n\nEnhancements:\n\nVietnamese, Chinese Translation\nRTL stylesheet improvements\n\nSecurity\n\n#298 MySQL Root Password Leak from site user (Thanks to Yell Phone Naing)\nCritical: Privilege Escalation to root from user (Thanks to Yell Phone Naing)\nv2.3.1 - [2023-06-20]\n\nBug Fixes\n\n#287 Colon in remote cloud backup breaks most filesystems\n#290 File Manager Extract not working since v2.3.0\n#293 Strange \\n\\n inside the certificate file used for custom domain.\nTranslation Fixes\n\nSecurity\n\nCritical (CVE-2023-35885): Insecure file manager cookie authentication (Muhammad Aizat, datack.my)\nCritical (CVE-2023-36630): Insecure File Upload leads to Privilege Escalation and Authentication Bypass (Mohammad Zulfiqar)\nv2.3.0 - [2023-06-06]\n\nNew\n\nTranslation: Bulgarian\nNew CloudPanel CLI Root Commands:\nUser:\nuser:add\nuser:delete\nuser:list\nSite:\nsite:install:certificate\n\nEnhancements\n\nThe site user name and password can be entered manually for new WordPress sites.\n\nBug Fixes\n\n#278 CLI need normalize domain name field\n#284 CLPCTL - Problem with special characters in password result false error\nTranslation Fixes\n\nSecurity\n\nCritical (CVE-2023-33747): Privilege Escalation to root from user. Big thanks to Muhammad (datack.my, host.sabily.info) for reporting and testing\nOS Command Injection. Big thanks to Laurence from crowdsec.net for reporting and testing\nv2.2.2 - [2023-04-03]\n\nNew\n\nMariaDB 10.11 LTS Support\nHebrew\nJapanese\n\nBug Fixes\n\n#245 New Reverse Proxy | root folder permission in htdocs www.site.com folders\n#254 Site path / copy and paste issues\nTranslation Fixes\nv2.2.1 - [2023-02-27]\n\nNew\n\nReverse Proxy\nChinese (Simplified)\nChinese (Taiwan)\n\nBug Fixes\n\n#210 Dark mode: Separating table borders missing\n#220 Hetzner Snapshot cleanup throws an exception when delete protection is enabled on a snapshot\nTranslation Fixes\nv2.2.0 - [2022-12-08]\n\nNew\n\nAdd PHP 8.2 Support\nDark Mode\nNode.js 18 LTS Support\n\nImprovements\n\nFile Manager order Directories before Files\n\nBug Fixes\n\n#208 Unable to create a WordPress site with a database server that doesn't use the default port 3306\nTranslation Fixes\nv2.1.0 - [2022-11-03]\n\nNew\n\nVarnish Cache Support\n\nImprovements\n\nGenerate Password Link for Site User Password Update\n\nBug Fixes\n\n#138 WordPress Admin login doesn't work with passwords which contains special characters like\n#150 Cron Job PHP version issue\n#153 Backup Custom Rclone Config Time\nTranslation Fixes\nv2.0.4 - [2022-09-08]\n\nNew\n\nAdded Languages: Arabic, Ukrainian\n\nBug Fixes\n\n#137 Remote backups don't get deleted after configured retention period, it affects only the SFTP storage provider\nTranslation Fixes\nMariaDB 10.9 Support\nv2.0.3 - [2022-08-24]\n\nNew\n\nRemote Backup (Amazon S3, Wasabi, Digital Ocean Spaces, Dropbox, Google Drive, SFTP and Custom Rclone Config)\nAdded Languages: Italian, Indonesian, Spanish, Romanian, Russian, Polish, Vietnamese\n\nBug Fixes\n\n#115 Using \" in the additional directives configuration breaks CloudPanel\n#122 Numeral in Domain Name Can't Install Wordpress\n#132 413 Request Entity Too Large, File Manager file upload over 512MB with custom domain\nv2.0.2 - [2022-07-04]\n\nBug Fixes\n\nRemove FS_CHMOD_FILE and FS_CHMOD_DIR from default WP settings\nv2.0.1 - [2022-07-04]\n\nNew\n\nAdded Portuguese (Brasil) translation\nAdded Turkish translation\nMariaDB 10.8 support for Ubuntu and Debian\nAdded Default WP settings:\nWP_MEMORY_LIMIT: 256M\nWP_MAX_MEMORY_LIMIT: 512M\nFS_CHMOD_FILE: 0644\nFS_CHMOD_DIR: 0755\n\nBug Fixes\n\nSite User Name generation didn't work with a two-level subdomain like wp.blog.eu.org\nTranslations fixes\nv2.0.0 - [2022-06-20]\nInitial Release\nEdit this page\nPrevious\n« Technology Stack\nNext\nUpdate »\nv2.4.2 - 2024-05-21\nv2.4.1 - 2024-01-22\nv2.4.0 - 2023-11-27\nv2.3.1 - 2023-06-20\nv2.3.2 - 2023-08-21\nv2.3.1 - 2023-06-20\nv2.3.0 - 2023-06-06\nv2.2.2 - 2023-04-03\nv2.2.1 - 2023-02-27\nv2.2.0 - 2022-12-08\nv2.1.0 - 2022-11-03\nv2.0.4 - 2022-09-08\nv2.0.3 - 2022-08-24\nv2.0.2 - 2022-07-04\nv2.0.1 - 2022-07-04\nv2.0.0 - 2022-06-20\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Technology Stack | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/technology-stack/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nTechnology Stack\nNO LINUX CONTAINER SUPPORT\n\nCloudPanel supports only virtual machines, no support for Linux containers like lxc, lxd, openvz or others.\n\nNext generation Technology Stack for maximum performance and security to run PHP, Node.js, Static Websites, Reverse Proxies and Python Applications.\n\nUbuntu 24.04 LTS\nDebian 12 LTS\nService\tVersion(s)\t\nNGINX\t1.26\tHTTP3 with PageSpeed Module\nMySQL\t8.0\t\nMariaDB\t10.11\t\nPHP\t7.1-8.3\t\nRedis\t7\t\nProFTPD\t1.3\t\nNode.js\t12, 14, 16, 18, 20, 22\tLTS Versions\nPython\t3.12\t\nVarnish Cache\t7.5\t\nUbuntu 22.04 LTS\nDebian 11 LTS\nService\tVersion(s)\t\nNGINX\t1.21\twith PageSpeed Module\nMySQL\t8.0\t\nMariaDB\t10.6, 10.11\t\nPHP\t7.1-8.3\t\nRedis\t6\t\nProFTPD\t1.3\t\nNode.js\t12, 14, 16, 18, 20, 22\tLTS Versions\nPython\t3.10\t\nVarnish Cache\t7.1\t\nEdit this page\nPrevious\n« Requirements\nNext\nChangelog »\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Requirements | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/requirements/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nRequirements\nOperating Systems\nUbuntu 24.04 (Noble Numbat)\nUbuntu 22.04 (Jammy Jellyfish)\nDebian 12 (Bookworm)\nDebian 11 (Bullseye)\nArchitectures\nX86\nARM64\nCores\n>= 1 Core\nMemory\n>= 2 GB of RAM\nDisk\n>= 10 GB\nEdit this page\nPrevious\n« Introduction\nNext\nTechnology Stack »\nOperating Systems\nArchitectures\nCores\nMemory\nDisk\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Introduction | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/introduction/#",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nIntroduction\nWhat is CloudPanel?\n\nCloudPanel is a free and modern server control panel to configure and manage a server with an obsessive focus on simplicity.\n\nRun PHP, Node.js, Static Websites, Reverse Proxies, and Python Applications in no time on a High-Performance Technology Stack.\n\nQuick launch support for:\n\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nHostinger\nGoogle Compute Engine\nMicrosoft Azure\nOracle Cloud\nVultr\nOther\nBenefits\nFree\nEasy to use\nCommunity Driven\nBlazing Fast Page Loads - Up to 250x faster\nSecure (free SSL/TLS certificates)\nCloudflare integration\nHigh Performance\nReady to go within 1 minute\nSupports all major clouds\nSupport for X86 and ARM\nEdit this page\nNext\nRequirements »\nWhat is CloudPanel?\nBenefits\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  },
  {
    "title": "Introduction | CloudPanel | Documentation",
    "url": "https://www.cloudpanel.io/docs/v2/introduction/",
    "html": "Skip to main content\nCloudPanel\nIntroduction\nRequirements\nTechnology Stack\nChangelog\nLive Demo\nUpdate\nSupport\nGetting Started\nGetting Started\nInstallation\nAmazon Web Services\nAMI\nInstaller\nDigital Ocean\nMarketplace\nInstaller\nHetzner Cloud\nInstaller\nHostinger\nWizard\nGoogle Compute Engine\nInstaller\nMicrosoft Azure\nInstaller\nOracle Cloud\nInstaller\nVultr\nMarketplace\nInstaller\nOther\nFrontend Area\nAdd Site\nAccount\nSettings\nVhost\nDatabases\nVarnish Cache\nIntroduction\nSettings\nDeveloper Guide\nVhost\nPHP Controller\nService\nWordPress\nPlugin\nE-Mail\nSSL/TLS\nSecurity\nSSH/FTP\nFile Manager\nCron Jobs\nLogs\nAdmin Area\nUsers\nEvents\nInstance\nBackups\nSecurity\nSettings\nCloud Features\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nGoogle Compute Engine\nVultr\nCloudPanel CLI\nRoot User Commands\nSite User Commands\nNode.js\nDeployment\nWith pm2\nDPLOY\nApplications\nGhost\nStrapi 4\nPHP\nApplications\nCakePHP\nCodeIgniter\nDrupal\nFuelPHP\nJoomla\nLaminas\nLaravel\nMagento\nMatomo\nMautic\nMoodle\nNeos\nNextcloud\nownCloud\nPrestaShop\nShopware\nSlim\nSymfony\nTYPO3\nWooCommerce\nWordPress\nYii\nOther\nDeployment\nDPLOY\nGuides\nBuilding a PHP Extension\nionCube Loader\nNode.js\nPython\nDeployment\nWith uwsgi\nDPLOY\nGuides\nAdding a Python Version\nDPLOY\nIntroduction\nInstallation\nChangelog\nIssues\nGuides\nApplications\nMailcow\nBest Practices\nMigration\nPHP Site\nSecurity\nPerformance\nServer Benchmarks\nTools\nWordPress\nCLP E-Mail Sender From\nIntroduction\nWhat is CloudPanel?\n\nCloudPanel is a free and modern server control panel to configure and manage a server with an obsessive focus on simplicity.\n\nRun PHP, Node.js, Static Websites, Reverse Proxies, and Python Applications in no time on a High-Performance Technology Stack.\n\nQuick launch support for:\n\nAmazon Web Services\nDigital Ocean\nHetzner Cloud\nHostinger\nGoogle Compute Engine\nMicrosoft Azure\nOracle Cloud\nVultr\nOther\nBenefits\nFree\nEasy to use\nCommunity Driven\nBlazing Fast Page Loads - Up to 250x faster\nSecure (free SSL/TLS certificates)\nCloudflare integration\nHigh Performance\nReady to go within 1 minute\nSupports all major clouds\nSupport for X86 and ARM\nEdit this page\nNext\nRequirements »\nWhat is CloudPanel?\nBenefits\nProduct\nFeatures\nTechnology Stack\nSupported Applications\nSupported Clouds\nSupport\nDocumentation\nDiscord\nBlog\nTutorials\nConnect\nDiscord\nGithub\nLinkedin\nTwitter\nCompany\nAbout Us\nContact Us\nFeedback\nLegal\nImprint\nLicense Terms\nPrivacy Policy\nGDPR\nCopyright © 2024 cloudpanel.io"
  }
]