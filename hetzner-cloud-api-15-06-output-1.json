[
  {
    "title": "Using the API - Hetzner Docs",
    "url": "https://docs.hetzner.com/cloud/api/getting-started/using-api/",
    "html": "Docs\nEnglish\nChoose platform\nDocs\nCloud\nAPI\nUsing the API\nLast change on 2023-07-25 • Created on 2022-11-21 • ID: CL-09EB0\n\nGet your API token ready\n\nIn order to use the API, you will need an API token. Make sure to create a separate API token for each project, as each API token is bound to the project it was created in and cannot be used for other projects.\n\nIf you haven't created an API token yet, do this now. The getting started \"Generating an API token\" explains step by step how this is done. Make sure to copy and save the API token after it was created, as it will not be possible to view the token again.\n\nIn all example commands, $API_TOKEN will be used as a placeholder. Remember that you will have to replace $API_TOKEN with your actual API token. Example:\n\n-H \"Authorization: Bearer $API_TOKEN\" \\\n-H \"Authorization: Bearer jEheVytlAoFl7F8MqUQ7jAo2hOXASztX\" \\\nExample project\n\n\n\nRefer to the documentation\n\nGo to the Cloud API documentation and use the menu bar on the left to navigate to the request that you would like to perform.\n\nDepending on the action, you will have to make one of four requests.\n\nThe four request types\n\n\n\nCopy the curl command\n\nAfter you have navigated to the action that you would like to perform, look for \"HTTP Request\":\n\nThe basic structure of \"HTTP Request\" is <request-type> <api-url-ending>.\n\nThis tells you which curl request you will have to use. There is also an example for every request on the right of the API documentation. In this example (\"HTTP Request\": GET /servers), the curl command would look like this:\n\ncurl \\\n    -H \"Authorization: Bearer $API_TOKEN\" \\\n    'https://api.hetzner.cloud/v1/servers'\n\nNote that you have to replace $API_TOKEN with your own API token.\n\nThe curl command explained\n\n\n\nAdd properties to a POST or PUT request\n\nWhen you create a new resource, or update an existing one, you will probably want to specify certain properties, such as a name or location.\n\nTo get started quickly, you can simply copy the example curl on the right. The example curl includes the most essential properties, and you can simply edit the values, or delete properties that you don't want to specify. Note, however, that some properties are mandatory and you have to specify them in the curl command. To learn more about the properties, you can look at the explanations given below the \"Request\" caption. Mandatory properties are marked as required.\n\nInstead of copying the curl command, you can also use the documentation below the \"Request\" caption. It gives you a list of all available properties along with their value type and a short description of what the property is used for.\n\nproperty value\nDescription of the property\n\nTo add a property to the curl command, use this format:\n\ncurl \\\n   -X {request-type} \\\n   -H \"Authorization: Bearer $API_TOKEN\" \\\n   -H \"Content-Type: application/json\" \\\n   -d '{\"property\":value,\"property\":value,...}' \\\n   'https://api.hetzner.cloud/v1/{api-url-ending}'\n\n\n\nThe different value types:\n\nvalue\tformat\nstring\t\"any-text\"\ninteger\t12\nobject\t{\"property\":value}\nboolean\ttrue\nfalse\nnullable\tnull\nExample request\n\n\n\nWhen it says array of ..., you can simply use the format \"property\":[value]. The individual values are separated by comma:\n\narray of ...\tformat\nstrings\t[\"any-text\",\"any-text\"]\nintegers\t[12,43]\nobjects\t[{\"property\":value,\"property\":value}]\n\n\n\nQuery Parameters\n\nQuery parameters make it possible to refine the results that are shown for a request. For example, you could specify that only resources with a certain label should be returned.\n\nFormat to refine the results:\n\nA simple query parameter\n\n\nhttps://api.hetzner.cloud/v1/{api-url-ending}?parameter=value\n\nA query parameter with an enum value\n\"enum values\" are predefined values that you can just copy and paste to the URL.\n\nhttps://api.hetzner.cloud/v1/{api-url-ending}?parameter={enum-value}\n\nTwo or more query parameters\nThe first parameter that is added to the URL begins with a question mark ?. Every other parameter that follows begins with an \"and\" sign &.\n\nhttps://api.hetzner.cloud/v1/{api-url-ending}?parameter=value&parameter=value\n\nIf you want to refine the results to a certain request, you can refer to \"Query Parameters\". This section gives you a list of any parameters that are available for a specific request.\n\nparameter value\nDescription of the parameter\nExamples\n\n\n\nExecute the curl command\n\nAfter you have copied and modified the curl command, make sure you have also added the correct API token. Then, execute the command using a command-line interface (CLI).\n\nAfter you executed the command, you will get a response that will let you know if the request was successful. Any changes you make via the API are also displayed in the Cloud Console.\n\n\n\n\nNext:\n\nGenerating an API token\n\nConnecting to a Server\n\nLegal noticeData privacySystem policiesTerms and conditions\n© 2024. Hetzner Online GmbH. All Rights Reserved."
  },
  {
    "title": "Generating an API token - Hetzner Docs",
    "url": "https://docs.hetzner.com/cloud/api/getting-started/generating-api-token/",
    "html": "Docs\nEnglish\nCloud\nOverview\nGeneral\nBilling\nServers\nApps\nVolumes\nFirewalls\nNetworks\nFloating IPs\nLoad Balancers\nPlacement Groups\nAPI\nShow all\nFAQ\nGetting Started\nGenerating an API token\nUsing the API\nTechnical Details\nDocs\nCloud\nAPI\nGenerating an API token\nLast change on 2022-08-10 • Created on 2021-12-13 • ID: CL-046E6\n\nTo generate an API token on your Cloud Console, please open your project and do the following:\n\nGo to Security on the left menu bar\n\nGo to API TOKENS on the upper menu bar\n\nSelect GENERATE API TOKEN\n\nCreate your API token\n\nEnter a description in the upper text box.\n\nChoose a permission. You can choose between Read and Read & Write.\n\nIf you select Read, the token will only be allowed to perform GET requests.\n\nIf you select Read & Write, the token will be allowed to perform GET, DELETE, PUT and POST requests.\n\nCopy your API token\n\nYou now have an API token. Note that it is not possible to view the token again once the window has been closed.\n\n\n\n\nPlease note: Your secret API token has to be included in every request you send to the API.\n\nExample curl:\n\ncurl \\\n\t-H \"Authorization: Bearer $API_TOKEN\" \\\n    ...\n\n\n\nNext:\n\nEnabling Backups\n\nCreating a Firewall\n\nLegal noticeData privacySystem policiesTerms and conditions\n© 2024. Hetzner Online GmbH. All Rights Reserved."
  },
  {
    "title": "FAQ - Hetzner Docs",
    "url": "https://docs.hetzner.com/cloud/api/faq/",
    "html": "Docs\nEnglish\nChoose platform\nDocs\nCloud\nFAQ\nLast change on 2023-03-22 • Created on 2020-07-02 • ID: CL-85E5D\nCan I access your service using an API?\n\nOf course! You can find our API documentation at docs.hetzner.cloud.\n\nIf you used our API to develop something, we would appreciate your feedback. Please let us know about it by writing a support request using your Cloud Console account.\n\nHow are API tokens stored?\n\nIn order to access our API, you will need to generate an API token, which is a 64 byte string. The last 32 bytes of this key are secret. The first 32 bytes are a prefix which is used for identification, similar to a username. When the token is created, we will display the full version only once.\n\nAfter that, your token cannot be retrieved in full again since the secret portion is only stored in a hashed format. The prefix can be retrieved again to identify the token, for example, in the list of account activities.\n\nThe prefix part itself does not enable access to the API since the secret part is needed as well.\n\nDo you sponsor efforts to integrate Hetzner Cloud into Open Source libs?\n\nYes, we do! If you are developing integrations based on our API, and your product is Open Source, you may be eligible for a free one time € 50 (excl. VAT) credit on your account. Please contact us by writing a support request from your Cloud Console account, and let us know the following:\n\nThe type of integration you would like to develop\nThe link to the GitHub repo you will use for the project\nLink(s) to some other Open Source work you have already done (if you have done so)\n\nYou can find a list of integrations that are already done or are being worked on here:\n\nhttps://github.com/hetznercloud/awesome-hcloud\n\nWe'd love to hear from you! :)\n\nIs there a command line (CLI) tool to access Hetzner Cloud?\n\nYes. We provide it as an Open Source project here: https://github.com/hetznercloud/cli\n\nIf you would like to contribute or extend it, please do so by opening pull requests.\n\nIs there a library that lets me access Hetzner Cloud using my programming language?\n\nWe currently provide Open Source libraries for Go and Python.\n\nYou can find inofficial libraries for many languages at our integrations list: https://github.com/hetznercloud/awesome-hcloud\n\nSince our API is very easy to use, you may not even need a full lib — a quick HTTPS request may be enough. Check out our API documentation at docs.hetzner.cloud.\n\nTABLE OF CONTENTS\nLegal noticeData privacySystem policiesTerms and conditions\n© 2024. Hetzner Online GmbH. All Rights Reserved."
  },
  {
    "title": "API - Hetzner Docs",
    "url": "https://docs.hetzner.com/cloud/api/",
    "html": "Docs\nEnglish\nChoose platform\nDocs\nCloud\nAPI\nAPI\nFAQ\nGetting Started\nGenerating an API token\nUsing the API\nLegal noticeData privacySystem policiesTerms and conditions\n© 2024. Hetzner Online GmbH. All Rights Reserved."
  }
]