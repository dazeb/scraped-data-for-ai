[
  {
    "title": "Laravel - shadcn/ui",
    "url": "https://ui.shadcn.com/docs/installation/laravel",
    "html": "shadcn/ui\nDocs\nComponents\nThemes\nExamples\nBlocks\nGitHub\nSearch documentation...\n⌘\nK\nGitHub\nTwitter\nToggle theme\nGetting Started\nIntroduction\nInstallation\ncomponents.json\nTheming\nDark mode\nCLI\nTypography\nFigma\nChangelog\nComponents\nAccordion\nAlert\nAlert Dialog\nAspect Ratio\nAvatar\nBadge\nBreadcrumb\nNew\nButton\nCalendar\nCard\nCarousel\nCheckbox\nCollapsible\nCombobox\nCommand\nContext Menu\nData Table\nDate Picker\nDialog\nDrawer\nDropdown Menu\nForm\nHover Card\nInput\nInput OTP\nNew\nLabel\nMenubar\nNavigation Menu\nPagination\nPopover\nProgress\nRadio Group\nResizable\nScroll Area\nSelect\nSeparator\nSheet\nSkeleton\nSlider\nSonner\nSwitch\nTable\nTabs\nTextarea\nToast\nToggle\nToggle Group\nTooltip\nDocs\nLaravel\nLaravel\n\nInstall and configure Laravel with Inertia\n\nCreate project\n\nStart by creating a new Laravel project with Inertia and React using the laravel installer laravel new my-app:\n\nlaravel new my-app --typescript --breeze --stack=react --git --no-interaction\nCopy\nRun the CLI\n\nRun the shadcn-ui init command to setup your project:\n\nnpx shadcn-ui@latest init\nCopy\nConfigure components.json\n\nYou will be asked a few questions to configure components.json:\n\nWould you like to use TypeScript (recommended)? no / yes\nWhich style would you like to use? › Default\nWhich color would you like to use as base color? › Slate\nWhere is your global CSS file? › resources/css/app.css\nDo you want to use CSS variables for colors? › no / yes\nWhere is your tailwind.config.js located? › tailwind.config.js\nConfigure the import alias for components: › @/Components\nConfigure the import alias for utils: › @/lib/utils\nAre you using React Server Components? › no / yes\nCopy\nUpdate tailwind.config.js\n\nThe shadcn-ui CLI will automatically overwrite your tailwind.config.js. Update it to look like this:\n\nimport forms from \"@tailwindcss/forms\"\nimport defaultTheme from \"tailwindcss/defaultTheme\"\n \n/** @type {import('tailwindcss').Config} */\nexport default {\n  darkMode: \"class\",\n  content: [\n    \"./vendor/laravel/framework/src/Illuminate/Pagination/resources/views/*.blade.php\",\n    \"./storage/framework/views/*.php\",\n    \"./resources/views/**/*.blade.php\",\n    \"./resources/js/**/*.tsx\",\n  ],\n \n  theme: {\n    container: {\n      center: true,\n      padding: \"2rem\",\n      screens: {\n        \"2xl\": \"1400px\",\n      },\n    },\n    extend: {\n      colors: {\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n      },\n      borderRadius: {\n        lg: `var(--radius)`,\n        md: `calc(var(--radius) - 2px)`,\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      fontFamily: {\n        sans: [\"Figtree\", ...defaultTheme.fontFamily.sans],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: 0 },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: 0 },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n \n  plugins: [forms, require(\"tailwindcss-animate\")],\n}\nCopy\nThat's it\n\nYou can now start adding components to your project.\n\nnpx shadcn-ui@latest add button\nCopy\n\nThe command above will add the Button component to your project. You can then import it like this:\n\nimport { Button } from \"@/Components/ui/button\"\n \nexport default function Home() {\n  return (\n    <div>\n      <Button>Click me</Button>\n    </div>\n  )\n}\nCopy\n\nOn This Page\n\nCreate project\nRun the CLI\nConfigure components.json\nUpdate tailwind.config.js\nThat's it\n\nBuilt by shadcn. The source code is available on GitHub."
  },
  {
    "title": "Manual Installation - shadcn/ui",
    "url": "https://ui.shadcn.com/docs/installation/manual",
    "html": "shadcn/ui\nDocs\nComponents\nThemes\nExamples\nBlocks\nGitHub\nSearch documentation...\n⌘\nK\nGitHub\nTwitter\nToggle theme\nGetting Started\nIntroduction\nInstallation\ncomponents.json\nTheming\nDark mode\nCLI\nTypography\nFigma\nChangelog\nComponents\nAccordion\nAlert\nAlert Dialog\nAspect Ratio\nAvatar\nBadge\nBreadcrumb\nNew\nButton\nCalendar\nCard\nCarousel\nCheckbox\nCollapsible\nCombobox\nCommand\nContext Menu\nData Table\nDate Picker\nDialog\nDrawer\nDropdown Menu\nForm\nHover Card\nInput\nInput OTP\nNew\nLabel\nMenubar\nNavigation Menu\nPagination\nPopover\nProgress\nRadio Group\nResizable\nScroll Area\nSelect\nSeparator\nSheet\nSkeleton\nSlider\nSonner\nSwitch\nTable\nTabs\nTextarea\nToast\nToggle\nToggle Group\nTooltip\nDocs\nManual Installation\nManual Installation\n\nAdd dependencies to your project manually.\n\nAdd Tailwind CSS\n\nComponents are styled using Tailwind CSS. You need to install Tailwind CSS in your project.\n\nFollow the Tailwind CSS installation instructions to get started.\n\nAdd dependencies\n\nAdd the following dependencies to your project:\n\nnpm install tailwindcss-animate class-variance-authority clsx tailwind-merge\nCopy\nAdd icon library\n\nIf you're using the default style, install lucide-react:\n\nnpm install lucide-react\nCopy\n\nIf you're using the new-york style, install @radix-ui/react-icons:\n\nnpm install @radix-ui/react-icons\nCopy\nConfigure path aliases\n\nI use the @ alias. This is how I configure it in tsconfig.json:\n\ntsconfig.json\n{\n  \"compilerOptions\": {\n    \"baseUrl\": \".\",\n    \"paths\": {\n      \"@/*\": [\"./*\"]\n    }\n  }\n}\nCopy\n\nThe @ alias is a preference. You can use other aliases if you want.\n\nIf you use a different alias such as ~, you'll need to update import statements when adding components.\n\nConfigure tailwind.config.js\n\nHere's what my tailwind.config.js file looks like:\n\ntailwind.config.js\nconst { fontFamily } = require(\"tailwindcss/defaultTheme\")\n \n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  darkMode: [\"class\"],\n  content: [\"app/**/*.{ts,tsx}\", \"components/**/*.{ts,tsx}\"],\n  theme: {\n    container: {\n      center: true,\n      padding: \"2rem\",\n      screens: {\n        \"2xl\": \"1400px\",\n      },\n    },\n    extend: {\n      colors: {\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n      },\n      borderRadius: {\n        lg: `var(--radius)`,\n        md: `calc(var(--radius) - 2px)`,\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\", ...fontFamily.sans],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\")],\n}\nCopy\nConfigure styles\n\nAdd the following to your styles/globals.css file. You can learn more about using CSS variables for theming in the theming section.\n\nglobals.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n \n@layer base {\n  :root {\n    --background: 0 0% 100%;\n    --foreground: 222.2 47.4% 11.2%;\n \n    --muted: 210 40% 96.1%;\n    --muted-foreground: 215.4 16.3% 46.9%;\n \n    --popover: 0 0% 100%;\n    --popover-foreground: 222.2 47.4% 11.2%;\n \n    --border: 214.3 31.8% 91.4%;\n    --input: 214.3 31.8% 91.4%;\n \n    --card: 0 0% 100%;\n    --card-foreground: 222.2 47.4% 11.2%;\n \n    --primary: 222.2 47.4% 11.2%;\n    --primary-foreground: 210 40% 98%;\n \n    --secondary: 210 40% 96.1%;\n    --secondary-foreground: 222.2 47.4% 11.2%;\n \n    --accent: 210 40% 96.1%;\n    --accent-foreground: 222.2 47.4% 11.2%;\n \n    --destructive: 0 100% 50%;\n    --destructive-foreground: 210 40% 98%;\n \n    --ring: 215 20.2% 65.1%;\n \n    --radius: 0.5rem;\n  }\n \n  .dark {\n    --background: 224 71% 4%;\n    --foreground: 213 31% 91%;\n \n    --muted: 223 47% 11%;\n    --muted-foreground: 215.4 16.3% 56.9%;\n \n    --accent: 216 34% 17%;\n    --accent-foreground: 210 40% 98%;\n \n    --popover: 224 71% 4%;\n    --popover-foreground: 215 20.2% 65.1%;\n \n    --border: 216 34% 17%;\n    --input: 216 34% 17%;\n \n    --card: 224 71% 4%;\n    --card-foreground: 213 31% 91%;\n \n    --primary: 210 40% 98%;\n    --primary-foreground: 222.2 47.4% 1.2%;\n \n    --secondary: 222.2 47.4% 11.2%;\n    --secondary-foreground: 210 40% 98%;\n \n    --destructive: 0 63% 31%;\n    --destructive-foreground: 210 40% 98%;\n \n    --ring: 216 34% 17%;\n \n    --radius: 0.5rem;\n  }\n}\n \n@layer base {\n  * {\n    @apply border-border;\n  }\n  body {\n    @apply bg-background text-foreground;\n    font-feature-settings: \"rlig\" 1, \"calt\" 1;\n  }\n}\nCopy\nAdd a cn helper\n\nI use a cn helper to make it easier to conditionally add Tailwind CSS classes. Here's how I define it in lib/utils.ts:\n\nlib/utils.ts\nimport { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n \nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\nCopy\nThat's it\n\nYou can now start adding components to your project.\n\nOn This Page\n\nAdd Tailwind CSS\nAdd dependencies\nAdd icon library\nConfigure path aliases\nConfigure tailwind.config.js\nConfigure styles\nAdd a cn helper\nThat's it\n\nBuilt by shadcn. The source code is available on GitHub."
  },
  {
    "title": "Astro - shadcn/ui",
    "url": "https://ui.shadcn.com/docs/installation/astro",
    "html": "shadcn/ui\nDocs\nComponents\nThemes\nExamples\nBlocks\nGitHub\nSearch documentation...\n⌘\nK\nGitHub\nTwitter\nToggle theme\nGetting Started\nIntroduction\nInstallation\ncomponents.json\nTheming\nDark mode\nCLI\nTypography\nFigma\nChangelog\nComponents\nAccordion\nAlert\nAlert Dialog\nAspect Ratio\nAvatar\nBadge\nBreadcrumb\nNew\nButton\nCalendar\nCard\nCarousel\nCheckbox\nCollapsible\nCombobox\nCommand\nContext Menu\nData Table\nDate Picker\nDialog\nDrawer\nDropdown Menu\nForm\nHover Card\nInput\nInput OTP\nNew\nLabel\nMenubar\nNavigation Menu\nPagination\nPopover\nProgress\nRadio Group\nResizable\nScroll Area\nSelect\nSeparator\nSheet\nSkeleton\nSlider\nSonner\nSwitch\nTable\nTabs\nTextarea\nToast\nToggle\nToggle Group\nTooltip\nDocs\nAstro\nAstro\n\nInstall and configure Astro.\n\nCreate project\n\nStart by creating a new Astro project:\n\nnpm create astro@latest\nCopy\nConfigure your Astro project\n\nYou will be asked a few questions to configure your project:\n\n- Where should we create your new project?\n./your-app-name\n- How would you like to start your new project?\nChoose a starter template (or Empty)\n- Install dependencies?\nYes\n- Do you plan to write TypeScript?\nYes\n- How strict should TypeScript be?\nStrict\n- Initialize a new git repository? (optional)\nYes/No\nCopy\nAdd React to your project\n\nInstall React using the Astro CLI:\n\nnpx astro add react\nCopy\n\nAnswer Yes to all the question prompted by the CLI when installing React.\n\nAdd Tailwind CSS to your project\n\nInstall Tailwind CSS using the Astro CLI:\n\nnpx astro add tailwind\nCopy\n\nAnswer Yes to all the question prompted by the CLI when installing Tailwind CSS.\n\nEdit tsconfig.json file\n\nAdd the following code to the tsconfig.json file to resolve paths:\n\n{\n  \"compilerOptions\": {\n    // ...\n    \"baseUrl\": \".\",\n    \"paths\": {\n      \"@/*\": [\n        \"./src/*\"\n      ]\n    }\n    // ...\n  }\n}\nCopy\nRun the CLI\n\nRun the shadcn-ui init command to setup your project:\n\nnpx shadcn-ui@latest init\nCopy\nConfigure components.json\n\nYou will be asked a few questions to configure components.json:\n\nWould you like to use TypeScript (recommended)? no / yes\nWhich style would you like to use? › Default\nWhich color would you like to use as base color? › Slate\nWhere is your global CSS file? › › ./src/styles/globals.css\nDo you want to use CSS variables for colors? › no / yes\nWhere is your tailwind.config.js located? › tailwind.config.mjs\nConfigure the import alias for components: › @/components\nConfigure the import alias for utils: › @/lib/utils\nAre you using React Server Components? › no\nCopy\nImport the globals.css file\n\nImport the globals.css file in the src/pages/index.astro file:\n\n---\nimport '@/styles/globals.css'\n---\nCopy\nUpdate astro tailwind config\n\nTo prevent serving the Tailwind base styles twice, we need to tell Astro not to apply the base styles, since we already include them in our own globals.css file. To do this, set the applyBaseStyles config option for the tailwind plugin in astro.config.mjs to false.\n\nexport default defineConfig({\n  integrations: [\n    tailwind({\n      applyBaseStyles: false,\n    }),\n  ],\n})\nCopy\nUpdate tailwind.config.mjs\n\nWhen running npx shadcn-ui@latest init, your tailwind config for content will be overwritten. To fix this, change the module.exports to export default and the content section with the code below to your tailwind.config.mjs file:\n\nexport default {\n  content: [\"./src/**/*.{astro,html,js,jsx,md,mdx,svelte,ts,tsx,vue}\"],\n}\nCopy\nThat's it\n\nYou can now start adding components to your project.\n\nnpx shadcn-ui@latest add button\nCopy\n\nThe command above will add the Button component to your project. You can then import it like this:\n\n---\nimport { Button } from \"@/components/ui/button\"\n---\n \n<html lang=\"en\">\n\t<head>\n\t\t<title>Astro</title>\n\t</head>\n\t<body>\n\t\t<Button>Hello World</Button>\n\t</body>\n</html>\nCopy\n\nOn This Page\n\nCreate project\nConfigure your Astro project\nAdd React to your project\nAdd Tailwind CSS to your project\nEdit tsconfig.json file\nRun the CLI\nConfigure components.json\nImport the globals.css file\nUpdate astro tailwind config\nUpdate tailwind.config.mjs\nThat's it\n\nBuilt by shadcn. The source code is available on GitHub."
  },
  {
    "title": "Gatsby - shadcn/ui",
    "url": "https://ui.shadcn.com/docs/installation/gatsby",
    "html": "shadcn/ui\nDocs\nComponents\nThemes\nExamples\nBlocks\nGitHub\nSearch documentation...\n⌘\nK\nGitHub\nTwitter\nToggle theme\nGetting Started\nIntroduction\nInstallation\ncomponents.json\nTheming\nDark mode\nCLI\nTypography\nFigma\nChangelog\nComponents\nAccordion\nAlert\nAlert Dialog\nAspect Ratio\nAvatar\nBadge\nBreadcrumb\nNew\nButton\nCalendar\nCard\nCarousel\nCheckbox\nCollapsible\nCombobox\nCommand\nContext Menu\nData Table\nDate Picker\nDialog\nDrawer\nDropdown Menu\nForm\nHover Card\nInput\nInput OTP\nNew\nLabel\nMenubar\nNavigation Menu\nPagination\nPopover\nProgress\nRadio Group\nResizable\nScroll Area\nSelect\nSeparator\nSheet\nSkeleton\nSlider\nSonner\nSwitch\nTable\nTabs\nTextarea\nToast\nToggle\nToggle Group\nTooltip\nDocs\nGatsby\nGatsby\n\nInstall and configure Gatsby.\n\nCreate project\n\nStart by creating a new Gatsby project using create-gatsby:\n\nnpm init gatsby\nCopy\nConfigure your Gatsby project to use TypeScript and Tailwind CSS\n\nYou will be asked a few questions to configure your project:\n\n✔ What would you like to call your site?\n· your-app-name\n✔ What would you like to name the folder where your site will be created?\n· your-app-name\n✔ Will you be using JavaScript or TypeScript?\n· TypeScript\n✔ Will you be using a CMS?\n· Choose whatever you want\n✔ Would you like to install a styling system?\n· Tailwind CSS\n✔ Would you like to install additional features with other plugins?\n· Choose whatever you want\n✔ Shall we do this? (Y/n) · Yes\nCopy\nEdit tsconfig.json file\n\nAdd the following code to the tsconfig.json file to resolve paths:\n\n{\n  \"compilerOptions\": {\n    // ...\n    \"baseUrl\": \".\",\n    \"paths\": {\n      \"@/*\": [\n        \"./src/*\"\n      ]\n    }\n    // ...\n  }\n}\nCopy\nCreate gatsby-node.ts file\n\nCreate a gatsby-node.ts file at the root of your project if it doesn’t already exist, and add the code below to the gatsby-node file so your app can resolve paths:\n\nimport * as path from \"path\"\n \nexport const onCreateWebpackConfig = ({ actions }) => {\n  actions.setWebpackConfig({\n    resolve: {\n      alias: {\n        \"@/components\": path.resolve(__dirname, \"src/components\"),\n        \"@/lib/utils\": path.resolve(__dirname, \"src/lib/utils\"),\n      },\n    },\n  })\n}\nCopy\nRun the CLI\n\nRun the shadcn-ui init command to setup your project:\n\nnpx shadcn-ui@latest init\nCopy\nConfigure components.json\n\nYou will be asked a few questions to configure components.json:\n\nWould you like to use TypeScript (recommended)? no / yes\nWhich style would you like to use? › Default\nWhich color would you like to use as base color? › Slate\nWhere is your global CSS file? › › ./src/styles/globals.css\nDo you want to use CSS variables for colors? › no / yes\nWhere is your tailwind.config.js located? › tailwind.config.js\nConfigure the import alias for components: › @/components\nConfigure the import alias for utils: › @/lib/utils\nAre you using React Server Components? › no\nCopy\nThat's it\n\nYou can now start adding components to your project.\n\nnpx shadcn-ui@latest add button\nCopy\n\nThe command above will add the Button component to your project. You can then import it like this:\n\nimport { Button } from \"@/components/ui/button\"\n \nexport default function Home() {\n  return (\n    <div>\n      <Button>Click me</Button>\n    </div>\n  )\n}\nCopy\n\nOn This Page\n\nCreate project\nConfigure your Gatsby project to use TypeScript and Tailwind CSS\nEdit tsconfig.json file\nCreate gatsby-node.ts file\nRun the CLI\nConfigure components.json\nThat's it\n\nBuilt by shadcn. The source code is available on GitHub."
  },
  {
    "title": "Remix - shadcn/ui",
    "url": "https://ui.shadcn.com/docs/installation/remix",
    "html": "shadcn/ui\nDocs\nComponents\nThemes\nExamples\nBlocks\nGitHub\nSearch documentation...\n⌘\nK\nGitHub\nTwitter\nToggle theme\nGetting Started\nIntroduction\nInstallation\ncomponents.json\nTheming\nDark mode\nCLI\nTypography\nFigma\nChangelog\nComponents\nAccordion\nAlert\nAlert Dialog\nAspect Ratio\nAvatar\nBadge\nBreadcrumb\nNew\nButton\nCalendar\nCard\nCarousel\nCheckbox\nCollapsible\nCombobox\nCommand\nContext Menu\nData Table\nDate Picker\nDialog\nDrawer\nDropdown Menu\nForm\nHover Card\nInput\nInput OTP\nNew\nLabel\nMenubar\nNavigation Menu\nPagination\nPopover\nProgress\nRadio Group\nResizable\nScroll Area\nSelect\nSeparator\nSheet\nSkeleton\nSlider\nSonner\nSwitch\nTable\nTabs\nTextarea\nToast\nToggle\nToggle Group\nTooltip\nDocs\nRemix\nRemix\n\nInstall and configure Remix.\n\nCreate project\n\nStart by creating a new Remix project using create-remix:\n\nnpx create-remix@latest my-app\nCopy\nRun the CLI\n\nRun the shadcn-ui init command to setup your project:\n\nnpx shadcn-ui@latest init\nCopy\nConfigure components.json\n\nYou will be asked a few questions to configure components.json:\n\nWould you like to use TypeScript (recommended)? no / yes\nWhich style would you like to use? › Default\nWhich color would you like to use as base color? › Slate\nWhere is your global CSS file? › app/tailwind.css\nDo you want to use CSS variables for colors? › no / yes\nWhere is your tailwind.config.js located? › tailwind.config.js\nConfigure the import alias for components: › ~/components\nConfigure the import alias for utils: › ~/lib/utils\nAre you using React Server Components? › no\nCopy\nApp structure\n\nNote: This app structure is only a suggestion. You can place the files wherever you want.\n\nPlace the UI components in the app/components/ui folder.\nYour own components can be placed in the app/components folder.\nThe app/lib folder contains all the utility functions. We have a utils.ts where we define the cn helper.\nThe app/tailwind.css file contains the global CSS.\nInstall Tailwind CSS\nnpm add -D tailwindcss@latest autoprefixer@latest\nCopy\n\nThen we create a postcss.config.js file:\n\nexport default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\nCopy\n\nAnd finally we add the following to our remix.config.js file:\n\n/** @type {import('@remix-run/dev').AppConfig} */\nexport default {\n  ...\n  tailwind: true,\n  postcss: true,\n  ...\n};\nCopy\nAdd tailwind.css to your app\n\nIn your app/root.tsx file, import the tailwind.css file:\n\nimport styles from \"./tailwind.css\"\n \nexport const links: LinksFunction = () => [\n  { rel: \"stylesheet\", href: styles },\n  ...(cssBundleHref ? [{ rel: \"stylesheet\", href: cssBundleHref }] : []),\n]\nCopy\nThat's it\n\nYou can now start adding components to your project.\n\nnpx shadcn-ui@latest add button\nCopy\n\nThe command above will add the Button component to your project. You can then import it like this:\n\nimport { Button } from \"~/components/ui/button\"\n \nexport default function Home() {\n  return (\n    <div>\n      <Button>Click me</Button>\n    </div>\n  )\n}\nCopy\n\nOn This Page\n\nCreate project\nRun the CLI\nConfigure components.json\nApp structure\nInstall Tailwind CSS\nAdd tailwind.css to your app\nThat's it\n\nBuilt by shadcn. The source code is available on GitHub."
  },
  {
    "title": "Next.js - shadcn/ui",
    "url": "https://ui.shadcn.com/docs/installation/next",
    "html": "shadcn/ui\nDocs\nComponents\nThemes\nExamples\nBlocks\nGitHub\nSearch documentation...\n⌘\nK\nGitHub\nTwitter\nToggle theme\nGetting Started\nIntroduction\nInstallation\ncomponents.json\nTheming\nDark mode\nCLI\nTypography\nFigma\nChangelog\nComponents\nAccordion\nAlert\nAlert Dialog\nAspect Ratio\nAvatar\nBadge\nBreadcrumb\nNew\nButton\nCalendar\nCard\nCarousel\nCheckbox\nCollapsible\nCombobox\nCommand\nContext Menu\nData Table\nDate Picker\nDialog\nDrawer\nDropdown Menu\nForm\nHover Card\nInput\nInput OTP\nNew\nLabel\nMenubar\nNavigation Menu\nPagination\nPopover\nProgress\nRadio Group\nResizable\nScroll Area\nSelect\nSeparator\nSheet\nSkeleton\nSlider\nSonner\nSwitch\nTable\nTabs\nTextarea\nToast\nToggle\nToggle Group\nTooltip\nDocs\nNext.js\nNext.js\n\nInstall and configure Next.js.\n\nCreate project\n\nStart by creating a new Next.js project using create-next-app:\n\nnpx create-next-app@latest my-app --typescript --tailwind --eslint\nCopy\nRun the CLI\n\nRun the shadcn-ui init command to setup your project:\n\nnpx shadcn-ui@latest init\nCopy\nConfigure components.json\n\nYou will be asked a few questions to configure components.json:\n\nWhich style would you like to use? › Default\nWhich color would you like to use as base color? › Slate\nDo you want to use CSS variables for colors? › no / yes\nCopy\nFonts\n\nI use Inter as the default font. Inter is not required. You can replace it with any other font.\n\nHere's how I configure Inter for Next.js:\n\n1. Import the font in the root layout:\n\nimport \"@/styles/globals.css\"\nimport { Inter as FontSans } from \"next/font/google\"\n \nimport { cn } from \"@/lib/utils\"\n \nconst fontSans = FontSans({\n  subsets: [\"latin\"],\n  variable: \"--font-sans\",\n})\n \nexport default function RootLayout({ children }: RootLayoutProps) {\n  return (\n    <html lang=\"en\" suppressHydrationWarning>\n      <head />\n      <body\n        className={cn(\n          \"min-h-screen bg-background font-sans antialiased\",\n          fontSans.variable\n        )}\n      >\n        ...\n      </body>\n    </html>\n  )\n}\nCopy\n\n2. Configure theme.extend.fontFamily in tailwind.config.js\n\nconst { fontFamily } = require(\"tailwindcss/defaultTheme\")\n \n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  darkMode: [\"class\"],\n  content: [\"app/**/*.{ts,tsx}\", \"components/**/*.{ts,tsx}\"],\n  theme: {\n    extend: {\n      fontFamily: {\n        sans: [\"var(--font-sans)\", ...fontFamily.sans],\n      },\n    },\n  },\n}\nCopy\nApp structure\n\nHere's how I structure my Next.js apps. You can use this as a reference:\n\n.\n├── app\n│   ├── layout.tsx\n│   └── page.tsx\n├── components\n│   ├── ui\n│   │   ├── alert-dialog.tsx\n│   │   ├── button.tsx\n│   │   ├── dropdown-menu.tsx\n│   │   └── ...\n│   ├── main-nav.tsx\n│   ├── page-header.tsx\n│   └── ...\n├── lib\n│   └── utils.ts\n├── styles\n│   └── globals.css\n├── next.config.js\n├── package.json\n├── postcss.config.js\n├── tailwind.config.js\n└── tsconfig.json\nCopy\nI place the UI components in the components/ui folder.\nThe rest of the components such as <PageHeader /> and <MainNav /> are placed in the components folder.\nThe lib folder contains all the utility functions. I have a utils.ts where I define the cn helper.\nThe styles folder contains the global CSS.\nThat's it\n\nYou can now start adding components to your project.\n\nnpx shadcn-ui@latest add button\nCopy\n\nThe command above will add the Button component to your project. You can then import it like this:\n\nimport { Button } from \"@/components/ui/button\"\n \nexport default function Home() {\n  return (\n    <div>\n      <Button>Click me</Button>\n    </div>\n  )\n}\nCopy\n\nOn This Page\n\nCreate project\nRun the CLI\nConfigure components.json\nFonts\nApp structure\nThat's it\n\nBuilt by shadcn. The source code is available on GitHub."
  },
  {
    "title": "Vite - shadcn/ui",
    "url": "https://ui.shadcn.com/docs/installation/vite",
    "html": "shadcn/ui\nDocs\nComponents\nThemes\nExamples\nBlocks\nGitHub\nSearch documentation...\n⌘\nK\nGitHub\nTwitter\nToggle theme\nGetting Started\nIntroduction\nInstallation\ncomponents.json\nTheming\nDark mode\nCLI\nTypography\nFigma\nChangelog\nComponents\nAccordion\nAlert\nAlert Dialog\nAspect Ratio\nAvatar\nBadge\nBreadcrumb\nNew\nButton\nCalendar\nCard\nCarousel\nCheckbox\nCollapsible\nCombobox\nCommand\nContext Menu\nData Table\nDate Picker\nDialog\nDrawer\nDropdown Menu\nForm\nHover Card\nInput\nInput OTP\nNew\nLabel\nMenubar\nNavigation Menu\nPagination\nPopover\nProgress\nRadio Group\nResizable\nScroll Area\nSelect\nSeparator\nSheet\nSkeleton\nSlider\nSonner\nSwitch\nTable\nTabs\nTextarea\nToast\nToggle\nToggle Group\nTooltip\nDocs\nVite\nVite\n\nInstall and configure Vite.\n\nCreate project\n\nStart by creating a new React project using vite:\n\nnpm create vite@latest\nCopy\nAdd Tailwind and its configuration\n\nInstall tailwindcss and its peer dependencies, then generate your tailwind.config.js and postcss.config.js files:\n\nnpm install -D tailwindcss postcss autoprefixer\n \nnpx tailwindcss init -p\nCopy\nEdit tsconfig.json file\n\nAdd the following code to the tsconfig.json file to resolve paths:\n\n{\n  \"compilerOptions\": {\n    // ...\n    \"baseUrl\": \".\",\n    \"paths\": {\n      \"@/*\": [\n        \"./src/*\"\n      ]\n    }\n    // ...\n  }\n}\nCopy\nUpdate vite.config.ts\n\nAdd the following code to the vite.config.ts so your app can resolve paths without error\n\n# (so you can import \"path\" without error)\nnpm i -D @types/node\nCopy\nimport path from \"path\"\nimport react from \"@vitejs/plugin-react\"\nimport { defineConfig } from \"vite\"\n \nexport default defineConfig({\n  plugins: [react()],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(__dirname, \"./src\"),\n    },\n  },\n})\nCopy\nRun the CLI\n\nRun the shadcn-ui init command to setup your project:\n\nnpx shadcn-ui@latest init\nCopy\nConfigure components.json\n\nYou will be asked a few questions to configure components.json:\n\nWould you like to use TypeScript (recommended)? no / yes\nWhich style would you like to use? › Default\nWhich color would you like to use as base color? › Slate\nWhere is your global CSS file? › › src/index.css\nDo you want to use CSS variables for colors? › no / yes\nWhere is your tailwind.config.js located? › tailwind.config.js\nConfigure the import alias for components: › @/components\nConfigure the import alias for utils: › @/lib/utils\nAre you using React Server Components? › no / yes (no)\nCopy\nThat's it\n\nYou can now start adding components to your project.\n\nnpx shadcn-ui@latest add button\nCopy\n\nThe command above will add the Button component to your project. You can then import it like this:\n\nimport { Button } from \"@/components/ui/button\"\n \nexport default function Home() {\n  return (\n    <div>\n      <Button>Click me</Button>\n    </div>\n  )\n}\nCopy\n\nOn This Page\n\nCreate project\nAdd Tailwind and its configuration\nEdit tsconfig.json file\nUpdate vite.config.ts\nRun the CLI\nConfigure components.json\nThat's it\n\nBuilt by shadcn. The source code is available on GitHub."
  },
  {
    "title": "Installation - shadcn/ui",
    "url": "https://ui.shadcn.com/docs/installation",
    "html": "shadcn/ui\nDocs\nComponents\nThemes\nExamples\nBlocks\nGitHub\nSearch documentation...\n⌘\nK\nGitHub\nTwitter\nToggle theme\nGetting Started\nIntroduction\nInstallation\ncomponents.json\nTheming\nDark mode\nCLI\nTypography\nFigma\nChangelog\nComponents\nAccordion\nAlert\nAlert Dialog\nAspect Ratio\nAvatar\nBadge\nBreadcrumb\nNew\nButton\nCalendar\nCard\nCarousel\nCheckbox\nCollapsible\nCombobox\nCommand\nContext Menu\nData Table\nDate Picker\nDialog\nDrawer\nDropdown Menu\nForm\nHover Card\nInput\nInput OTP\nNew\nLabel\nMenubar\nNavigation Menu\nPagination\nPopover\nProgress\nRadio Group\nResizable\nScroll Area\nSelect\nSeparator\nSheet\nSkeleton\nSlider\nSonner\nSwitch\nTable\nTabs\nTextarea\nToast\nToggle\nToggle Group\nTooltip\nDocs\nInstallation\nInstallation\n\nHow to install dependencies and structure your app.\n\nFrameworks\n\nNext.js\n\nVite\n\nRemix\n\nGatsby\n\nAstro\n\nLaravel\n\nManual\n\nTypeScript\n\nThis project and the components are written in TypeScript. We recommend using TypeScript for your project as well.\n\nHowever we provide a JavaScript version of the components as well. The JavaScript version is available via the cli.\n\nTo opt-out of TypeScript, you can use the tsx flag in your components.json file.\n\ncomponents.json\n{\n  \"style\": \"default\",\n  \"tailwind\": {\n    \"config\": \"tailwind.config.js\",\n    \"css\": \"src/app/globals.css\",\n    \"baseColor\": \"zinc\",\n    \"cssVariables\": true\n  },\n  \"rsc\": false,\n  \"tsx\": false,\n  \"aliases\": {\n    \"utils\": \"~/lib/utils\",\n    \"components\": \"~/components\"\n  }\n}\nCopy\n\nTo configure import aliases, you can use the following jsconfig.json:\n\njsconfig.json\n{\n  \"compilerOptions\": {\n    \"paths\": {\n      \"@/*\": [\"./*\"]\n    }\n  }\n}\nCopy\nIntroduction\ncomponents.json\n\nOn This Page\n\nFrameworks\nTypeScript\n\nBuilt by shadcn. The source code is available on GitHub."
  }
]